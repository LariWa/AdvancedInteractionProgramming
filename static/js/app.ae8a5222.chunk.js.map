{"version":3,"sources":["pictures/previewImage.png","assets/fonts/SpaceMono-Regular.ttf","styles/loginImage.png","styles/registrationImage.png","hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","components/StyledText.tsx","components/EditViewInfo.tsx","views/modalView.tsx","presenters/modalPresenter.tsx","views/notFoundView.tsx","views/welcomeView.tsx","presenters/welcomePresenter.tsx","views/styles.js","views/loginView.tsx","loginSource.ts","redux/reducers/favouritesReducer.ts","redux/reducers/ingredientsReducer.ts","redux/reducers/index.ts","redux/store.ts","dbSource.ts","redux/actions/index.ts","components/modalMessage.tsx","components/errorMessage.tsx","presenters/loginPresenter.tsx","views/registrationView.tsx","presenters/registrationPresenter.tsx","components/dropdownMenu.tsx","views/searchView.tsx","resolvePromise.ts","views/promiseNoData.tsx","redux/actions/favouritesActions.ts","views/favBtnView.tsx","presenters/favouriteBtnPresenter.tsx","components/dishCard.tsx","presenters/dishCardPresenter.tsx","views/resultsView.tsx","presenters/searchPresenter.tsx","mealSouce.ts","views/recipeView.tsx","redux/actions/ingredientsActions.ts","presenters/recipePresenter.tsx","navigation/LinkingConfiguration.ts","presenters/favourtiesPresenter.tsx","views/groceryListView.tsx","presenters/groceryListPresenter.tsx","navigation/index.tsx","presenters/snackbarPresenter.tsx","App.tsx","hooks/useCachedResources.ts","index.js"],"names":["module","exports","useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","MonoText","fontFamily","EditViewInfo","path","styles","getStartedContainer","getStartedText","codeHighlightContainer","homeViewFilename","helpContainer","TouchableOpacity","onPress","handleHelpPress","helpLink","helpLinkText","WebBrowser","StyleSheet","create","alignItems","marginHorizontal","marginVertical","borderRadius","paddingHorizontal","fontSize","lineHeight","textAlign","marginTop","paddingVertical","ModalView","container","title","separator","StatusBar","Platform","OS","flex","justifyContent","fontWeight","height","width","ModalPresenter","NotFoundScreen","navigation","replace","link","linkText","padding","require","containerOne","containerTwo","borderTopLeftRadius","borderTopRightRadius","containerTwo_centered","alignContent","containerTwo_centered_h5","marginRight","marginLeft","containerTwo_centered_h6","button","paddingTop","paddingBottom","containerOne_image","top","left","position","WelcomeView","fill","Image","source","variant","getStarted","WelcomePresenter","navigate","styles_registrationPage","mainContainer","paddingLeft","paddingRight","mainContainer_textInput","marginBottom","border","mainContainer_h5","mainContainer_italics","fontStyle","textDecorationLine","overflow","mainContainer_button","boxShadow","maincontainer_image","bottom","right","error","styles_loginPage","borderColor","borderWidth","LoginView","initialValues","email","password","onSubmit","onLogin","validationSchema","signupSchema","handleChange","handleBlur","handleSubmit","values","errors","touched","TextInput","onChangeText","onBlur","value","placeholder","secureTextEntry","onNewUser","loading","axios","defaults","baseURL","initFavState","data","initIngrState","rootReducer","combineReducers","token","state","action","type","payload","user","favourites","success","console","log","filter","fav","ingredients","ingr","currentRecipe","snackbar","msg","visibility","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","getHeader","headers","authorization","getState","setUserData","username","dispatch","get","then","result","catch","setSnackbar","modalText","centeredView","modalView","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","ModalMessage","Modal","animationType","transparent","visible","modalVisible","onRequestClose","message","errorContainer","backdropFilter","errorContainer_button","ErrorView","onReturn","LoginPresenter","useDispatch","useState","setLoadingState","setError","status","setStatusState","setModalVisible","SignupSchema","Yup","shape","required","min","loginData","post","res","setTimeout","response","RegistrationView","confirmPassword","onRegister","disabled","RegistrationPresenter","oneOf","registerData","setNewUserData","dropdown","DropdownMenu","selected","setSelected","search","labelField","valueField","searchItem","onChange","mainContainer_filters","display","overflowX","textInput","searchButton","SearchView","spacing","onQueryChanged","onSearch","ScrollView","horizontal","direction","categories","onCategoriesSelected","areas","onAreasSelected","ingrToSelect","onIngredientsSelected","resolvePromise","promiseToResolve","promiseState","notifyACB","promise","err","promiseNoData","toString","ActivityIndicator","size","addFav","id","addFavourite","deleteFav","includes","deleteFavourite","FavBtnView","onClicked","icon","name","addedToFav","FavouriteBtnPresenter","useSelector","dishcard","dishcard_img","borderBottomLeftRadius","dishcard_details","borderBottomRightRadius","dishcard_details_header","dishcard_details_description","tag","dishcard_right","DishCard","onSelectedRecipe","strMealThumb","m","items","strMeal","wrap","strTags","split","map","idMeal","DishCardPresenter","recipe","ResultsView","header","results","r","SearchPresenter","setCategoriesState","setAreasState","setIngredientsState","selectedCategories","setSelectedCategories","selectedAreas","setSelectedAreas","selectedIngredients","setSelectedIngredients","query","setQueryState","setResultsState","React","topFavs","setTopFavs","topFavsLoading","setTopFavsLoading","mealsPromiseState","setMealsPromiseState","setPromise","setData","mealPromiseStateChanged","useEffect","all","elem","label","strCategory","strArea","strIngredient","ids","filterMeals","length","image","details","subheader","RecipeView","ingredient","onAddToList","trailing","AntDesign","strInstructions","addIngr","addIngredient","deleteIngr","deleteIngredient","RecipePresenter","route","params","linking","prefixes","Linking","config","screens","Root","TabOne","TabOneScreen","TabTwo","TabTwoScreen","TabThree","TabThreeScreen","TabFour","TabFourScreen","TabFive","TabFiveScreen","TabSix","TabSixScreen","TabSeven","TabEight","TabFourEight","NotFound","FavouritesPresenter","favouritesDetails","setFavouritesDetails","e","GroceryListView","onRemoveIngredient","GroceryListPresenter","addedToIngr","list","Navigation","colorScheme","NavigationContainer","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","Stack","createNativeStackNavigator","Navigator","Screen","component","BottomTabNavigator","options","headerShown","Group","screenOptions","presentation","BottomTab","createBottomTabNavigator","initialRouteName","tabBarActiveTintColor","tabBarIcon","TabBarIcon","tabName","headerRight","Pressable","opacity","pressed","FontAwesome","listeners","tabPress","Octicons","MaterialIcons","SnackbarPresenter","Snackbar","onDismiss","duration","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","loadResourcesAndDataAsync","useCachedResources","EntryPoint","registerRootComponent"],"mappings":"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","file":"static/js/app.ae8a5222.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/previewImage.dfdb6cdc.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/loginImage.2f21b2f9.png\";","module.exports = __webpack_public_path__ + \"static/media/registrationImage.9ecc3fe5.png\";","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n  },\r\n};\r\n","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import { Text, TextProps } from './Themed';\r\n\r\nexport function MonoText(props: TextProps) {\r\n  return <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />;\r\n}\r\n","import * as WebBrowser from 'expo-web-browser';\r\nimport { StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport { MonoText } from './StyledText';\r\nimport { Text, View } from './Themed';\r\n\r\nexport default function EditViewInfo({ path }: { path: string }) {\r\n  return (\r\n    <View>\r\n      <View style={styles.getStartedContainer}>\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Open up the code for this view:\r\n        </Text>\r\n\r\n        <View\r\n          style={[styles.codeHighlightContainer, styles.homeViewFilename]}\r\n          darkColor=\"rgba(255,255,255,0.05)\"\r\n          lightColor=\"rgba(0,0,0,0.05)\">\r\n          <MonoText>{path}</MonoText>\r\n        </View>\r\n\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Change any of the text, save the file, and your app will automatically update.\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.helpContainer}>\r\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\r\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\r\n            Tap here if your app doesn't automatically update after making changes\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction handleHelpPress() {\r\n  WebBrowser.openBrowserAsync(\r\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  getStartedContainer: {\r\n    alignItems: 'center',\r\n    marginHorizontal: 50,\r\n  },\r\n  homeViewFilename: {\r\n    marginVertical: 7,\r\n  },\r\n  codeHighlightContainer: {\r\n    borderRadius: 3,\r\n    paddingHorizontal: 4,\r\n  },\r\n  getStartedText: {\r\n    fontSize: 17,\r\n    lineHeight: 24,\r\n    textAlign: 'center',\r\n  },\r\n  helpContainer: {\r\n    marginTop: 15,\r\n    marginHorizontal: 20,\r\n    alignItems: 'center',\r\n  },\r\n  helpLink: {\r\n    paddingVertical: 15,\r\n  },\r\n  helpLinkText: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport { Platform, StyleSheet, Button } from 'react-native';\r\n\r\nimport EditViewInfo from '../components/EditViewInfo';\r\nimport { Text, View } from '../components/Themed';\r\n\r\nexport default function ModalView() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Modal</Text>\r\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\r\n      <EditViewInfo path=\"/views/ModalView.tsx\" />\r\n      <Text>Account</Text>\r\n\r\n      {/* Use a light status bar on iOS to account for the black space above the modal */}\r\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: '80%',\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport ModalView from \"../views/modalView\";\r\nimport ErrorMessage from \"../components/errorMessage\";\r\nimport { login } from \"../loginSource\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { setUserData, setToken } from \"../redux\";\r\nimport { RootTabScreenProps } from \"../types\";\r\n\r\nexport default function ModalPresenter() {\r\n  return (\r\n    <>\r\n      <ModalView></ModalView>\r\n    </>\r\n  );\r\n}\r\n","import { StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { Text, View } from '../components/Themed';\r\nimport { RootStackScreenProps } from '../types';\r\n\r\nexport default function NotFoundScreen({ navigation }: RootStackScreenProps<'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>This screen doesn't exist.</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\r\n        <Text style={styles.linkText}>Go to home screen!</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","import React from 'react'\r\nimport { Image, StyleSheet } from \"react-native\";\r\nimport { Flex, Text, Button } from \"@react-native-material/core\";\r\nconst previewImage = require(\"../pictures/previewImage.png\");\r\n\r\nconst styles = StyleSheet.create({\r\n    containerOne: {\r\n        backgroundColor: \"#FFFFFF\"\r\n    },\r\n    containerTwo: { \r\n        backgroundColor: \"#F4FFDC\", \r\n        borderTopLeftRadius: 0,\r\n        borderTopRightRadius: 0,\r\n    },\r\n    containerTwo_centered: { \r\n        justifyContent:\"center\", \r\n        alignContent:\"center\"\r\n    },\r\n    containerTwo_centered_h5: {\r\n        fontWeight:\"bold\",\r\n        marginRight:\"auto\", \r\n        marginLeft:\"auto\", \r\n    },\r\n    containerTwo_centered_h6: {\r\n        marginRight:\"auto\", \r\n        marginLeft:\"auto\", \r\n    },\r\n    button: {\r\n        backgroundColor: 'white', \r\n        width:200, \r\n        height:60, \r\n        marginRight:\"auto\", \r\n        marginLeft:\"auto\", \r\n        paddingTop: 10, \r\n        paddingBottom:10, \r\n        borderRadius: 10,\r\n    },\r\n    containerOne_image: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: 0,\r\n        left: 0,\r\n        position: \"absolute\"\r\n    }\r\n   \r\n   });\r\n\r\nexport default function WelcomeView(props: any) {\r\n    const handeStartACB = () => {\r\n        props.getStarted()\r\n    }\r\n    return (\r\n    <Flex fill>\r\n        <Flex fill style={styles.containerOne}>\r\n            <Image style={styles.containerOne_image} source={require('../pictures/previewImage.png')} ></Image>\r\n        </Flex>\r\n        <Flex fill style={styles.containerTwo}>\r\n            <Flex fill style={styles.containerTwo_centered}>\r\n                <Text variant=\"h5\" style={styles.containerTwo_centered_h5} >Welcome</Text>\r\n                <Text variant=\"h6\" style={styles.containerTwo_centered_h6} >Welcome text Welcome text</Text>\r\n            </Flex>\r\n            <Flex fill style={styles.containerTwo_centered}>\r\n            <Button title=\"Get Started\" style={styles.button} color=\"red\" onPress={handeStartACB}/>\r\n            </Flex>\r\n        </Flex>\r\n    </Flex>\r\n  )\r\n}","import React from \"react\";\r\nimport WelcomeView from \"../views/welcomeView\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { RootTabScreenProps } from '../types';\r\n\r\nexport default function WelcomePresenter(props: any, {navigation}: RootTabScreenProps<'TabOne'>) {\r\n  function getStartedACB() {\r\n    props.navigation.navigate('Login')\r\n  }\r\n  return <WelcomeView getStarted={getStartedACB} />;\r\n}\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const styles_registrationPage = StyleSheet.create({\r\n  mainContainer: {\r\n    backgroundColor: \"#F4FFDC\",\r\n    padding: 10,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    paddingLeft: 50,\r\n    paddingRight: 50,\r\n    paddingTop: 10,\r\n    alignContent: \"center\",\r\n  },\r\n  mainContainer_textInput: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginBottom: 10,\r\n    border: \"1px solid #314959\",\r\n    borderRadius: 10,\r\n    width: 264,\r\n    height: 45,\r\n    paddingLeft: 10,\r\n  },\r\n  mainContainer_h5: {\r\n    fontWeight: \"bold\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    fontSize: 32,\r\n    marginBottom: 20,\r\n    color: \"#314959\",\r\n  },\r\n  mainContainer_italics: {\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    color: \"#314959\",\r\n    textDecorationLine: \"underline\",\r\n    marginBottom: 30,\r\n    overflow: \"hidden\",\r\n  },\r\n  mainContainer_button: {\r\n    backgroundColor: \"#314959\",\r\n    width: 155,\r\n    height: 60,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderRadius: 300,\r\n    boxShadow: \"0px 0px 100px rgba(162, 170, 106, 0.2)\",\r\n  },\r\n  maincontainer_image: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n    width: 150,\r\n    height: 250,\r\n  },\r\n  error: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    color: \"red\",\r\n    width: 264,\r\n    height: 45,\r\n    paddingLeft: 10,\r\n  },\r\n});\r\n\r\nexport const styles_loginPage = StyleSheet.create({\r\n  mainContainer: {\r\n    backgroundColor: \"#314959\",\r\n    padding: 10,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    paddingLeft: 50,\r\n    paddingRight: 50,\r\n    paddingTop: 0,\r\n    alignContent: \"center\",\r\n  },\r\n  mainContainer_textInput: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginBottom: 10,\r\n    border: \"1px solid #A7C6DA\",\r\n    borderColor: \"#A7C6DA\",\r\n    borderWidth: 2,\r\n    color: \"#A7C6DA\",\r\n    borderRadius: 10,\r\n    width: 264,\r\n    height: 45,\r\n    paddingLeft: 10,\r\n  },\r\n  mainContainer_h5: {\r\n    fontWeight: \"bold\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    fontSize: 32,\r\n    marginBottom: 20,\r\n    color: \"#A7C6DA\",\r\n  },\r\n  mainContainer_italics: {\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    color: \"#A7C6DA\",\r\n    textDecorationLine: \"underline\",\r\n    marginBottom: 30,\r\n    overflow: \"hidden\",\r\n  },\r\n  mainContainer_button: {\r\n    backgroundColor: \"#A7C6DA\",\r\n    width: 155,\r\n    height: 60,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderRadius: 300,\r\n    boxShadow: \"0px 0px 100px rgba(162, 170, 106, 0.2)\",\r\n  },\r\n  maincontainer_image: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    width: 150,\r\n    height: 270,\r\n  },\r\n  error: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    color: \"red\",\r\n    width: 264,\r\n    height: 45,\r\n    paddingLeft: 10,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Image, TextInput, View } from \"react-native\";\r\nimport { Flex, Text, Button } from \"@react-native-material/core\";\r\nimport { styles_loginPage } from \"./styles\";\r\nimport { Formik } from \"formik\";\r\nexport default function LoginView(props: any) {\r\n  return (\r\n    <>\r\n      <Flex fill style={styles_loginPage.mainContainer}>\r\n        <Text style={styles_loginPage.mainContainer_h5}>Sign in</Text>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={props.onLogin}\r\n          validationSchema={props.signupSchema}\r\n        >\r\n          {({\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            values,\r\n            errors,\r\n            touched,\r\n          }) => (\r\n            <View>\r\n              <TextInput\r\n                style={styles_loginPage.mainContainer_textInput}\r\n                onChangeText={handleChange(\"email\")}\r\n                onBlur={handleBlur(\"email\")}\r\n                value={values.email}\r\n                placeholder=\"Email\"\r\n              />\r\n              {errors.email && touched.email ? (\r\n                <Text style={styles_loginPage.error}>{errors.email}</Text>\r\n              ) : null}\r\n              <TextInput\r\n                style={styles_loginPage.mainContainer_textInput}\r\n                onChangeText={handleChange(\"password\")}\r\n                onBlur={handleBlur(\"password\")}\r\n                value={values.password}\r\n                placeholder=\"Password\"\r\n                secureTextEntry={true}\r\n              />\r\n              {errors.password && touched.password ? (\r\n                <Text style={styles_loginPage.error}>{errors.password}</Text>\r\n              ) : null}\r\n              <Text\r\n                style={styles_loginPage.mainContainer_italics}\r\n                onPress={props.onNewUser}\r\n              >\r\n                New user\r\n              </Text>\r\n              <Button\r\n                onPress={handleSubmit}\r\n                title=\"Submit\"\r\n                style={styles_loginPage.mainContainer_button}\r\n                loading={props.loading}\r\n              />\r\n            </View>\r\n          )}\r\n        </Formik>\r\n        <Image\r\n          style={styles_loginPage.maincontainer_image}\r\n          source={require(\"../styles/loginImage.png\")}\r\n        ></Image>\r\n      </Flex>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://mealappserver.onrender.com\";\r\n\r\nfunction login(username: string, password: string) {\r\n  return axios.post(\"/user/login\", {\r\n    username: username,\r\n    password: password,\r\n  });\r\n}\r\nfunction signup(username: string, password: string) {\r\n  return axios.post(\"/user/signup\", {\r\n    username: username,\r\n    password: password,\r\n  });\r\n}\r\nexport { login, signup };\r\n","export const favouritesReducer = (\r\n  state: FavState = initFavState,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_FAV\" || \"DELETE_FAV\":\r\n      return {\r\n        data: state.data,\r\n        loading: true,\r\n        success: false,\r\n        error: false,\r\n      };\r\n    case \"ADD_TO_FAV_SUC\":\r\n      return {\r\n        data: [...state.data, action.payload],\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"DELETE_FAV_SUC\":\r\n      console.log(action);\r\n      return {\r\n        data: state.data.filter((fav) => fav !== action.payload),\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"MANIPULATE_FAV_ERROR\":\r\n      return {\r\n        data: state.data,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n    case \"SET_FAVS\":\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"GET_FAVS_SUC\":\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype FavState = {\r\n  data: Array<string>;\r\n  loading: boolean | null;\r\n  error: string | boolean | null;\r\n};\r\nconst initFavState = {\r\n  data: <Array<string>>[],\r\n  loading: false,\r\n  error: <string | null | boolean>false,\r\n};\r\n","export const ingredientsReducer = (\r\n  state: IngrState = initIngrState,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_INGR\" || \"DELETE_INGR\":\r\n      return {\r\n        data: state.data,\r\n        loading: true,\r\n        success: false,\r\n        error: false,\r\n      };\r\n    case \"ADD_TO_INGR_SUC\":\r\n      return {\r\n        data: [...state.data, action.payload],\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"DELETE_INGR_SUC\":\r\n      console.log(action);\r\n      return {\r\n        data: state.data.filter((ingr) => ingr !== action.payload),\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"MANIPULATE_INGR_ERROR\":\r\n      return {\r\n        data: state.data,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n    case \"SET_INGR\":\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"GET_INGR_SUC\":\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype IngrState = {\r\n  data: Array<string>;\r\n  loading: boolean | null;\r\n  error: string | boolean | null;\r\n};\r\nconst initIngrState = {\r\n  data: <Array<string>>[],\r\n  loading: false,\r\n  error: <string | null | boolean>false,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { favouritesReducer } from \"./favouritesReducer\";\r\nimport { ingredientsReducer } from \"./ingredientsReducer\";\r\nconst user = (state = \"\", action: any) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst token = (state = {}, action: any) => {\r\n  switch (action.type) {\r\n    case \"SET_TOKEN\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst currentRecipe = (state = {}, action: any) => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_RECIPE\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst snackbar = (\r\n  state: SnackBarState = { msg: \"\", visibility: false },\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_MSG\":\r\n      return {\r\n        msg: action.payload,\r\n        visibility: true,\r\n      };\r\n    case \"SET_VISIBILITY\":\r\n      return {\r\n        msg: state.msg,\r\n        visibility: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst rootReducer = combineReducers({\r\n  token: token,\r\n  user: user,\r\n  favourites: favouritesReducer,\r\n  ingredients: ingredientsReducer,\r\n  currentRecipe: currentRecipe,\r\n  snackbar: snackbar,\r\n});\r\n\r\nexport type ApplicationState = ReturnType<typeof rootReducer>;\r\n\r\nexport { rootReducer };\r\ntype SnackBarState = {\r\n  msg: string;\r\n  visibility: boolean;\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"./reducers\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware));\r\n\r\nconst store = createStore(rootReducer, composedEnhancer);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport store from \"./redux/store\";\r\n\r\nfunction addFavourite(id: string) {\r\n  return axios.post(\r\n    \"/db/addFavourite\",\r\n    {\r\n      id: id,\r\n    },\r\n    getHeader()\r\n  );\r\n}\r\nfunction deleteFavourite(id: string) {\r\n  return axios.post(\r\n    \"/db/deleteFavourite\",\r\n    {\r\n      id: id,\r\n    },\r\n    getHeader()\r\n  );\r\n}\r\nfunction getFavourites() {\r\n  return axios.get(\"/db/getFavourites\", getHeader());\r\n}\r\n\r\nfunction addIngredient(ingredient: string) {\r\n  return axios.post(\r\n    \"/db/addIngredient\",\r\n    {\r\n      ingredient: ingredient,\r\n    },\r\n    getHeader()\r\n  );\r\n}\r\nfunction deleteIngredient(ingredient: string) {\r\n  return axios.post(\r\n    \"/db/deleteIngredient\",\r\n    {\r\n      ingredient: ingredient,\r\n    },\r\n    getHeader()\r\n  );\r\n}\r\nfunction getGroceries() {\r\n  return axios.get(\"/db/getGroceries\", getHeader());\r\n}\r\n\r\nfunction getTopFavourites() {\r\n  return axios.get(\"/db/topTen\").then((res) => {\r\n    return axios.post(\"/api/mealsDetails\", {\r\n      ids: res.data,\r\n    });\r\n  });\r\n}\r\nfunction getHeader() {\r\n  return { headers: { authorization: \"bearer \" + store.getState().token } };\r\n}\r\n\r\nexport {\r\n  addFavourite,\r\n  deleteFavourite,\r\n  getFavourites,\r\n  getTopFavourites,\r\n  addIngredient,\r\n  deleteIngredient,\r\n  getGroceries,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport { getFavourites, getGroceries, getIngredients } from \"../../dbSource\";\r\n\r\nexport const setToken = (token: String) => ({\r\n  type: \"SET_TOKEN\",\r\n  payload: token,\r\n});\r\nexport const setCurrentRecipe = (recipe: any) => ({\r\n  type: \"SET_CURRENT_RECIPE\",\r\n  payload: recipe,\r\n});\r\nexport const setUserData = (username: string, token: String) => {\r\n  return async (dispatch: Dispatch<setUserData>) => {\r\n    dispatch({\r\n      type: \"SET_TOKEN\",\r\n      payload: token,\r\n    });\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      payload: username,\r\n    });\r\n\r\n    getFavourites()\r\n      .then((result) => {\r\n        dispatch({ type: \"GET_FAVS_SUC\", payload: result.data });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"MANIPULATE_FAV_ERROR\",\r\n          payload: error,\r\n        });\r\n      });\r\n    getGroceries()\r\n      .then((result) => {\r\n        console.log(result);\r\n        dispatch({ type: \"GET_INGRS_SUC\", payload: result.data });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"MANIPULATE_INGR_ERROR\",\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const setNewUserData = (username: string, token: String) => {\r\n  return async (dispatch: Dispatch<setUserData>) => {\r\n    dispatch({\r\n      type: \"SET_TOKEN\",\r\n      payload: token,\r\n    });\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      payload: username,\r\n    });\r\n  };\r\n};\r\nexport const setSnackbar = (msg: string) => {\r\n  return async (dispatch: Dispatch<setSnackbar>) => {\r\n    dispatch({\r\n      type: \"SET_MSG\",\r\n      payload: msg,\r\n    });\r\n    dispatch({\r\n      type: \"SET_VISBILITY\",\r\n      payload: true,\r\n    });\r\n  };\r\n};\r\nexport const hideSnackbar = () => ({\r\n  type: \"SET_VISIBILITY\",\r\n  payload: false,\r\n});\r\nexport type setUserData = {\r\n  readonly type:\r\n    | \"SET_TOKEN\"\r\n    | \"SET_USER\"\r\n    | \"GET_FAVS_SUC\"\r\n    | \"MANIPULATE_FAV_ERROR\"\r\n    | \"GET_INGRS_SUC\"\r\n    | \"MANIPULATE_INGR_ERROR\";\r\n  payload: any;\r\n};\r\nexport type setSnackbar = {\r\n  readonly type: \"SET_MSG\" | \"SET_VISBILITY\";\r\n  payload?: string | boolean;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Modal, Text } from \"react-native\";\r\nimport { Flex, Button } from \"@react-native-material/core\";\r\n\r\nconst styles = StyleSheet.create({\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n  centeredView: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 300,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n});\r\nexport default function ModalMessage(props: any) {\r\n  return (\r\n    <Modal\r\n      animationType=\"fade\"\r\n      transparent={true}\r\n      visible={props.modalVisible}\r\n      onRequestClose={() => {}}\r\n    >\r\n      <View style={styles.centeredView}>\r\n        <View style={styles.modalView}>\r\n          <Text>{props.message}</Text>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport {\r\n  Flex,\r\n  Button,\r\n} from \"@react-native-material/core\";\r\n\r\nconst styles = StyleSheet.create({\r\n  errorContainer: {\r\n    position:\"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"rgba(255, 255, 255, 0.01)\",\r\n    backdropFilter: \"blur(10px)\",\r\n    paddingTop: 100,\r\n    paddingLeft: 50,\r\n    paddingRight: 50,\r\n    paddingBottom: 200,\r\n  },\r\n  message:{\r\n    width: \"auto\",\r\n    height: \"auto\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  errorContainer_button: {\r\n    backgroundColor: \"#A7C6DA\",\r\n    width: 155,\r\n    height: 60,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginTop: 10,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderRadius: 300,\r\n  },\r\n});\r\nexport default function ErrorView(props: any) {\r\n  const handleReturnACB = () => {\r\n    props.onReturn();\r\n  };\r\n  return (\r\n    <Flex fill style={styles.errorContainer}>\r\n        <View style={styles.message}>\r\n            {props.error}\r\n            <Button\r\n            onPress={handleReturnACB}\r\n            title=\"Ge back\"\r\n            style={styles.errorContainer_button}\r\n        />\r\n        </View>\r\n    </Flex>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport LoginView from \"../views/loginView\";\r\nimport { login } from \"../loginSource\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUserData } from \"../redux\";\r\nimport ModalMessage from \"../components/modalMessage\";\r\nimport * as Yup from \"yup\";\r\nimport ErrorMessage from \"../components/errorMessage\";\r\n\r\nexport default function LoginPresenter(props: any) {\r\n  const dispatch = useDispatch<any>();\r\n  const [loading, setLoadingState] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [status, setStatusState] = useState(false);\r\n  const [visibility, setModalVisible] = useState(false);\r\n\r\n  function onLoginACB(loginData: { email: string; password: string }) {\r\n    setLoadingState(true);\r\n    login(loginData.email, loginData.password)\r\n      .then((res: any) => {\r\n        setStatusState(true);\r\n        setModalVisible(true);\r\n        setTimeout(() => setModalVisible(false), 3000);\r\n        dispatch(setUserData(loginData.email, res.data.token));\r\n        setLoadingState(false);\r\n        props.navigation.navigate(\"Search\");\r\n      })\r\n      .catch((data) => {\r\n        setError(data.response.data?.error || data.message);\r\n        setLoadingState(false);\r\n      });\r\n  }\r\n  function onReturnACB() {\r\n    props.navigation.navigate(\"Login\");\r\n    setError(null);\r\n  }\r\n  function onRegistrationACB() {\r\n    props.navigation.navigate(\"Registration\");\r\n  }\r\n  const SignupSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    password: Yup.string()\r\n      .required(\"Password is a required field\")\r\n      .min(8, \"Password must be at least 8 characters\"),\r\n  });\r\n  return (\r\n    <>\r\n      <LoginView\r\n        onLogin={onLoginACB}\r\n        onNewUser={onRegistrationACB}\r\n        loading={loading}\r\n        signupSchema={SignupSchema}\r\n      ></LoginView>\r\n      {error && (\r\n        <ErrorMessage error={error} onReturn={onReturnACB}></ErrorMessage>\r\n      )}\r\n      {!error && status && (\r\n        <ModalMessage\r\n          modalVisible={visibility}\r\n          message=\"You've logged in successfully!\"\r\n        ></ModalMessage>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Image, TextInput, View } from \"react-native\";\r\nimport { Flex, Text, Button } from \"@react-native-material/core\";\r\nimport { styles_registrationPage } from \"./styles\";\r\nimport { Field, Formik } from \"formik\";\r\n\r\nexport default function RegistrationView(props: any) {\r\n  return (\r\n    <Flex fill style={styles_registrationPage.mainContainer}>\r\n      <Text style={styles_registrationPage.mainContainer_h5}>Sign up</Text>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\", confirmPassword: \"\" }}\r\n        onSubmit={props.onRegister}\r\n        validationSchema={props.signupSchema}\r\n      >\r\n        {({\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          values,\r\n          errors,\r\n          touched,\r\n        }) => (\r\n          <View>\r\n            <TextInput\r\n              style={styles_registrationPage.mainContainer_textInput}\r\n              onChangeText={handleChange(\"email\")}\r\n              onBlur={handleBlur(\"email\")}\r\n              value={values.email}\r\n              placeholder=\"Email\"\r\n            />\r\n            {errors.email && touched.email ? (\r\n              <Text style={styles_registrationPage.error}>{errors.email}</Text>\r\n            ) : null}\r\n            <TextInput\r\n              style={styles_registrationPage.mainContainer_textInput}\r\n              onChangeText={handleChange(\"password\")}\r\n              onBlur={handleBlur(\"password\")}\r\n              value={values.password}\r\n              placeholder=\"Password\"\r\n              secureTextEntry={true}\r\n            />\r\n            {errors.password && touched.password ? (\r\n              <Text style={styles_registrationPage.error}>\r\n                {errors.password}\r\n              </Text>\r\n            ) : null}\r\n\r\n            <TextInput\r\n              style={styles_registrationPage.mainContainer_textInput}\r\n              onChangeText={handleChange(\"confirmPassword\")}\r\n              onBlur={handleBlur(\"confirmPassword\")}\r\n              value={values.confirmPassword}\r\n              placeholder=\"Confirm your password\"\r\n              secureTextEntry={true}\r\n            />\r\n            {errors.confirmPassword && touched.confirmPassword ? (\r\n              <Text style={styles_registrationPage.error}>\r\n                {errors.confirmPassword}\r\n              </Text>\r\n            ) : null}\r\n            <Text\r\n              style={styles_registrationPage.mainContainer_italics}\r\n              onPress={props.onLogin}\r\n            >\r\n              Alredy have an account?\r\n            </Text>\r\n            <Button\r\n              title=\"Get Started\"\r\n              style={styles_registrationPage.mainContainer_button}\r\n              onPress={handleSubmit}\r\n              loading={props.loading}\r\n              disabled={props.loading}\r\n            />\r\n          </View>\r\n        )}\r\n      </Formik>\r\n\r\n      <Image\r\n        style={styles_registrationPage.maincontainer_image}\r\n        source={require(\"../styles/registrationImage.png\")}\r\n      ></Image>\r\n    </Flex>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport RegistrationView from \"../views/registrationView\";\r\nimport ErrorMessage from \"../components/errorMessage\";\r\nimport SuccessMessage from \"../components/modalMessage\";\r\nimport { signup } from \"../loginSource\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setNewUserData } from \"../redux\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function RegistrationPresenter(props: any) {\r\n  const dispatch = useDispatch<any>();\r\n  const [loading, setLoadingState] = useState(false);\r\n  const [status, setStatusState] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [visibility, setModalVisible] = useState(false);\r\n\r\n  function onRegistrationACB(registerData: {\r\n    email: string;\r\n    password: string;\r\n  }) {\r\n    setLoadingState(true);\r\n    signup(registerData.email, registerData.password)\r\n      .then((res: any) => {\r\n        setStatusState(true);\r\n        setModalVisible(true);\r\n        setTimeout(() => setModalVisible(false), 3000);\r\n        dispatch(setNewUserData(registerData.email, res.data));\r\n        setLoadingState(false);\r\n        props.navigation.navigate(\"Search\");\r\n      })\r\n      .catch((data) => {\r\n        setError(data.response.data?.message || data.message);\r\n        setLoadingState(false);\r\n      });\r\n  }\r\n  function onLoginACB() {\r\n    props.navigation.navigate(\"Login\");\r\n  }\r\n  function onReturnACB() {\r\n    props.navigation.navigate(\"Register\");\r\n    setError(null);\r\n  }\r\n  const SignupSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    password: Yup.string()\r\n      .required(\"Password is a required field\")\r\n      .min(8, \"Password must be at least 8 characters\"),\r\n    confirmPassword: Yup.string().oneOf(\r\n      [Yup.ref(\"password\"), null],\r\n      \"Passwords must match\"\r\n    ),\r\n  });\r\n  return (\r\n    <>\r\n      <RegistrationView\r\n        onRegister={onRegistrationACB}\r\n        onLogin={onLoginACB}\r\n        loading={loading}\r\n        signupSchema={SignupSchema}\r\n      ></RegistrationView>\r\n      {error && (\r\n        <ErrorMessage error={error} onReturn={onReturnACB}></ErrorMessage>\r\n      )}\r\n      {!error && status && (\r\n        <SuccessMessage\r\n          modalVisible={visibility}\r\n          success=\"You've registered successfully!\"\r\n        ></SuccessMessage>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { MultiSelect } from \"react-native-element-dropdown\";\r\n\r\nconst styles = StyleSheet.create({\r\n  dropdown: {\r\n    backgroundColor: \"#F3F2E9\",\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    width: 150,\r\n    marginRight: 10,\r\n  },\r\n});\r\nexport default function DropdownMenu(props: any) {\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  function onChange(values: any) {\r\n    props.onChange(values);\r\n    setSelected(values);\r\n  }\r\n  return (\r\n    <MultiSelect\r\n      data={props.data}\r\n      style={styles.dropdown}\r\n      search={true}\r\n      labelField=\"label\"\r\n      valueField=\"value\"\r\n      value={selected}\r\n      placeholder={props.searchItem}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, TextInput, View, ScrollView } from \"react-native\";\r\nimport { Flex, Button, HStack } from \"@react-native-material/core\";\r\nimport DropdownMenu from \"../components/dropdownMenu\";\r\nimport Header from \"../components/header\";\r\n\r\nconst styles = StyleSheet.create({\r\n  mainContainer: {\r\n    backgroundColor: \"#FDFBF7\",\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    // position: \"absolute\",\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingTop: 10,\r\n    marginBottom: 20,\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  mainContainer_button: {\r\n    // backgroundColor: \"var(--dark-blue)\",\r\n    width: 155,\r\n    height: 60,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    paddingTop: 10,\r\n    borderRadius: 300,\r\n  },\r\n  mainContainer_filters: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    marginTop: 10,\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    overflowX: \"auto\",\r\n  },\r\n  textInput: {\r\n    marginBottom: 10,\r\n    backgroundColor: \"#F3F2E9\",\r\n    borderRadius: 10,\r\n    width: \"70%\",\r\n    height: 45,\r\n    paddingLeft: 10,\r\n    fontStyle: \"italic\",\r\n  },\r\n  searchButton: {\r\n    backgroundColor: \"#314959\",\r\n    borderRadius: 300,\r\n    height: 45,\r\n  },\r\n});\r\nexport default function SearchView(props: any) {\r\n  function onSearch() {\r\n    props.onSearch();\r\n  }\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      {/* <Header /> */}\r\n      {/* <Text style={styles.mainContainer_h5} >Sign up</Text> */}\r\n      <HStack spacing={6}>\r\n        <TextInput\r\n          placeholder=\"Search\"\r\n          style={styles.textInput}\r\n          onChangeText={props.onQueryChanged}\r\n        />\r\n        <Button title=\"Search\" style={styles.searchButton} onPress={onSearch} />\r\n      </HStack>\r\n      <ScrollView horizontal={true}>\r\n        <Flex direction=\"row\" style={styles.mainContainer_filters}>\r\n          <DropdownMenu\r\n            data={props.categories}\r\n            onChange={props.onCategoriesSelected}\r\n            searchItem=\"Categories\"\r\n          />\r\n          <DropdownMenu\r\n            data={props.areas}\r\n            onChange={props.onAreasSelected}\r\n            searchItem=\"Areas\"\r\n          />\r\n          <DropdownMenu\r\n            data={props.ingrToSelect}\r\n            onChange={props.onIngredientsSelected}\r\n            searchItem=\"Ingredients\"\r\n          />\r\n        </Flex>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n","function resolvePromise(\r\n  promiseToResolve: Promise<any> | null,\r\n  promiseState: {\r\n    promise: any | null;\r\n    data: Object | null;\r\n    error: String | null;\r\n  },\r\n  notifyACB: (arg0: any) => void\r\n) {\r\n  promiseState.promise = promiseToResolve;\r\n  promiseState.data = null;\r\n  promiseState.error = null;\r\n\r\n  if (notifyACB) notifyACB(promiseState);\r\n  function saveDataACB(result: Object | null) {\r\n    if (promiseState.promise !== promiseToResolve) return;\r\n    promiseState.data = result;\r\n    if (notifyACB) notifyACB(promiseState);\r\n  }\r\n\r\n  function saveErrorACB(err: string) {\r\n    if (promiseState.promise !== promiseToResolve) return;\r\n    promiseState.error = err;\r\n    if (notifyACB) notifyACB(promiseState);\r\n  }\r\n  if (promiseToResolve !== null)\r\n    promiseToResolve.then(saveDataACB).catch(saveErrorACB);\r\n}\r\n\r\nexport default resolvePromise;\r\nexport { resolvePromise };\r\n","import { promiseStateType } from \"../types\";\r\nimport { ActivityIndicator, Image, Text, View } from \"react-native\";\r\nimport React from \"react\";\r\nexport default function promiseNoData(promise: any, data: any, error: any) {\r\n  if (!promise)\r\n    //no promise\r\n    //  return <Text> no data</Text>;\r\n    return false; //display default data\r\n  else {\r\n    if (!(data || error)) {\r\n      //promised, no data, no error\r\n      //TODO add loading img\r\n      console.log(\"loading\");\r\n      return <ActivityIndicator size=\"large\" color=\"#00ff00\" />;\r\n    }\r\n    if (!data && error)\r\n      //promised, no data, with error\r\n      return <Text>{error.toString()}</Text>;\r\n\r\n    if (data && !error)\r\n      //promised, defined data, no error\r\n      return false;\r\n  }\r\n}\r\n","import { addFavourite, deleteFavourite } from \"../../dbSource\";\r\nimport { Dispatch } from \"react\";\r\nimport store from \"../store\";\r\n\r\nexport const addFav = (id: string) => {\r\n  return async (dispatch: Dispatch<addFav>) => {\r\n    dispatch({ type: \"ADD_TO_FAV\" });\r\n    console.log(id);\r\n    addFavourite(id)\r\n      .then(() => dispatch({ type: \"ADD_TO_FAV_SUC\", payload: id }))\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"MANIPULATE_FAV_ERROR\",\r\n          payload: error.message,\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const deleteFav = (id: string) => {\r\n  return async (dispatch: Dispatch<deleteFav>) => {\r\n    var favs: Array<string> = store.getState().favourites[\"data\"];\r\n    if (favs.includes(id)) {\r\n      dispatch({ type: \"DELETE_FAV\" });\r\n      console.log(id);\r\n      deleteFavourite(id)\r\n        .then(() => dispatch({ type: \"DELETE_FAV_SUC\", payload: id }))\r\n        .catch((error) => {\r\n          console.log(\"error\");\r\n          dispatch({\r\n            type: \"MANIPULATE_FAV_ERROR\",\r\n            payload: error,\r\n          });\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFavs = (favs: Array<string>) => {\r\n  return async (dispatch: Dispatch<setFavs>) => {\r\n    dispatch({ type: \"SET_FAVS\", payload: favs });\r\n  };\r\n};\r\nexport type addFav = {\r\n  readonly type: \"ADD_TO_FAV\" | \"ADD_TO_FAV_SUC\" | \"MANIPULATE_FAV_ERROR\";\r\n  payload?: any;\r\n};\r\nexport type deleteFav = {\r\n  readonly type: \"DELETE_FAV\" | \"DELETE_FAV_SUC\" | \"MANIPULATE_FAV_ERROR\";\r\n  payload?: any;\r\n};\r\nexport type setFavs = {\r\n  readonly type: \"SET_FAVS\";\r\n  payload: any;\r\n};\r\n","import React from \"react\";\r\nimport { ActivityIndicator } from \"react-native\";\r\nimport { IconButton } from \"@react-native-material/core\";\r\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\n\r\nexport default function FavBtnView(props: any) {\r\n  return props.loading ? (\r\n    <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n  ) : (\r\n    <IconButton\r\n      onPress={props.onClicked}\r\n      icon={() => (\r\n        <Icon\r\n          name={\"heart\"}\r\n          size={24}\r\n          color={props.addedToFav ? \"red\" : \"grey\"}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { addFav, deleteFav } from \"../redux/actions/favouritesActions\";\r\nimport { setSnackbar } from \"../redux\";\r\nimport React from \"react\";\r\nimport FavBtnView from \"../views/favBtnView\";\r\n\r\nexport default function FavouriteBtnPresenter(props: any) {\r\n  const dispatch = useDispatch<any>();\r\n  const addedToFav = useSelector((state: any) =>\r\n    state.favourites.data.includes(props.id)\r\n  );\r\n  const loading = useSelector((state: any) => state.favourites.loading);\r\n  const user = useSelector((state: any) => state.user);\r\n  function favBtnClickedACB() {\r\n    if (!user)\r\n      dispatch(setSnackbar(\"Please log in to add your favourite recipes!\"));\r\n    else {\r\n      if (!addedToFav) dispatch(addFav(props.id));\r\n      else dispatch(deleteFav(props.id));\r\n    }\r\n  }\r\n  return (\r\n    <FavBtnView\r\n      loading={loading}\r\n      onClicked={favBtnClickedACB}\r\n      addedToFav={addedToFav}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Image,\r\n  TextInput,\r\n  View,\r\n  ActivityIndicator,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {\r\n  Stack,\r\n  IconButton,\r\n  Flex,\r\n  Text,\r\n  Button,\r\n  HStack,\r\n  Wrap,\r\n} from \"@react-native-material/core\";\r\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FavouriteBtnPresenter from \"../presenters/favouriteBtnPresenter\";\r\n\r\nconst styles = StyleSheet.create({\r\n  dishcard: {\r\n    marginTop: 30,\r\n    position: \"relative\",\r\n    alignContent: \"center\",\r\n  },\r\n  dishcard_img: {\r\n    width: \"30%\",\r\n    height: 200,\r\n    backgroundColor: \"#faf089\",\r\n    borderTopLeftRadius: 10,\r\n    borderBottomLeftRadius: 10,\r\n  },\r\n  dishcard_details: {\r\n    width: \"82%\",\r\n    height: 200,\r\n    borderTopRightRadius: 10,\r\n    borderBottomRightRadius: 10,\r\n    padding: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  dishcard_details_header: {},\r\n  dishcard_details_description: {\r\n    fontSize: 9,\r\n  },\r\n  tag: {\r\n    width: \"auto\",\r\n    height: 25,\r\n    backgroundColor: \"#F3F2E9\",\r\n    borderRadius: 10,\r\n    marginRight: 10,\r\n    marginTop: 5,\r\n    padding: 5,\r\n  },\r\n  dishcard_right: {\r\n    width: \"70%\",\r\n    backgroundColor: \"white\",\r\n  },\r\n});\r\nexport default function DishCard(props: any) {\r\n  // const addedToFav = useSelector((state: any) =>\r\n  //   state.favourites.includes(props.idMeal)\r\n  // );\r\n  const dispatch = useDispatch<any>();\r\n\r\n  function renderArrayCB(tag: any) {\r\n    return (\r\n      <Text style={styles.tag} key={tag}>\r\n        {tag}\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <TouchableOpacity onPress={props.onSelectedRecipe}>\r\n      <HStack spacing={0} style={styles.dishcard}>\r\n        <Image\r\n          style={styles.dishcard_img}\r\n          source={props.data.strMealThumb}\r\n        ></Image>\r\n        <Wrap m={4} items=\"center\" spacing={5} style={styles.dishcard_right}>\r\n          <View style={styles.dishcard_details}>\r\n            <Text style={styles.dishcard_details_header}>\r\n              {/* TODO fix error text node cannot be a child of a <View>.  */}\r\n              {props.data.strMeal}\r\n            </Text>\r\n            <Text style={styles.dishcard_details_description}></Text>\r\n            <Flex wrap=\"wrap\" direction=\"row\">\r\n              <View>\r\n                <Text>\r\n                  {props.data.strTags &&\r\n                    props.data.strTags.split(\",\").map(renderArrayCB)}\r\n                </Text>\r\n              </View>\r\n            </Flex>\r\n          </View>\r\n          <FavouriteBtnPresenter id={props.data.idMeal} />\r\n        </Wrap>\r\n      </HStack>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DishCard from \"../components/dishCard\";\r\n\r\nexport default function DishCardPresenter(props: any) {\r\n  function setCurrentRecipeACB() {\r\n    props.navigation.navigate(\"Recipe\", { recipe: props.data });\r\n  }\r\n  return <DishCard data={props.data} onSelectedRecipe={setCurrentRecipeACB} />;\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, ScrollView, ActivityIndicator, Text } from \"react-native\";\r\nimport { Flex } from \"@react-native-material/core\";\r\nimport DishCard from \"../components/dishCard\";\r\nimport Search from \"../components/search\";\r\nimport Header from \"../components/header\";\r\nimport DishCardPresenter from \"../presenters/dishCardPresenter\";\r\n\r\nconst styles = StyleSheet.create({\r\n  mainContainer: {\r\n    position: \"relative\",\r\n    backgroundColor: \"#FDFBF7\",\r\n    padding: 10,\r\n    // top: 0,\r\n    width: \"100%\",\r\n    // position: \"absolute\",\r\n    paddingTop: 10,\r\n    alignContent: \"center\",\r\n  },\r\n  mainContainer_button: {\r\n    backgroundColor: \"var(--dark-blue)\",\r\n    width: 155,\r\n    height: 60,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderRadius: 300,\r\n  },\r\n  mainContainer_filters: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    padding: 0,\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    overflowX: \"auto\",\r\n  },\r\n  textInput: {\r\n    marginBottom: 10,\r\n    backgroundColor: \"#F3F2E9\",\r\n    borderRadius: 10,\r\n    width: \"100%\",\r\n    height: 45,\r\n    paddingLeft: 10,\r\n    fontStyle: \"italic\",\r\n  },\r\n});\r\nexport default function ResultsView(props: any) {\r\n  return (\r\n    <ScrollView style={styles.mainContainer}>\r\n      <Flex fill>\r\n        {props.header ? <Text>{props.header}</Text> : null}\r\n        {props.loading ? (\r\n          <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n        ) : null}\r\n\r\n        {props.results.map((r) => (\r\n          <DishCardPresenter\r\n            key={r.idMeal}\r\n            data={r}\r\n            navigation={props.navigation}\r\n            onClicked={props.onSelectedRecipe}\r\n          />\r\n        ))}\r\n      </Flex>\r\n    </ScrollView>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport SearchView from \"../views/searchView\";\r\nimport { filterMeals, getAllFilterData } from \"../mealSouce\";\r\nimport resolvePromise from \"../resolvePromise\";\r\nimport { promiseStateType } from \"../types\";\r\nimport { RootTabScreenProps } from \"../types\";\r\nimport promiseNoData from \"../views/promiseNoData\";\r\nimport ResultsView from \"../views/resultsView\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Flex } from \"@react-native-material/core\";\r\nimport { getTopFavourites } from \"../dbSource\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSnackbar } from \"../redux\";\r\n\r\nexport default function SearchPresenter({\r\n  navigation,\r\n}: RootTabScreenProps<\"Search\">) {\r\n  const dispatch = useDispatch<any>();\r\n\r\n  const [categories, setCategoriesState] = useState([]);\r\n  const [areas, setAreasState] = useState([]);\r\n  const [ingredients, setIngredientsState] = useState([]);\r\n\r\n  const [selectedCategories, setSelectedCategories] = useState<Array<string>>(\r\n    []\r\n  );\r\n  const [selectedAreas, setSelectedAreas] = useState<Array<string>>([]);\r\n  const [selectedIngredients, setSelectedIngredients] = useState<Array<string>>(\r\n    []\r\n  );\r\n  const [query, setQueryState] = useState(\"\");\r\n  const [results, setResultsState] = useState([]);\r\n  const [topFavs, setTopFavs] = React.useState<Array<any>>([]);\r\n  const [topFavsLoading, setTopFavsLoading] = React.useState<boolean>();\r\n\r\n  const [mealsPromiseState, setMealsPromiseState] = useState<promiseStateType>({\r\n    promise: null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n  const [promise, setPromise] = React.useState<any>();\r\n  const [data, setData] = React.useState<any>();\r\n  const [error, setError] = React.useState<any>();\r\n\r\n  React.useEffect(() => {\r\n    getAllFilterData()\r\n      .then((res) => {\r\n        setCategoriesState(\r\n          res[0].data.map((elem: { strCategory: string }) => ({\r\n            label: elem.strCategory,\r\n            value: elem.strCategory,\r\n          }))\r\n        );\r\n        setAreasState(\r\n          res[1].data.map((elem: { strArea: string }) => ({\r\n            label: elem.strArea,\r\n            value: elem.strArea,\r\n          }))\r\n        );\r\n        setIngredientsState(\r\n          res[2].data.map((elem: { strIngredient: string }) => ({\r\n            label: elem.strIngredient,\r\n            value: elem.strIngredient,\r\n          }))\r\n        );\r\n      })\r\n      .catch((error) =>\r\n        dispatch(\r\n          setSnackbar(\r\n            \"Could not fetch filter values from server: \" + error.message\r\n          )\r\n        )\r\n      );\r\n    setTopFavsLoading(true);\r\n    getTopFavourites()\r\n      .then((res) => {\r\n        setTopFavs(res.data);\r\n        setTopFavsLoading(false);\r\n      })\r\n      .catch((error) =>\r\n        dispatch(\r\n          setSnackbar(\r\n            \"Could not fetch top favourites from server: \" + error.message\r\n          )\r\n        )\r\n      );\r\n  }, []);\r\n\r\n  function onSearchACB() {\r\n    setResultsState([]);\r\n    setPromise(null);\r\n    setData(null);\r\n    setError(null);\r\n    resolvePromise(\r\n      filterMeals(\r\n        selectedCategories,\r\n        selectedAreas,\r\n        selectedIngredients,\r\n        query\r\n      ),\r\n      mealsPromiseState,\r\n      mealPromiseStateChanged\r\n    );\r\n  }\r\n  function mealPromiseStateChanged(result: promiseStateType) {\r\n    setMealsPromiseState(result);\r\n    setPromise(result.promise);\r\n    setData(result.data);\r\n    setError(result.error);\r\n    if (result.data && result.data.data) setResultsState(result.data.data);\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    mainContainer: {\r\n      backgroundColor: \"#FDFBF7\",\r\n      padding: 10,\r\n      top: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      paddingTop: \"0px\",\r\n      alignContent: \"center\",\r\n    },\r\n  });\r\n  return (\r\n    <Flex style={styles.mainContainer}>\r\n      <SearchView\r\n        categories={categories}\r\n        areas={areas}\r\n        ingrToSelect={ingredients}\r\n        query={query}\r\n        onCategoriesSelected={setSelectedCategories}\r\n        onAreasSelected={setSelectedAreas}\r\n        onIngredientsSelected={setSelectedIngredients}\r\n        onQueryChanged={setQueryState}\r\n        onSearch={onSearchACB}\r\n      ></SearchView>\r\n\r\n      {promiseNoData(promise, data, error) ||\r\n        (results && results.length > 0 ? (\r\n          <ResultsView results={results} navigation={navigation} />\r\n        ) : (\r\n          <ResultsView\r\n            header=\"No data was found :( But you can get inspired by the Top Favourites of other users:\"\r\n            loading={topFavsLoading}\r\n            results={topFavs}\r\n            navigation={navigation}\r\n          />\r\n        ))}\r\n    </Flex>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nfunction getRandomMeal() {\r\n  return axios.get(\"api/randomMeal\");\r\n}\r\nfunction getMealsDetails(ids: Array<String>) {\r\n  return axios.post(\"api/mealsDetails\", {\r\n    ids: ids,\r\n  });\r\n}\r\nfunction getCategories() {\r\n  return axios.get(\"api/categories\");\r\n}\r\nfunction getAreas() {\r\n  return axios.get(\"api/areas\");\r\n}\r\nfunction getIngredients() {\r\n  return axios.get(\"api/ingredients\");\r\n}\r\nfunction getAllFilterData() {\r\n  return axios.all([getCategories(), getAreas(), getIngredients()]);\r\n}\r\nfunction filterMeals(\r\n  categories: Array<string>,\r\n  areas: Array<string>,\r\n  ingredients: Array<string>,\r\n  query: string\r\n) {\r\n  return axios.post(\"api/filterMeals\", {\r\n    categories: categories,\r\n    areas: areas,\r\n    ingredients: ingredients,\r\n    query: query,\r\n  });\r\n}\r\n\r\nexport {\r\n  getRandomMeal,\r\n  getMealsDetails,\r\n  getCategories,\r\n  getAreas,\r\n  getIngredients,\r\n  filterMeals,\r\n  getAllFilterData,\r\n};\r\n","import { Flex, Text, ListItem } from \"@react-native-material/core\";\r\nimport React from \"react\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { StyleSheet, Image, TextInput, View, ScrollView } from \"react-native\";\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: 200,\r\n  },\r\n  details: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#FDFBF7\",\r\n    borderTopLeftRadius: 15,\r\n    borderTopRightRadius: 15,\r\n    height: \"100%\",\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    marginTop: 20,\r\n    fontWeight: \"700\",\r\n    fontSize: 32,\r\n  },\r\n  subheader: {\r\n    marginTop: 20,\r\n    fontWeight: \"700\",\r\n    fontSize: 16,\r\n  },\r\n  text: {\r\n    fontWeight: \"400\",\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default function RecipeView(props: any) {\r\n  function onAddToList(ingredient: any) {\r\n    props.onAddToList(ingredient.name);\r\n  }\r\n  function renderArrayCB(ingredient: any) {\r\n    return (\r\n      <ListItem\r\n        onPress={() => {\r\n          onAddToList(ingredient);\r\n        }}\r\n        title={ingredient.name}\r\n        key={ingredient.name}\r\n        trailing={(props) => (\r\n          <AntDesign name=\"pluscircleo\" size={24} color=\"black\" />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <ScrollView>\r\n      <Flex fill direction=\"column\">\r\n        <Image style={styles.image} source={props.recipe.strMealThumb}></Image>\r\n        <Flex direction=\"column\" style={styles.details}>\r\n          <Text style={styles.header}>{props.recipe.strMeal}</Text>\r\n          <Text style={styles.subheader}>What do you need?</Text>\r\n          <>\r\n            <Flex direction=\"column\">\r\n              {props.recipe.ingredients &&\r\n                props.recipe.ingredients.map(renderArrayCB)}\r\n            </Flex>\r\n          </>\r\n          <Text style={styles.subheader}>How to make it?</Text>\r\n          <Text style={styles.text}>{props.recipe.strInstructions}</Text>\r\n        </Flex>\r\n      </Flex>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\n// dateModified\r\n// :\r\n// null\r\n// idMeal\r\n// :\r\n// \"52874\"\r\n// ingredients\r\n// :\r\n// (15) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\r\n// strArea\r\n// :\r\n// \"British\"\r\n// strCategory\r\n// :\r\n// \"Beef\"\r\n// strCreativeCommonsConfirmed\r\n// :\r\n// null\r\n// strDrinkAlternate\r\n// :\r\n// null\r\n// strImageSource\r\n// :\r\n// null\r\n// strIngredient1\r\n// :\r\n// \"Beef\"\r\n// strIngredient2\r\n// :\r\n// \"Plain Flour\"\r\n// strIngredient3\r\n// :\r\n// \"Rapeseed Oil\"\r\n// strIngredient4\r\n// :\r\n// \"Red Wine\"\r\n// strIngredient5\r\n// :\r\n// \"Beef Stock\"\r\n// strIngredient6\r\n// :\r\n// \"Onion\"\r\n// strIngredient7\r\n// :\r\n// \"Carrots\"\r\n// strIngredient8\r\n// :\r\n// \"Thyme\"\r\n// strIngredient9\r\n// :\r\n// \"Mustard\"\r\n// strIngredient10\r\n// :\r\n// \"Egg Yolks\"\r\n// strIngredient11\r\n// :\r\n// \"Puff Pastry\"\r\n// strIngredient12\r\n// :\r\n// \"Green Beans\"\r\n// strIngredient13\r\n// :\r\n// \"Butter\"\r\n// strIngredient14\r\n// :\r\n// \"Salt\"\r\n// strIngredient15\r\n// :\r\n// \"Pepper\"\r\n// strIngredient16\r\n// :\r\n// \"\"\r\n// strIngredient17\r\n// :\r\n// \"\"\r\n// strIngredient18\r\n// :\r\n// \"\"\r\n// strIngredient19\r\n// :\r\n// \"\"\r\n// strIngredient20\r\n// :\r\n// \"\"\r\n// strInstructions\r\n// :\r\n// \"Preheat the oven to 150C/300F/Gas 2.\\r\\nToss the beef and flour together in a bowl with some salt and black pepper.\\r\\nHeat a large casserole until hot, add half of the rapeseed oil and enough of the beef to just cover the bottom of the casserole.\\r\\nFry until browned on each side, then remove and set aside. Repeat with the remaining oil and beef.\\r\\nReturn the beef to the pan, add the wine and cook until the volume of liquid has reduced by half, then add the stock, onion, carrots, thyme and mustard, and season well with salt and pepper.\\r\\nCover with a lid and place in the oven for two hours.\\r\\nRemove from the oven, check the seasoning and set aside to cool. Remove the thyme.\\r\\nWhen the beef is cool and you're ready to assemble the pie, preheat the oven to 200C/400F/Gas 6.\\r\\nTransfer the beef to a pie dish, brush the rim with the beaten egg yolks and lay the pastry over the top. Brush the top of the pastry with more beaten egg.\\r\\nTrim the pastry so there is just enough excess to crimp the edges, then place in the oven and bake for 30 minutes, or until the pastry is golden-brown and cooked through.\\r\\nFor the green beans, bring a saucepan of salted water to the boil, add the beans and cook for 4-5 minutes, or until just tender.\\r\\nDrain and toss with the butter, then season with black pepper.\\r\\nTo serve, place a large spoonful of pie onto each plate with some green beans alongside.\"\r\n// strMeal\r\n// :\r\n// \"Beef and Mustard Pie\"\r\n// strMealThumb\r\n// :\r\n// \"https://www.themealdb.com/images/media/meals/sytuqu1511553755.jpg\"\r\n// strMeasure1\r\n// :\r\n// \"1kg\"\r\n// strMeasure2\r\n// :\r\n// \"2 tbs\"\r\n// strMeasure3\r\n// :\r\n// \"2 tbs\"\r\n// strMeasure4\r\n// :\r\n// \"200ml\"\r\n// strMeasure5\r\n// :\r\n// \"400ml\"\r\n// strMeasure6\r\n// :\r\n// \"1 finely sliced\"\r\n// strMeasure7\r\n// :\r\n// \"2 chopped\"\r\n// strMeasure8\r\n// :\r\n// \"3 sprigs\"\r\n// strMeasure9\r\n// :\r\n// \"2 tbs\"\r\n// strMeasure10\r\n// :\r\n// \"2 free-range\"\r\n// strMeasure11\r\n// :\r\n// \"400g\"\r\n// strMeasure12\r\n// :\r\n// \"300g\"\r\n// strMeasure13\r\n// :\r\n// \"25g\"\r\n// strMeasure14\r\n// :\r\n// \"pinch\"\r\n// strMeasure15\r\n// :\r\n// \"pinch\"\r\n// strMeasure16\r\n// :\r\n// \"\"\r\n// strMeasure17\r\n// :\r\n// \"\"\r\n// strMeasure18\r\n// :\r\n// \"\"\r\n// strMeasure19\r\n// :\r\n// \"\"\r\n// strMeasure20\r\n// :\r\n// \"\"\r\n// strSource\r\n// :\r\n// \"https://www.bbc.co.uk/food/recipes/beef_and_mustard_pie_58002\"\r\n// strTags\r\n// :\r\n// \"Meat,Pie\"\r\n// strYoutube\r\n// :\r\n// \"https://www.youtube.com/watch?v=nMyBC9staMU\"\r\n// [[Prototype]]\r\n// :\r\n// Object\r\n","import { addIngredient, deleteIngredient } from \"../../dbSource\";\r\nimport { Dispatch } from \"react\";\r\nimport store from \"../store\";\r\n\r\nexport const addIngr = (ingredient: any) => {\r\n  return async (dispatch: Dispatch<addIng>) => {\r\n    dispatch({ type: \"ADD_TO_INGR\" });\r\n    console.log(ingredient);\r\n    addIngredient(ingredient)\r\n      .then(() => {\r\n        console.log(ingredient);\r\n        dispatch({ type: \"ADD_TO_INGR_SUC\", payload: ingredient });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"MANIPULATE_INGR_ERROR\",\r\n          payload: error.message,\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const deleteIngr = (ingredient: any) => {\r\n  return async (dispatch: Dispatch<deleteIng>) => {\r\n    var ingrs: Array<string> = store.getState().ingredients[\"data\"];\r\n    if (ingrs.includes(ingredient)) {\r\n      dispatch({ type: \"DELETE_INGR\" });\r\n      console.log(ingredient);\r\n      deleteIngredient(ingredient)\r\n        .then(() => dispatch({ type: \"DELETE_INGR_SUC\", payload: ingredient }))\r\n        .catch((error) => {\r\n          console.log(\"error\");\r\n          dispatch({\r\n            type: \"MANIPULATE_INGR_ERROR\",\r\n            payload: error,\r\n          });\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setIngrs = (ingrs: Array<string>) => {\r\n  return async (dispatch: Dispatch<setIngrs>) => {\r\n    dispatch({ type: \"SET_INGRS\", payload: ingrs });\r\n  };\r\n};\r\nexport type addIng = {\r\n  readonly type: \"ADD_TO_INGR\" | \"ADD_TO_INGR_SUC\" | \"MANIPULATE_INGR_ERROR\";\r\n  payload?: any;\r\n};\r\nexport type deleteIng = {\r\n  readonly type: \"DELETE_INGR\" | \"DELETE_INGR_SUC\" | \"MANIPULATE_INGR_ERROR\";\r\n  payload?: any;\r\n};\r\nexport type setIngrs = {\r\n  readonly type: \"SET_INGRS\";\r\n  payload: any;\r\n};\r\n","import React from \"react\";\r\nimport RecipeView from \"../views/recipeView\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addIngr } from \"../redux/actions/ingredientsActions\";\r\n\r\nexport default function RecipePresenter({ route }: any, props: any) {\r\n  const dispatch = useDispatch<any>();\r\n\r\n  function addToListACB(ingredient: any) {\r\n    dispatch(addIngr(ingredient));\r\n  }\r\n  const { recipe } = route.params;\r\n  return <RecipeView recipe={recipe} onAddToList={addToListACB} />;\r\n}\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from \"@react-navigation/native\";\r\nimport * as Linking from \"expo-linking\";\r\n\r\nimport { RootStackParamList } from \"../types\";\r\n\r\nconst linking: LinkingOptions<RootStackParamList> = {\r\n  prefixes: [\r\n    Linking.createURL(\r\n      \"https://lariwa.github.io/AdvancedInteractionProgramming/\"\r\n    ),\r\n  ],\r\n  config: {\r\n    screens: {\r\n      Root: {\r\n        screens: {\r\n          TabOne: {\r\n            screens: {\r\n              TabOneScreen: \"one\",\r\n            },\r\n          },\r\n          TabTwo: {\r\n            screens: {\r\n              TabTwoScreen: \"two\",\r\n            },\r\n          },\r\n          TabThree: {\r\n            screens: {\r\n              TabThreeScreen: \"three\",\r\n            },\r\n          },\r\n          TabFour: {\r\n            screens: {\r\n              TabFourScreen: \"four\",\r\n            },\r\n          },\r\n          TabFive: {\r\n            screens: {\r\n              TabFiveScreen: \"five\",\r\n            },\r\n          },\r\n          TabSix: {\r\n            screens: {\r\n              TabSixScreen: \"six\",\r\n            },\r\n          },\r\n          TabSeven: {\r\n            screens: {\r\n              TabFourScreen: \"seven\",\r\n            },\r\n          },\r\n          TabEight: {\r\n            screens: {\r\n              TabFourEight: \"eight\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      Modal: \"modal\",\r\n      NotFound: \"*\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default linking;\r\n","import React from \"react\";\r\nimport { ActivityIndicator } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Text } from \"../components/Themed\";\r\nimport { getMealsDetails } from \"../mealSouce\";\r\nimport { setSnackbar } from \"../redux\";\r\nimport ResultsView from \"../views/resultsView\";\r\n\r\nexport default function FavouritesPresenter() {\r\n  const dispatch = useDispatch<any>();\r\n  const favourites = useSelector((state: any) => state.favourites.data);\r\n  const [loading, setLoadingState] = React.useState<boolean>();\r\n  const [favouritesDetails, setFavouritesDetails] = React.useState<Array<any>>(\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    setLoadingState(true);\r\n    getMealsDetails(favourites)\r\n      .then((res) => {\r\n        setFavouritesDetails(res.data);\r\n        setLoadingState(false);\r\n      })\r\n      .catch((e) => {\r\n        setLoadingState(false);\r\n        dispatch(\r\n          setSnackbar(\r\n            \"Something went wrong fetching your favourites from the server: \" +\r\n              e.message\r\n          )\r\n        );\r\n      });\r\n  }, [favourites]);\r\n\r\n  return favouritesDetails.length > 0 ? (\r\n    <ResultsView results={favouritesDetails} />\r\n  ) : loading ? (\r\n    <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n  ) : (\r\n    <Text> You don't have any favourites!</Text>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, ScrollView, ActivityIndicator } from \"react-native\";\r\nimport { ListItem } from 'react-native-elements'\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { Flex, Button, IconButton } from \"@react-native-material/core\";\r\nimport DishCard from \"../components/dishCard\";\r\nimport { getIngredients } from \"../mealSouce\";\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer: {\r\n        backgroundColor: \"#FDFBF7\",\r\n        padding: 10,\r\n        top: 0,\r\n        width: \"100%\",\r\n        // height: \"100%\",\r\n        // position: \"absolute\",\r\n        paddingLeft: \"50px\",\r\n        paddingRight: \"50px\",\r\n        paddingTop: \"30px\",\r\n        alignContent: \"center\",\r\n      },\r\n      mainContainer_button: {\r\n        backgroundColor: \"var(--dark-blue)\",\r\n        width: 155,\r\n        height: 60,\r\n        marginRight: \"auto\",\r\n        marginLeft: \"auto\",\r\n        paddingTop: \"10px\",\r\n        paddingBottom: \"10px\",\r\n        borderRadius: 300,\r\n        boxShadow: \"0px 0px 100px rgba(162, 170, 106, 0.2)\",\r\n      },\r\n      details: {\r\n        width: \"100%\",\r\n        backgroundColor: \"#FDFBF7\",\r\n        borderTopLeftRadius: 15,\r\n        borderTopRightRadius: 15,\r\n        height: \"100%\",\r\n        padding: 20,\r\n      },\r\n      mainContainer_filters: {\r\n        backgroundColor: \"white\",\r\n        borderRadius: 10,\r\n        padding: 0,\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        overflowX: \"auto\",\r\n      },\r\n      textInput: {\r\n        marginBottom: \"10px\",\r\n        backgroundColor: \"#F3F2E9\",\r\n        borderRadius: 10,\r\n        width: \"100%\",\r\n        height: 45,\r\n        paddingLeft: 10,\r\n        fontStyle: \"italic\",\r\n      },\r\n});\r\n\r\n\r\nexport default function GroceryListView(props: any){\r\n\r\n    return props.loading ? (\r\n        <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n    ) : (\r\n        <ScrollView>\r\n            <Flex>\r\n                {props.ingredients}\r\n                <IconButton\r\n                    onPress={props.onRemoveIngredient}\r\n                    icon={() => (\r\n                <AntDesign name=\"minuscircleo\" size={24} color=\"black\"/>\r\n            )}\r\n            />\r\n        </Flex>\r\n\r\n        </ScrollView>\r\n\r\n\r\n    );\r\n\r\n    /*function onRemoveIngredient(){\r\n        props.onRemove();\r\n    }\r\n    function renderListCB(ingredient: any){\r\n        return(\r\n            <ListItem\r\n                title={ingredient.name}\r\n\r\n            />\r\n        );\r\n    }\r\n\r\n    return(\r\n        <ScrollView>\r\n            <Flex fill direction=\"column\">\r\n            <Flex direction=\"column\" style={styles.details}>\r\n            <Text>Your grocery list</Text>\r\n                <Flex direction=\"column\">\r\n                    {props.groceryList &&\r\n                    props.groceryList.map(renderListCB)}\r\n                </Flex>\r\n            </Flex> \r\n            </Flex>\r\n        </ScrollView>\r\n    );*/\r\n}","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addIngr, deleteIngr } from \"../redux/actions/ingredientsActions\";\r\nimport { setSnackbar } from \"../redux\";\r\nimport GroceryListView from \"../views/groceryListView\";\r\nimport { RootTabScreenProps } from \"../types\";\r\nimport { getGroceries } from \"../dbSource\";\r\n\r\nexport default function GroceryListPresenter(\r\n  props: any,\r\n  { navigation }: RootTabScreenProps<\"Groceries\">\r\n) {\r\n  const ingredients = useSelector((state: any) => state.ingredients.data);\r\n  const dispatch = useDispatch<any>();\r\n  const addedToIngr = useSelector((state: any) =>\r\n    state.ingredients.data.includes(props.id)\r\n  );\r\n  const loading = useSelector((state: any) => state.ingredients.loading);\r\n  const user = useSelector((state: any) => state.user);\r\n\r\n  function removeIngredientACB() {\r\n    if (!user)\r\n      dispatch(\r\n        setSnackbar(\r\n          \"Please log in to add your ingredients to the grocery list!\"\r\n        )\r\n      );\r\n    else {\r\n      if (!addedToIngr) dispatch(addIngr(props.id));\r\n      else dispatch(deleteIngr(props.id));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GroceryListView\r\n      ingredients={props.list}\r\n      onRemoveIngredient={removeIngredientACB}\r\n      addedToIngr={addedToIngr}\r\n    />\r\n  );\r\n}\r\n","/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport {\r\n  NavigationContainer,\r\n  DefaultTheme,\r\n  DarkTheme,\r\n} from \"@react-navigation/native\";\r\nimport { Flex } from \"@react-native-material/core\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport * as React from \"react\";\r\nimport { ColorSchemeName, Pressable, Text, View } from \"react-native\";\r\n\r\nimport Colors from \"../constants/Colors\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\nimport ModalPresenter from \"../presenters/modalPresenter\";\r\nimport NotFoundScreen from \"../views/notFoundView\";\r\nimport WelcomePresenter from \"../presenters/welcomePresenter\";\r\nimport LoginPresenter from \"../presenters/loginPresenter\";\r\nimport RegistrationPresenter from \"../presenters/registrationPresenter\";\r\nimport SearchPresenter from \"../presenters/searchPresenter\";\r\nimport RecipePresenter from \"../presenters/recipePresenter\";\r\nimport {\r\n  RootStackParamList,\r\n  RootTabParamList,\r\n  RootTabScreenProps,\r\n} from \"../types\";\r\nimport LinkingConfiguration from \"./LinkingConfiguration\";\r\nimport { login } from \"../loginSource\";\r\nimport FavouritesPresenter from \"../presenters/favourtiesPresenter\";\r\nimport GroceryListPresenter from \"../presenters/groceryListPresenter\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setSnackbar } from \"../redux\";\r\nimport { Octicons } from '@expo/vector-icons';\r\n\r\nexport default function Navigation({\r\n  colorScheme,\r\n}: {\r\n  colorScheme: ColorSchemeName;\r\n}) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === \"dark\" ? DarkTheme : DefaultTheme}\r\n    >\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n/**\r\n * A root stack navigator is often used for displaying modals on top of all other content.\r\n * https://reactnavigation.org/docs/modal\r\n */\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n  const user = useSelector((state: any) => state.user);\r\n\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Root\"\r\n        component={BottomTabNavigator}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"NotFound\"\r\n        component={NotFoundScreen}\r\n        options={{ title: \"Oops!\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Favourites\"\r\n        component={user != \"\" ? FavouritesPresenter : LoginPresenter}\r\n      />\r\n      <Stack.Screen name=\"Login\" component={LoginPresenter} />\r\n      <Stack.Screen name=\"Registration\" component={RegistrationPresenter} />\r\n      <Stack.Screen name=\"Recipe\" component={RecipePresenter} />\r\n      <Stack.Group screenOptions={{ presentation: \"modal\" }}>\r\n        <Stack.Screen name=\"Modal\" component={ModalPresenter} />\r\n      </Stack.Group>\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\r\n * https://reactnavigation.org/docs/bottom-tab-navigator\r\n */\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n  const user = useSelector((state: any) => state.user);\r\n  const dispatch = useDispatch<any>();\r\n\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"TabOne\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors[colorScheme].tint,\r\n      }}\r\n    >\r\n      <BottomTab.Screen\r\n        name=\"TabOne\"\r\n        component={WelcomePresenter}\r\n        options={({ navigation }: RootTabScreenProps<\"TabOne\">) => ({\r\n          title: \"Welcome\",\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} tabName=\"Welcome\" />,\r\n          headerRight: () => (\r\n            <Flex direction=\"row\">\r\n              <Pressable\r\n                onPress={() => navigation.navigate(\"Modal\")}\r\n                style={({ pressed }) => ({\r\n                  opacity: pressed ? 0.5 : 1,\r\n                })}\r\n              >\r\n                <FontAwesome\r\n                  name=\"info-circle\"\r\n                  size={25}\r\n                  color={Colors[colorScheme].text}\r\n                  style={{ marginRight: 15 }}\r\n                />\r\n              </Pressable>\r\n              <Pressable\r\n                onPress={() => navigation.navigate(\"Login\")}\r\n                style={({ pressed }) => ({\r\n                  opacity: pressed ? 0.5 : 1,\r\n                })}\r\n              >\r\n                <FontAwesome\r\n                  name=\"sign-in\"\r\n                  size={25}\r\n                  color={Colors[colorScheme].text}\r\n                  style={{ marginRight: 15 }}\r\n                />\r\n              </Pressable>\r\n            </Flex>\r\n          ),\r\n        })}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Favourties\"\r\n        component={user ? FavouritesPresenter : LoginPresenter}\r\n        listeners={{\r\n          tabPress: (e) => {\r\n            if (!user)\r\n              dispatch(setSnackbar(\"Please login to see your favourites\"));\r\n          },\r\n        }}\r\n        options={{\r\n          title: \"Favorites\",\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} tabName=\"Favorites\"/>,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Search\"\r\n        component={SearchPresenter} //Search\r\n        options={{\r\n          title: \"Search\",\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} tabName=\"Search\" />,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Grocery\"\r\n        component={user ? GroceryListPresenter : LoginPresenter} //Grocery\r\n        listeners={{\r\n          tabPress: (e) => {\r\n            if (!user)\r\n              dispatch(setSnackbar(\"Please login to see your grocery list\"));\r\n          },\r\n        }}\r\n        options={{\r\n          title: \"Grocery list\",\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} tabName=\"Grocery list\"/>,\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\r\n */\r\nfunction TabBarIcon(props: {\r\n  name: React.ComponentProps<typeof FontAwesome>[\"name\"];\r\n  color: string;\r\n  tabName: string,\r\n}) {\r\n\r\n  if (props.tabName == \"Welcome\"){\r\n    return <FontAwesome name = \"home\" size={30} color=\"black\" />;\r\n  }else if (props.tabName == \"Search\"){\r\n    return <Octicons name = \"search\" size={30} color=\"black\" />;\r\n  }else if (props.tabName == \"Favorites\"){\r\n    return <FontAwesome name= \"heart\" size={30} color=\"black\" />;\r\n  }else if (props.tabName == \"Grocery list\"){\r\n    return <MaterialIcons name=\"local-grocery-store\" size={30} color=\"black\" />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Snackbar } from \"react-native-paper\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { hideSnackbar } from \"../redux\";\r\nexport default function SnackbarPresenter() {\r\n  const dispatch = useDispatch<any>();\r\n  const onDismissSnackBar = () => dispatch(hideSnackbar());\r\n  const visibility = useSelector((state: any) => state.snackbar.visibility);\r\n  const msg = useSelector((state: any) => state.snackbar.msg);\r\n\r\n  return (\r\n    <Snackbar\r\n      visible={visibility}\r\n      onDismiss={onDismissSnackBar}\r\n      duration={2000}\r\n      action={{\r\n        label: \"Dismiss\",\r\n      }}\r\n    >\r\n      {msg}\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { StatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\r\n\r\nimport useCachedResources from \"./hooks/useCachedResources\";\r\nimport useColorScheme from \"./hooks/useColorScheme\";\r\nimport Navigation from \"./navigation\";\r\nimport SnackbarPresenter from \"./presenters/snackbarPresenter\";\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n        <SnackbarPresenter />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { FontAwesome } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...FontAwesome.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import { registerRootComponent } from \"expo\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nexport default function EntryPoint() {\r\n  return (\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n}\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(EntryPoint);\r\n"],"sourceRoot":""}