{"version":3,"sources":["styles/notfound.png","styles/notFoundImage.png","assets/fonts/SpaceMono-Regular.ttf","styles/loginImage.png","styles/registrationImage.png","hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","views/notFoundView.tsx","views/loginView.tsx","loginSource.ts","redux/reducers/favouritesReducer.ts","redux/reducers/ingredientsReducer.ts","redux/reducers/index.ts","redux/store.ts","dbSource.ts","redux/actions/index.ts","presenters/loginPresenter.tsx","views/registrationView.tsx","presenters/registrationPresenter.tsx","components/dropdownMenu.tsx","views/searchView.tsx","resolvePromise.ts","components/loading.tsx","views/promiseNoData.tsx","redux/actions/favouritesActions.ts","views/favBtnView.tsx","presenters/favouriteBtnPresenter.tsx","components/dishCard.tsx","presenters/dishCardPresenter.tsx","views/resultsView.tsx","views/noResultsView.tsx","presenters/searchPresenter.tsx","mealSouce.ts","redux/actions/ingredientsActions.ts","components/ingredientItem.tsx","presenters/ingredientItemPresenter.tsx","views/recipeView.tsx","presenters/recipePresenter.tsx","views/aboutView.tsx","presenters/aboutPresenter.tsx","navigation/LinkingConfiguration.ts","presenters/favourtiesPresenter.tsx","views/groceryListView.tsx","presenters/groceryListPresenter.tsx","views/profileView.tsx","presenters/profilePresenter.tsx","navigation/index.tsx","presenters/snackbarPresenter.tsx","App.tsx","hooks/useCachedResources.ts","index.js"],"names":["module","exports","useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","NotFoundScreen","navigation","styles","container","title","TouchableOpacity","onPress","replace","link","linkText","Image","image","source","require","StyleSheet","create","width","height","left","top","flex","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","LoginView","fill","mainContainer","mainContainer_h5","initialValues","email","password","onSubmit","onLogin","validationSchema","signupSchema","handleChange","handleBlur","handleSubmit","values","errors","touched","TextInput","mainContainer_textInput","onChangeText","onBlur","value","placeholder","error","secureTextEntry","mainContainer_italics","onNewUser","mainContainer_button","loading","maincontainer_image","colorScheme","position","paddingLeft","paddingRight","paddingTop","alignContent","marginRight","marginLeft","marginBottom","borderColor","borderWidth","borderRadius","fontStyle","textDecorationLine","overflow","paddingBottom","boxShadow","bottom","resizeMode","axios","defaults","baseURL","initFavState","data","initIngrState","rootReducer","combineReducers","token","state","action","type","payload","user","favourites","success","filter","fav","ingredients","console","log","ingr","currentRecipe","snackbar","msg","visibility","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","getHeader","headers","authorization","getState","setUserData","username","dispatch","get","then","result","catch","setSnackbar","LoginPresenter","useDispatch","useState","setLoadingState","SignupSchema","Yup","shape","required","min","loginData","post","res","navigate","response","message","RegistrationView","direction","mainContainer__h5","confirmPassword","onRegister","mainContainer__textInput","mainContainer__error","mainContainer__italics","mainContainer__button","disabled","right","RegistrationPresenter","oneOf","registerData","setNewUserData","dropdown","fontColor","placeholderStyle","selectedStyle","DropdownMenu","activeColor","search","labelField","valueField","searchItem","onChange","mainContainer_filters","display","overflowX","mainContainer__search","SearchView","spacing","onQueryChanged","onSearch","ScrollView","horizontal","categories","onCategoriesSelected","selectedCategories","areas","onAreasSelected","selectedAreas","ingrToSelect","onIngredientsSelected","selectedIngredients","resolvePromise","promiseToResolve","promiseState","notifyACB","promise","err","Loading","ActivityIndicator","size","promiseNoData","toString","addFav","id","addFavourite","deleteFav","includes","deleteFavourite","FavBtnView","onClicked","icon","name","addedToFav","FavouriteBtnPresenter","useSelector","dishcard","shadowColor","shadowOffset","shadowOpacity","shadowRadius","dishcard__left","borderTopLeftRadius","borderBottomLeftRadius","dishcard__right","minHeight","border","borderTopRightRadius","borderBottomRightRadius","dishcard__right__details","margin","dishcard__right__details__header","dishcard__right__details__tags","flexDirection","flexWrap","dishcard__right__details__tags__tag","DishCard","onSelectedRecipe","strMealThumb","uri","strMeal","strTags","split","map","tag","idMeal","DishCardPresenter","recipe","textInput","topRecipes","ResultsView","header","results","r","NoResultsView","modalView","messageText","modalText","textAlign","elevation","SearchPresenter","setCategoriesState","setAreasState","setIngredientsState","setSelectedCategories","setSelectedAreas","setSelectedIngredients","query","setQueryState","setResultsState","React","topFavs","setTopFavs","topFavsLoading","setTopFavsLoading","mealsPromiseState","setMealsPromiseState","setPromise","setData","setError","mealPromiseStateChanged","useEffect","all","elem","label","strCategory","strArea","strIngredient","ids","length","filterMeals","addIngr","ingredient","addIngredient","deleteIngr","deleteIngredient","IngredientItem","Image_Http_URL","onBtnClicked","listItemPressed","leading","imageIngr","showQuantity","quantity","trailing","MaterialIcons","added","listItem","IngredientItemPresenter","addedToList","details","subheader","details_header","gap","tags","RecipeView","vertical","strInstructions","RecipePresenter","route","params","AboutView","containerWithInfo","containerWithInfo_box","question","hyperlinkStyle","Linking","openURL","AboutPresenter","linking","prefixes","config","screens","Root","TabOne","TabOneScreen","TabTwo","TabTwoScreen","TabThree","TabThreeScreen","TabFour","TabFourScreen","TabFive","TabFiveScreen","TabSix","TabSixScreen","TabSeven","TabEight","TabFourEight","Modal","NotFound","FavouritesPresenter","favouritesDetails","setFavouritesDetails","e","mainContianer","GroceryListView","GroceryListPresenter","mainComponents","profile_button","profile_text","ProfileView","Button","handleLogout","ProfilePresenter","Navigation","NavigationContainer","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","Stack","createNativeStackNavigator","Navigator","Screen","component","BottomTabNavigator","options","headerShown","BottomTab","createBottomTabNavigator","initialRouteName","screenOptions","tabBarActiveTintColor","tabBarIcon","TabBarIcon","tabName","listeners","tabPress","Octicons","FontAwesome","MaterialCommunityIcons","SnackbarPresenter","Snackbar","visible","onDismiss","duration","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","loadResourcesAndDataAsync","useCachedResources","StatusBar","EntryPoint","registerRootComponent"],"mappings":"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","file":"static/js/app.94513ee1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notfound.d0e990fc.png\";","module.exports = __webpack_public_path__ + \"static/media/notFoundImage.dbae6ccc.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/loginImage.2f21b2f9.png\";","module.exports = __webpack_public_path__ + \"static/media/registrationImage.9ecc3fe5.png\";","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","const tintColorLight = '#373737';\r\nconst tintColorDark = '#FDFBF7';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#373737',\r\n    background: '#FDFBF7',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n  },\r\n  dark: {\r\n    text: '#FDFBF7',\r\n    background: '#242526',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n  },\r\n};\r\n","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import { Image, StyleSheet, TouchableOpacity } from \"react-native\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { Text, View } from \"../components/Themed\";\r\nimport { RootStackScreenProps } from \"../types\";\r\nimport React from \"react\";\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: RootStackScreenProps<\"NotFound\">) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>This screen doesn't exist.</Text>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.replace(\"Root\")}\r\n        style={styles.link}\r\n      >\r\n        <Text style={styles.linkText}>Go to home screen!</Text>\r\n      </TouchableOpacity>\r\n      <Image\r\n        style={styles.image}\r\n        source={require(\"../styles/notfound.png\")}\r\n      ></Image>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: 200,\r\n    height: 150,\r\n    left: 0,\r\n    top: \"20%\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: \"#2e78b7\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Image, TextInput, View, StyleSheet } from \"react-native\";\r\nimport { Flex, Text, Button } from \"@react-native-material/core\";\r\nimport { styles_loginPage } from \"./styles\";\r\nimport { Formik } from \"formik\";\r\nexport default function LoginView(props: any) {\r\n  return (\r\n    <>\r\n      <Flex fill style={styles(props).mainContainer}>\r\n        <Text style={styles(props).mainContainer_h5}>Sign in</Text>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={props.onLogin}\r\n          validationSchema={props.signupSchema}\r\n        >\r\n          {({\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            values,\r\n            errors,\r\n            touched,\r\n          }) => (\r\n            <View>\r\n              <TextInput\r\n                style={styles(props).mainContainer_textInput}\r\n                onChangeText={handleChange(\"email\")}\r\n                onBlur={handleBlur(\"email\")}\r\n                value={values.email}\r\n                placeholder=\"Email\"\r\n              />\r\n              {errors.email && touched.email ? (\r\n                <Text style={styles(props).error}>{errors.email}</Text>\r\n              ) : null}\r\n              <TextInput\r\n                style={styles(props).mainContainer_textInput}\r\n                onChangeText={handleChange(\"password\")}\r\n                onBlur={handleBlur(\"password\")}\r\n                value={values.password}\r\n                placeholder=\"Password\"\r\n                secureTextEntry={true}\r\n              />\r\n              {errors.password && touched.password ? (\r\n                <Text style={styles(props).error}>{errors.password}</Text>\r\n              ) : null}\r\n              <Text\r\n                style={styles(props).mainContainer_italics}\r\n                onPress={props.onNewUser}\r\n              >\r\n                New user?\r\n              </Text>\r\n              <Button\r\n                title=\"Get Started\"\r\n                color=\"#A7C6DA\"\r\n                onPress={handleSubmit}\r\n                style={styles(props).mainContainer_button}\r\n                loading={props.loading}\r\n              />\r\n            </View>\r\n          )}\r\n        </Formik>\r\n        <View  style={styles(props).maincontainer_image}>\r\n          <Image\r\n            style={styles(props).image}\r\n            source={require(\"../styles/loginImage.png\")}\r\n          ></Image>\r\n        </View>\r\n      </Flex>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst styles = (props: any) => StyleSheet.create({\r\n  mainContainer: {\r\n    backgroundColor: props.colorScheme == \"dark\" ? \"#18191A\" : \"#FDFBF7\",\r\n    padding: 10,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    paddingLeft: 50,\r\n    paddingRight: 50,\r\n    paddingTop: 0,\r\n    alignContent: \"center\",\r\n  },\r\n  mainContainer_textInput: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginBottom: 10,\r\n    // border: \"1px solid #A7C6DA\",\r\n    borderColor: \"#A7C6DA\",\r\n    borderWidth: 2,\r\n    color: \"#A7C6DA\",\r\n    borderRadius: 10,\r\n    width: 264,\r\n    height: 45,\r\n    paddingLeft: 10,\r\n  },\r\n  mainContainer_h5: {\r\n    fontWeight: \"bold\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    fontSize: 32,\r\n    marginBottom: 20,\r\n    color: \"#A7C6DA\",\r\n  },\r\n  mainContainer_italics: {\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    color: \"#A7C6DA\",\r\n    textDecorationLine: \"underline\",\r\n    marginBottom: 30,\r\n    overflow: \"hidden\",\r\n  },\r\n  mainContainer_button: {\r\n    // backgroundColor: \"#A7C6DA\",\r\n    width: 155,\r\n    height: 60,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderRadius: 300,\r\n    boxShadow: \"0px 0px 100px rgba(162, 170, 106, 0.2)\",\r\n  },\r\n  maincontainer_image:{\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    width: \"50%\",\r\n    height: \"50%\"\r\n  },\r\n  image:{\r\n    width: \"auto\",\r\n    height: \"100%\",\r\n    resizeMode: 'contain',\r\n  },\r\n  error: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    color: \"red\",\r\n    width: 264,\r\n    height: 45,\r\n    paddingLeft: 10,\r\n  },\r\n});\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://mealappserver.onrender.com\";\r\n\r\nfunction login(username: string, password: string) {\r\n  return axios.post(\"/user/login\", {\r\n    username: username,\r\n    password: password,\r\n  });\r\n}\r\nfunction signup(username: string, password: string) {\r\n  return axios.post(\"/user/signup\", {\r\n    username: username,\r\n    password: password,\r\n  });\r\n}\r\nexport { login, signup };\r\n","export const favouritesReducer = (\r\n  state: FavState = initFavState,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_FAV\" || \"DELETE_FAV\":\r\n      return {\r\n        data: state.data,\r\n        loading: true,\r\n        success: false,\r\n        error: false,\r\n      };\r\n    case \"ADD_TO_FAV_SUC\":\r\n      return {\r\n        data: [...state.data, action.payload],\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"DELETE_FAV_SUC\":\r\n      return {\r\n        data: state.data.filter((fav) => fav !== action.payload),\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"MANIPULATE_FAV_ERROR\":\r\n      return {\r\n        data: state.data,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n    case \"SET_FAVS\":\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"GET_FAVS_SUC\":\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype FavState = {\r\n  data: Array<string>;\r\n  loading: boolean | null;\r\n  error: string | boolean | null;\r\n};\r\nconst initFavState = {\r\n  data: <Array<string>>[],\r\n  loading: false,\r\n  error: <string | null | boolean>false,\r\n};\r\n","export const ingredientsReducer = (\r\n  state: IngrState = initIngrState,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_INGR\" || \"DELETE_INGR\":\r\n      return {\r\n        data: state.data,\r\n        loading: true,\r\n        success: false,\r\n        error: false,\r\n      };\r\n    case \"ADD_TO_INGR_SUC\":\r\n      return {\r\n        data: [...state.data, action.payload],\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"DELETE_INGR_SUC\":\r\n      console.log(action);\r\n      return {\r\n        data: state.data.filter((ingr) => ingr !== action.payload),\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"MANIPULATE_INGR_ERROR\":\r\n      return {\r\n        data: state.data,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n    case \"SET_INGRS\":\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"GET_INGRS_SUC\":\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype IngrState = {\r\n  data: Array<string>;\r\n  loading: boolean | null;\r\n  error: string | boolean | null;\r\n};\r\nconst initIngrState = {\r\n  data: <Array<string>>[],\r\n  loading: false,\r\n  error: <string | null | boolean>false,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { favouritesReducer } from \"./favouritesReducer\";\r\nimport { ingredientsReducer } from \"./ingredientsReducer\";\r\nconst user = (state = \"\", action: any) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst token = (state = {}, action: any) => {\r\n  switch (action.type) {\r\n    case \"SET_TOKEN\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst currentRecipe = (state = {}, action: any) => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_RECIPE\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst snackbar = (\r\n  state: SnackBarState = { msg: \"\", visibility: false },\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_MSG\":\r\n      return {\r\n        msg: action.payload,\r\n        visibility: true,\r\n      };\r\n    case \"SET_VISIBILITY\":\r\n      return {\r\n        msg: state.msg,\r\n        visibility: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst rootReducer = combineReducers({\r\n  token: token,\r\n  user: user,\r\n  favourites: favouritesReducer,\r\n  ingredients: ingredientsReducer,\r\n  currentRecipe: currentRecipe,\r\n  snackbar: snackbar,\r\n});\r\n\r\nexport type ApplicationState = ReturnType<typeof rootReducer>;\r\n\r\nexport { rootReducer };\r\ntype SnackBarState = {\r\n  msg: string;\r\n  visibility: boolean;\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"./reducers\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware));\r\n\r\nconst store = createStore(rootReducer, composedEnhancer);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport store from \"./redux/store\";\r\n\r\nfunction addFavourite(id: string) {\r\n  return axios.post(\r\n    \"/db/addFavourite\",\r\n    {\r\n      id: id,\r\n    },\r\n    getHeader()\r\n  );\r\n}\r\nfunction deleteFavourite(id: string) {\r\n  return axios.post(\r\n    \"/db/deleteFavourite\",\r\n    {\r\n      id: id,\r\n    },\r\n    getHeader()\r\n  );\r\n}\r\nfunction getFavourites() {\r\n  return axios.get(\"/db/getFavourites\", getHeader());\r\n}\r\n\r\nfunction addIngredient(ingredient: string) {\r\n  return axios.post(\r\n    \"/db/addIngredient\",\r\n    {\r\n      ingredient: ingredient,\r\n    },\r\n    getHeader()\r\n  );\r\n}\r\nfunction deleteIngredient(ingredient: string) {\r\n  return axios.post(\r\n    \"/db/deleteIngredient\",\r\n    {\r\n      ingredient: ingredient,\r\n    },\r\n    getHeader()\r\n  );\r\n}\r\nfunction getGroceries() {\r\n  return axios.get(\"/db/getGroceries\", getHeader());\r\n}\r\n\r\nfunction getTopFavourites() {\r\n  return axios.get(\"/db/topTen\").then((res) => {\r\n    return axios.post(\"/api/mealsDetails\", {\r\n      ids: res.data,\r\n    });\r\n  });\r\n}\r\nfunction getHeader() {\r\n  return { headers: { authorization: \"bearer \" + store.getState().token } };\r\n}\r\n\r\nexport {\r\n  addFavourite,\r\n  deleteFavourite,\r\n  getFavourites,\r\n  getTopFavourites,\r\n  addIngredient,\r\n  deleteIngredient,\r\n  getGroceries,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport { getFavourites, getGroceries, getIngredients } from \"../../dbSource\";\r\n\r\nexport const setToken = (token: String) => ({\r\n  type: \"SET_TOKEN\",\r\n  payload: token,\r\n});\r\nexport const setCurrentRecipe = (recipe: any) => ({\r\n  type: \"SET_CURRENT_RECIPE\",\r\n  payload: recipe,\r\n});\r\n\r\nexport const setUserData = (username: string, token: String) => {\r\n  return async (dispatch: Dispatch<setUserData>) => {\r\n    dispatch({\r\n      type: \"SET_TOKEN\",\r\n      payload: token,\r\n    });\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      payload: username,\r\n    });\r\n\r\n    getFavourites()\r\n      .then((result) => {\r\n        dispatch({ type: \"GET_FAVS_SUC\", payload: result.data });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"MANIPULATE_FAV_ERROR\",\r\n          payload: error,\r\n        });\r\n      });\r\n    getGroceries()\r\n      .then((result) => {\r\n        dispatch({ type: \"GET_INGRS_SUC\", payload: result.data });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"MANIPULATE_INGR_ERROR\",\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const deleteUserData = () => {\r\n  return async (dispatch: Dispatch<setUserData>) => {\r\n    dispatch({\r\n      type: \"SET_TOKEN\",\r\n      payload: null,\r\n    });\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      payload: null,\r\n    });\r\n\r\n    dispatch({ type: \"SET_FAVS\", payload: [] });\r\n\r\n    dispatch({ type: \"SET_INGRS\", payload: [] });\r\n  };\r\n};\r\nexport const setNewUserData = (username: string, token: String) => {\r\n  return async (dispatch: Dispatch<setUserData>) => {\r\n    dispatch({\r\n      type: \"SET_TOKEN\",\r\n      payload: token,\r\n    });\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      payload: username,\r\n    });\r\n  };\r\n};\r\nexport const setSnackbar = (msg: string) => {\r\n  return async (dispatch: Dispatch<setSnackbar>) => {\r\n    dispatch({\r\n      type: \"SET_MSG\",\r\n      payload: msg,\r\n    });\r\n    dispatch({\r\n      type: \"SET_VISBILITY\",\r\n      payload: true,\r\n    });\r\n  };\r\n};\r\nexport const hideSnackbar = () => ({\r\n  type: \"SET_VISIBILITY\",\r\n  payload: false,\r\n});\r\nexport type setUserData = {\r\n  readonly type:\r\n    | \"SET_TOKEN\"\r\n    | \"SET_USER\"\r\n    | \"GET_FAVS_SUC\"\r\n    | \"MANIPULATE_FAV_ERROR\"\r\n    | \"GET_INGRS_SUC\"\r\n    | \"MANIPULATE_INGR_ERROR\"\r\n    | \"SET_FAVS\"\r\n    | \"SET_INGRS\";\r\n  payload: any;\r\n};\r\nexport type setSnackbar = {\r\n  readonly type: \"SET_MSG\" | \"SET_VISBILITY\";\r\n  payload?: string | boolean;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport LoginView from \"../views/loginView\";\r\nimport { login } from \"../loginSource\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUserData, setSnackbar } from \"../redux\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function LoginPresenter(props: {\r\n  navigation: { navigate: (arg0: string) => void };\r\n}) {\r\n  const dispatch = useDispatch<any>();\r\n  const colorScheme = useColorScheme();\r\n  const [loading, setLoadingState] = useState(false);\r\n\r\n  function onLoginACB(loginData: { email: string; password: string }) {\r\n    setLoadingState(true);\r\n    login(loginData.email, loginData.password)\r\n      .then((res: any) => {\r\n        dispatch(setSnackbar(\"You logged in successfully\"));\r\n        dispatch(setUserData(loginData.email, res.data.token));\r\n        setLoadingState(false);\r\n        props.navigation.navigate(\"Search\");\r\n      })\r\n      .catch((data) => {\r\n        dispatch(setSnackbar(data.response.data?.error || data.message));\r\n        setLoadingState(false);\r\n      });\r\n  }\r\n  function onRegistrationACB() {\r\n    props.navigation.navigate(\"Registration\");\r\n  }\r\n  const SignupSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    password: Yup.string()\r\n      .required(\"Password is a required field\")\r\n      .min(8, \"Password must be at least 8 characters\"),\r\n  });\r\n  return (\r\n    <LoginView\r\n      onLogin={onLoginACB}\r\n      onNewUser={onRegistrationACB}\r\n      loading={loading}\r\n      signupSchema={SignupSchema}\r\n      colorScheme={colorScheme}\r\n    ></LoginView>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Image, TextInput, View, StyleSheet } from \"react-native\";\r\nimport { Flex, Text, Button } from \"@react-native-material/core\";\r\nimport { styles_registrationPage } from \"./styles\";\r\nimport { Field, Formik } from \"formik\";\r\n\r\nexport default function RegistrationView(props: any) {\r\n  return (\r\n    <Flex  fill style={styles(props).mainContainer} direction=\"column\">\r\n      <View>\r\n          <Text style={styles(props).mainContainer__h5}>Sign up</Text>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\", confirmPassword: \"\" }}\r\n          onSubmit={props.onRegister}\r\n          validationSchema={props.signupSchema}\r\n        >\r\n          {({\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            values,\r\n            errors,\r\n            touched,\r\n          }) => (\r\n            <View>\r\n              <TextInput\r\n                style={styles(props).mainContainer__textInput}\r\n                onChangeText={handleChange(\"email\")}\r\n                onBlur={handleBlur(\"email\")}\r\n                value={values.email}\r\n                placeholder=\"Email\"\r\n              />\r\n              {errors.email && touched.email ? (\r\n                <Text style={styles(props).mainContainer__error}>{errors.email}</Text>\r\n              ) : null}\r\n              <TextInput\r\n                style={styles(props).mainContainer__textInput}\r\n                onChangeText={handleChange(\"password\")}\r\n                onBlur={handleBlur(\"password\")}\r\n                value={values.password}\r\n                placeholder=\"Password\"\r\n                secureTextEntry={true}\r\n              />\r\n              {errors.password && touched.password ? (\r\n                <Text style={styles(props).mainContainer__error}>\r\n                  {errors.password}\r\n                </Text>\r\n              ) : null}\r\n\r\n              <TextInput\r\n                style={styles(props).mainContainer__textInput}\r\n                onChangeText={handleChange(\"confirmPassword\")}\r\n                onBlur={handleBlur(\"confirmPassword\")}\r\n                value={values.confirmPassword}\r\n                placeholder=\"Confirm your password\"\r\n                secureTextEntry={true}\r\n              />\r\n              {errors.confirmPassword && touched.confirmPassword ? (\r\n                <Text style={styles(props).mainContainer__error}>\r\n                  {errors.confirmPassword}\r\n                </Text>\r\n              ) : null}\r\n              <Text\r\n                style={styles(props).mainContainer__italics}\r\n                onPress={props.onLogin}\r\n              >\r\n                Alredy have an account?\r\n              </Text>\r\n              <Button\r\n                title=\"Get Started\"\r\n                color=\"#A7C6DA\"\r\n                style={styles(props).mainContainer__button}\r\n                onPress={handleSubmit}\r\n                loading={props.loading}\r\n                disabled={props.loading}\r\n              />\r\n            </View>\r\n          )}\r\n        </Formik>\r\n      </View>\r\n      <View  style={styles(props).maincontainer_image}>\r\n          <Image\r\n            style={styles(props).image}\r\n            source={require(\"../styles/registrationImage.png\")}\r\n          ></Image>\r\n        </View>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nconst styles = (props: any) => StyleSheet.create({\r\n  mainContainer: {\r\n    backgroundColor: props.colorScheme == \"dark\" ? \"#18191A\" : \"#FDFBF7\",\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    paddingLeft: 50,\r\n    paddingRight: 50,\r\n    paddingTop: 10,\r\n    alignContent: \"center\",\r\n  },\r\n  mainContainer__textInput: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginBottom: 10,\r\n    borderWidth: 2,\r\n    color: \"#A7C6DA\",\r\n    borderColor: \"#A7C6DA\",\r\n    borderRadius: 10,\r\n    width: 264,\r\n    height: 45,\r\n    paddingLeft: 10,\r\n  },\r\n  mainContainer__h5: {\r\n    fontWeight: \"bold\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    fontSize: 32,\r\n    marginBottom: 20,\r\n    color: \"#A7C6DA\",\r\n  },\r\n  mainContainer__italics: {\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    textDecorationLine: \"underline\",\r\n    marginBottom: 30,\r\n    overflow: \"hidden\",\r\n    color: \"#A7C6DA\",\r\n  },\r\n  mainContainer__button: {\r\n    // backgroundColor: \"#314959\",\r\n    width: 155,\r\n    height: 60,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderRadius: 300,\r\n    boxShadow: \"0px 0px 100px rgba(162, 170, 106, 0.2)\",\r\n    color: \"#A7C6DA\",\r\n  },\r\n  maincontainer_image:{\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n    width: \"50%\",\r\n    height: \"50%\"\r\n  },\r\n  image:{\r\n    width: \"auto\",\r\n    height: \"100%\",\r\n    resizeMode: 'contain',\r\n  },\r\n  mainContainer__error: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    color: \"red\",\r\n    width: 264,\r\n    height: 45,\r\n    paddingLeft: 10,\r\n  },\r\n});\r\n\r\n","import React, { useState } from \"react\";\r\nimport RegistrationView from \"../views/registrationView\";\r\nimport { signup } from \"../loginSource\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setNewUserData, setSnackbar } from \"../redux\";\r\nimport * as Yup from \"yup\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\n\r\nexport default function RegistrationPresenter(props: any) {\r\n  const dispatch = useDispatch<any>();\r\n  const [loading, setLoadingState] = useState(false);\r\n  const colorScheme = useColorScheme();\r\n\r\n  function onRegistrationACB(registerData: {\r\n    email: string;\r\n    password: string;\r\n  }) {\r\n    setLoadingState(true);\r\n    signup(registerData.email, registerData.password)\r\n      .then((res: any) => {\r\n        dispatch(setNewUserData(registerData.email, res.data));\r\n        dispatch(setSnackbar(\"You registered successfully\"));\r\n        props.navigation.navigate(\"Search\");\r\n      })\r\n      .catch((data) => {\r\n        dispatch(setSnackbar(data.response.data?.message || data.message));\r\n      });\r\n  }\r\n  function onLoginACB() {\r\n    props.navigation.navigate(\"Login\");\r\n  }\r\n\r\n  const SignupSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    password: Yup.string()\r\n      .required(\"Password is a required field\")\r\n      .min(8, \"Password must be at least 8 characters\"),\r\n    confirmPassword: Yup.string().oneOf(\r\n      [Yup.ref(\"password\"), null],\r\n      \"Passwords must match\"\r\n    ),\r\n  });\r\n  return (\r\n    <>\r\n      <RegistrationView\r\n        onRegister={onRegistrationACB}\r\n        onLogin={onLoginACB}\r\n        loading={loading}\r\n        signupSchema={SignupSchema}\r\n        colorScheme={colorScheme}\r\n      ></RegistrationView>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { MultiSelect } from \"react-native-element-dropdown\";\r\n\r\nconst styles = (props: any) =>\r\n  StyleSheet.create({\r\n    dropdown: {\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#2F2F2F\" : \"#FDFBF7\",\r\n      fontColor: props.colorScheme == \"dark\" ? \"white\" : \"#2F2F2F\",\r\n      borderRadius: 10,\r\n      padding: 10,\r\n      width: 150,\r\n      marginRight: 10,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"#2F2F2F\",\r\n    },\r\n    selectedStyle: {\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#2F2F2F\" : \"#FDFBF7\",\r\n      borderRadius: 12,\r\n      fontColor: props.colorScheme == \"dark\" ? \"#FDFBF7\" : \"#2F2F2F\",\r\n    },\r\n  });\r\nexport default function DropdownMenu(props: any) {\r\n  function onChange(values: any) {\r\n    props.onChange(values);\r\n  }\r\n  return (\r\n    <MultiSelect\r\n      data={props.data}\r\n      style={styles(props).dropdown}\r\n      placeholderStyle={styles(props).placeholderStyle}\r\n      selectedStyle={styles(props).selectedStyle}\r\n      activeColor=\"grey\"\r\n      search={true}\r\n      labelField=\"label\"\r\n      valueField=\"value\"\r\n      value={props.value}\r\n      placeholder={props.searchItem}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, TextInput, View, ScrollView } from \"react-native\";\r\nimport { Flex, Button, HStack } from \"@react-native-material/core\";\r\nimport DropdownMenu from \"../components/dropdownMenu\";\r\n\r\nconst styles = (props: any) =>\r\n  StyleSheet.create({\r\n    mainContainer: {\r\n      top: 0,\r\n      width: \"100%\",\r\n      height: \"auto\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#18191A\" : \"#F3F2E9\",\r\n      // position: \"absolute\",\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n      paddingTop: 10,\r\n      marginBottom: 20,\r\n      alignContent: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    mainContainer_button: {\r\n      // backgroundColor: \"var(--dark-blue)\",\r\n      width: 155,\r\n      height: 60,\r\n      marginRight: \"auto\",\r\n      marginLeft: \"auto\",\r\n      paddingTop: 10,\r\n      borderRadius: 300,\r\n    },\r\n    mainContainer_filters: {\r\n      borderRadius: 10,\r\n      marginTop: 10,\r\n      width: \"100%\",\r\n      display: \"flex\",\r\n      overflowX: \"auto\",\r\n    },\r\n    mainContainer__search: {\r\n      marginBottom: 10,\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#2F2F2F\" : \"#FDFBF7\",\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"#2F2F2F\",\r\n      borderRadius: 10,\r\n      width: \"70%\",\r\n      height: 45,\r\n      paddingLeft: 10,\r\n      fontStyle: \"italic\",\r\n    },\r\n    mainContainer__button: {\r\n      backgroundColor: \"black\",\r\n      borderRadius: 300,\r\n      height: 45,\r\n    },\r\n  });\r\nexport default function SearchView(props: any) {\r\n  function onSearch() {\r\n    props.onSearch();\r\n  }\r\n  return (\r\n    <View style={styles(props).mainContainer}>\r\n      {/* <Header /> */}\r\n      {/* <Text style={styles.mainContainer_h5} >Sign up</Text> */}\r\n      <HStack spacing={6}>\r\n        <TextInput\r\n          placeholder=\"Search\"\r\n          style={styles(props).mainContainer__search}\r\n          onChangeText={props.onQueryChanged}\r\n        />\r\n        <Button\r\n          title=\"Search\"\r\n          style={styles(props).mainContainer__button}\r\n          onPress={onSearch}\r\n        />\r\n      </HStack>\r\n      <ScrollView horizontal={true}>\r\n        <Flex direction=\"row\" style={styles(props).mainContainer_filters}>\r\n          <DropdownMenu\r\n            data={props.categories}\r\n            onChange={props.onCategoriesSelected}\r\n            colorScheme={props.colorScheme}\r\n            searchItem=\"Categories\"\r\n            value={props.selectedCategories}\r\n          />\r\n          <DropdownMenu\r\n            data={props.areas}\r\n            onChange={props.onAreasSelected}\r\n            colorScheme={props.colorScheme}\r\n            searchItem=\"Areas\"\r\n            value={props.selectedAreas}\r\n          />\r\n          <DropdownMenu\r\n            data={props.ingrToSelect}\r\n            onChange={props.onIngredientsSelected}\r\n            colorScheme={props.colorScheme}\r\n            searchItem=\"Ingredients\"\r\n            value={props.selectedIngredients}\r\n          />\r\n        </Flex>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n","function resolvePromise(\r\n  promiseToResolve: Promise<any> | null,\r\n  promiseState: {\r\n    promise: any | null;\r\n    data: Object | null;\r\n    error: String | null;\r\n  },\r\n  notifyACB: (arg0: any) => void\r\n) {\r\n  promiseState.promise = promiseToResolve;\r\n  promiseState.data = null;\r\n  promiseState.error = null;\r\n\r\n  if (notifyACB) notifyACB(promiseState);\r\n  function saveDataACB(result: Object | null) {\r\n    if (promiseState.promise !== promiseToResolve) return;\r\n    promiseState.data = result;\r\n    if (notifyACB) notifyACB(promiseState);\r\n  }\r\n\r\n  function saveErrorACB(err: string) {\r\n    if (promiseState.promise !== promiseToResolve) return;\r\n    promiseState.error = err;\r\n    if (notifyACB) notifyACB(promiseState);\r\n  }\r\n  if (promiseToResolve !== null)\r\n    promiseToResolve.then(saveDataACB).catch(saveErrorACB);\r\n}\r\n\r\nexport default resolvePromise;\r\nexport { resolvePromise };\r\n","import React from \"react\";\r\nimport { ActivityIndicator } from \"react-native\";\r\n\r\nexport default function Loading() {\r\n  return <ActivityIndicator size=\"large\" color=\"#00ff00\" />;\r\n}\r\n","import { Text } from \"react-native\";\r\nimport React from \"react\";\r\nimport Loading from \"../components/loading\";\r\nexport default function promiseNoData(promise: any, data: any, error: any) {\r\n  if (!promise)\r\n    //no promise\r\n    //  return <Text> no data</Text>;\r\n    return false; //display default data\r\n  else {\r\n    if (!(data || error)) return <Loading />;\r\n\r\n    if (!data && error)\r\n      //promised, no data, with error\r\n      return <Text>{error.toString()}</Text>;\r\n\r\n    if (data && !error)\r\n      //promised, defined data, no error\r\n      return false;\r\n  }\r\n}\r\n","import { addFavourite, deleteFavourite } from \"../../dbSource\";\r\nimport { Dispatch } from \"react\";\r\nimport store from \"../store\";\r\n\r\nexport const addFav = (id: string) => {\r\n  return async (dispatch: Dispatch<addFav>) => {\r\n    dispatch({ type: \"ADD_TO_FAV\" });\r\n    addFavourite(id)\r\n      .then(() => dispatch({ type: \"ADD_TO_FAV_SUC\", payload: id }))\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"MANIPULATE_FAV_ERROR\",\r\n          payload: error.message,\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const deleteFav = (id: string) => {\r\n  return async (dispatch: Dispatch<deleteFav>) => {\r\n    var favs: Array<string> = store.getState().favourites[\"data\"];\r\n    if (favs.includes(id)) {\r\n      dispatch({ type: \"DELETE_FAV\" });\r\n      deleteFavourite(id)\r\n        .then(() => dispatch({ type: \"DELETE_FAV_SUC\", payload: id }))\r\n        .catch((error) => {\r\n          dispatch({\r\n            type: \"MANIPULATE_FAV_ERROR\",\r\n            payload: error,\r\n          });\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFavs = (favs: Array<string>) => {\r\n  return async (dispatch: Dispatch<setFavs>) => {\r\n    dispatch({ type: \"SET_FAVS\", payload: favs });\r\n  };\r\n};\r\nexport type addFav = {\r\n  readonly type: \"ADD_TO_FAV\" | \"ADD_TO_FAV_SUC\" | \"MANIPULATE_FAV_ERROR\";\r\n  payload?: any;\r\n};\r\nexport type deleteFav = {\r\n  readonly type: \"DELETE_FAV\" | \"DELETE_FAV_SUC\" | \"MANIPULATE_FAV_ERROR\";\r\n  payload?: any;\r\n};\r\nexport type setFavs = {\r\n  readonly type: \"SET_FAVS\";\r\n  payload: any;\r\n};\r\n","import React from \"react\";\r\nimport { IconButton } from \"@react-native-material/core\";\r\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport Loading from \"../components/loading\";\r\n\r\nexport default function FavBtnView(props: any) {\r\n  return props.loading ? (\r\n    <Loading />\r\n  ) : (\r\n    <IconButton\r\n      onPress={props.onClicked}\r\n      icon={() => (\r\n        <Icon\r\n          name={\"heart\"}\r\n          size={24}\r\n          color={props.addedToFav ? \"red\" : \"grey\"}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { addFav, deleteFav } from \"../redux/actions/favouritesActions\";\r\nimport { setSnackbar } from \"../redux\";\r\nimport React from \"react\";\r\nimport FavBtnView from \"../views/favBtnView\";\r\n\r\nexport default function FavouriteBtnPresenter(props: {\r\n  id: string;\r\n  colorScheme: any;\r\n}) {\r\n  const dispatch = useDispatch<any>();\r\n  const addedToFav = useSelector((state: any) =>\r\n    state.favourites.data.includes(props.id)\r\n  );\r\n  const loading = useSelector((state: any) => state.favourites.loading);\r\n  const user = useSelector((state: any) => state.user);\r\n  function favBtnClickedACB() {\r\n    if (!user)\r\n      dispatch(setSnackbar(\"Please log in to add your favourite recipes!\"));\r\n    else {\r\n      if (!addedToFav) dispatch(addFav(props.id));\r\n      else dispatch(deleteFav(props.id));\r\n    }\r\n  }\r\n  return (\r\n    <FavBtnView\r\n      colorScheme={props.colorScheme}\r\n      loading={loading}\r\n      onClicked={favBtnClickedACB}\r\n      addedToFav={addedToFav}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Image,\r\n  TextInput,\r\n  View,\r\n  ActivityIndicator,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {\r\n  Stack,\r\n  IconButton,\r\n  Flex,\r\n  Text,\r\n  Button,\r\n  HStack,\r\n  Wrap,\r\n} from \"@react-native-material/core\";\r\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport FavouriteBtnPresenter from \"../presenters/favouriteBtnPresenter\";\r\n\r\nconst styles = (props: any) =>\r\n  StyleSheet.create({\r\n    dishcard: {\r\n      marginTop: 30,\r\n      height: \"auto\",\r\n      position: \"relative\",\r\n      alignContent: \"center\",\r\n      shadowColor: \"#363842\",\r\n      shadowOffset: { width: 0, height: 0 },\r\n      shadowOpacity: 0.2,\r\n      shadowRadius: 10,\r\n    },\r\n    dishcard__left: {\r\n      width: \"50%\",\r\n      // height: \"100%\",\r\n      backgroundColor: \"#faf089\",\r\n      borderTopLeftRadius: 10,\r\n      borderBottomLeftRadius: 10,\r\n    },\r\n    dishcard__right: {\r\n      width: \"50%\",\r\n      minHeight: 200,\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#2F2F2F\" : \"#FDFBF7\",\r\n      border: \"1px solid #606770\",\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n    },\r\n    dishcard__right__details: {\r\n      margin: 0,\r\n      width: \"70%\",\r\n      height: \"100%\",\r\n      padding: 10,\r\n    },\r\n    dishcard__right__details__header: {\r\n      marginBottom: 10,\r\n      fontWeight: \"bold\",\r\n      color: \"#8D909B\",\r\n    },\r\n    dishcard__right__details__tags: {\r\n      width: \"80%\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    dishcard__right__details__tags__tag: {\r\n      width: \"auto\",\r\n      backgroundColor: \"#8D909B\",\r\n      borderRadius: 15,\r\n      marginRight: 20,\r\n      marginBottom: 5,\r\n      marginTop: 5,\r\n      padding: 5,\r\n      fontSize: 9,\r\n    },\r\n  });\r\nexport default function DishCard(props: any) {\r\n  function renderArrayCB(tag: any) {\r\n    return (\r\n      <Text style={styles(props).dishcard__right__details__tags__tag} key={tag}>\r\n        {tag}\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <TouchableOpacity onPress={props.onSelectedRecipe}>\r\n      <HStack spacing={0} style={styles(props).dishcard}>\r\n        {props.data.strMealThumb && (\r\n          <Image\r\n            style={styles(props).dishcard__left}\r\n            source={{ uri: props.data.strMealThumb }}\r\n          ></Image>\r\n        )}\r\n        {!props.data.strMealThumb && (\r\n          <Image\r\n            style={styles(props).dishcard__left}\r\n            source={require(\"../styles/notFoundImage.png\")}\r\n          ></Image>\r\n        )}\r\n        <HStack style={styles(props).dishcard__right}>\r\n          <View style={styles(props).dishcard__right__details}>\r\n            <Text style={styles(props).dishcard__right__details__header}>\r\n              {props.data.strMeal}\r\n            </Text>\r\n            <Text style={styles(props).dishcard__right__details__tags}>\r\n              {props.data.strTags &&\r\n                props.data.strTags.split(\",\").map(renderArrayCB)}\r\n            </Text>\r\n          </View>\r\n          <FavouriteBtnPresenter\r\n            colorScheme={props.colorScheme}\r\n            id={props.data.idMeal}\r\n          />\r\n        </HStack>\r\n      </HStack>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DishCard from \"../components/dishCard\";\r\n\r\nexport default function DishCardPresenter(props: {\r\n  navigation: { navigate: (arg0: string, arg1: { recipe: any }) => void };\r\n  data: any;\r\n  colorScheme: any;\r\n}) {\r\n  function setCurrentRecipeACB() {\r\n    props.navigation.navigate(\"Recipe\", { recipe: props.data });\r\n  }\r\n  return (\r\n    <DishCard\r\n      data={props.data}\r\n      onSelectedRecipe={setCurrentRecipeACB}\r\n      colorScheme={props.colorScheme}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, ScrollView, ActivityIndicator, Text } from \"react-native\";\r\nimport { Flex } from \"@react-native-material/core\";\r\nimport DishCard from \"../components/dishCard\";\r\nimport Search from \"../components/search\";\r\nimport Header from \"../components/header\";\r\nimport DishCardPresenter from \"../presenters/dishCardPresenter\";\r\n\r\nconst styles = (props: any) => StyleSheet.create({\r\n  mainContainer: {\r\n    position: \"relative\",\r\n    padding: 10,\r\n    // top: 0,\r\n    width: \"100%\",\r\n    // position: \"absolute\",\r\n    paddingTop: 10,\r\n    alignContent: \"center\",\r\n  },\r\n  mainContainer_button: {\r\n    width: 155,\r\n    height: 60,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderRadius: 300,\r\n  },\r\n  mainContainer_filters: {\r\n    borderRadius: 10,\r\n    padding: 0,\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    overflowX: \"auto\",\r\n  },\r\n  textInput: {\r\n    marginBottom: 10,\r\n    borderRadius: 10,\r\n    width: \"100%\",\r\n    height: 45,\r\n    paddingLeft: 10,\r\n    fontStyle: \"italic\",\r\n  },\r\n  topRecipes: {\r\n    backgroundColor: props.colorScheme == \"dark\" ? \"black\" : \"#8D909B\",\r\n    borderRadius: 30,\r\n    overflow: 'hidden',\r\n    height: \"auto\",\r\n    color: \"white\",\r\n    padding: 20,\r\n  },\r\n});\r\nexport default function ResultsView(props: any) {\r\n  return (\r\n    <ScrollView style={styles(props).mainContainer}>\r\n      <Flex fill>\r\n        {props.header ? <Text style={styles(props).topRecipes}>{props.header}</Text> : null}\r\n        {props.loading ? (\r\n          <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n        ) : null}\r\n\r\n        {props.results.map((r: any) => (\r\n          <DishCardPresenter\r\n            key={r.idMeal}\r\n            data={r}\r\n            navigation={props.navigation}\r\n            onClicked={props.onSelectedRecipe}\r\n            colorScheme={props.colorScheme}\r\n          />\r\n        ))}\r\n      </Flex>\r\n    </ScrollView>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { View, Image, StyleSheet } from \"react-native\";\r\nimport { Text } from \"../components/Themed\";\r\n\r\nexport default function NoResultsView(props: {\r\n  text: string;\r\n  colorScheme: any;\r\n}) {\r\n  return (\r\n    <View style={styles(props).modalView}>\r\n      <Text style={styles(props).messageText}>{props.text}</Text>\r\n      <Image\r\n        style={styles(props).image}\r\n        source={require(\"../styles/notfound.png\")}\r\n      ></Image>\r\n    </View>\r\n  );\r\n}\r\nconst styles = (props: any) =>\r\n  StyleSheet.create({\r\n    image: {\r\n      width: 200,\r\n      height: 150,\r\n      left: 0,\r\n      top: \"20%\",\r\n    },\r\n\r\n    modalText: {\r\n      marginBottom: 15,\r\n      textAlign: \"center\",\r\n    },\r\n    modalView: {\r\n      margin: 20,\r\n      marginTop: 100,\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#313237\" : \"FDFBF7\",\r\n      borderRadius: 20,\r\n      padding: 35,\r\n      alignItems: \"center\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 0,\r\n      },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 10,\r\n      elevation: 5,\r\n    },\r\n    messageText: {\r\n      fontWeight: \"bold\",\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n    },\r\n  });\r\n","import React, { useState } from \"react\";\r\nimport SearchView from \"../views/searchView\";\r\nimport { filterMeals, getAllFilterData } from \"../mealSouce\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\nimport resolvePromise from \"../resolvePromise\";\r\nimport { promiseStateType } from \"../types\";\r\nimport { RootTabScreenProps } from \"../types\";\r\nimport promiseNoData from \"../views/promiseNoData\";\r\nimport ResultsView from \"../views/resultsView\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Flex } from \"@react-native-material/core\";\r\nimport { getTopFavourites } from \"../dbSource\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSnackbar } from \"../redux\";\r\nimport NoResultsView from \"../views/noResultsView\";\r\nimport ProfilePresenter from \"./profilePresenter\";\r\n\r\nexport default function SearchPresenter({\r\n  navigation,\r\n}: RootTabScreenProps<\"Search\">) {\r\n  const dispatch = useDispatch<any>();\r\n\r\n  const [categories, setCategoriesState] = useState([]);\r\n  const [areas, setAreasState] = useState([]);\r\n  const [ingredients, setIngredientsState] = useState([]);\r\n\r\n  const [selectedCategories, setSelectedCategories] = useState<Array<string>>(\r\n    []\r\n  );\r\n  const [selectedAreas, setSelectedAreas] = useState<Array<string>>([]);\r\n  const [selectedIngredients, setSelectedIngredients] = useState<Array<string>>(\r\n    []\r\n  );\r\n  const [query, setQueryState] = useState(\"\");\r\n  const [results, setResultsState] = useState([]);\r\n  const [topFavs, setTopFavs] = React.useState<Array<any>>([]);\r\n  const [topFavsLoading, setTopFavsLoading] = React.useState<boolean>();\r\n\r\n  const [mealsPromiseState, setMealsPromiseState] = useState<promiseStateType>({\r\n    promise: null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n  const [promise, setPromise] = React.useState<any>();\r\n  const [data, setData] = React.useState<any>();\r\n  const [error, setError] = React.useState<any>();\r\n\r\n  const colorScheme = useColorScheme();\r\n\r\n  React.useEffect(() => {\r\n    getAllFilterData()\r\n      .then((res) => {\r\n        setCategoriesState(\r\n          res[0].data.map((elem: { strCategory: string }) => ({\r\n            label: elem.strCategory,\r\n            value: elem.strCategory,\r\n          }))\r\n        );\r\n        setAreasState(\r\n          res[1].data.map((elem: { strArea: string }) => ({\r\n            label: elem.strArea,\r\n            value: elem.strArea,\r\n          }))\r\n        );\r\n        setIngredientsState(\r\n          res[2].data.map((elem: { strIngredient: string }) => ({\r\n            label: elem.strIngredient,\r\n            value: elem.strIngredient,\r\n          }))\r\n        );\r\n      })\r\n      .catch((error) =>\r\n        dispatch(\r\n          setSnackbar(\r\n            \"Could not fetch filter values from server: \" + error.message\r\n          )\r\n        )\r\n      );\r\n    setTopFavsLoading(true);\r\n    getTopFavourites()\r\n      .then((res) => {\r\n        setTopFavs(res.data);\r\n        setTopFavsLoading(false);\r\n      })\r\n      .catch((error) =>\r\n        dispatch(\r\n          setSnackbar(\r\n            \"Could not fetch top favourites from server: \" + error.message\r\n          )\r\n        )\r\n      );\r\n  }, []);\r\n  function areFiltersSpecified() {\r\n    return (\r\n      selectedCategories.length > 0 ||\r\n      selectedAreas.length > 0 ||\r\n      selectedIngredients.length > 0 ||\r\n      query\r\n    );\r\n  }\r\n  function onSearchACB() {\r\n    if (areFiltersSpecified()) {\r\n      setResultsState([]);\r\n      setPromise(null);\r\n      setData(null);\r\n      setError(null);\r\n      resolvePromise(\r\n        filterMeals(\r\n          selectedCategories,\r\n          selectedAreas,\r\n          selectedIngredients,\r\n          query\r\n        ),\r\n        mealsPromiseState,\r\n        mealPromiseStateChanged\r\n      );\r\n    } else {\r\n      setPromise(null); //show top favourites\r\n    }\r\n  }\r\n  function mealPromiseStateChanged(result: promiseStateType) {\r\n    setMealsPromiseState(result);\r\n    setPromise(result.promise);\r\n    setData(result.data);\r\n    setError(result.error);\r\n    if (result.data && result.data.data) setResultsState(result.data.data);\r\n  }\r\n  return (\r\n    <Flex style={styles(colorScheme).mainContainer}>\r\n      <SearchView\r\n        categories={categories}\r\n        areas={areas}\r\n        ingrToSelect={ingredients}\r\n        query={query}\r\n        onCategoriesSelected={setSelectedCategories}\r\n        onAreasSelected={setSelectedAreas}\r\n        onIngredientsSelected={setSelectedIngredients}\r\n        onQueryChanged={setQueryState}\r\n        onSearch={onSearchACB}\r\n        colorScheme={colorScheme}\r\n        selectedCategories={selectedCategories}\r\n        selectedAreas={selectedAreas}\r\n        selectedIngredients={selectedIngredients}\r\n      ></SearchView>\r\n\r\n      {promiseNoData(promise, data, error) ||\r\n        (results && results.length > 0 ? (\r\n          <ResultsView\r\n            results={results}\r\n            navigation={navigation}\r\n            colorScheme={colorScheme}\r\n          />\r\n        ) : !promise ? (\r\n          <ResultsView\r\n            header=\"Please specify search criteria to see relevant recipes! These are the Top Favourites of other users:\"\r\n            loading={topFavsLoading}\r\n            results={topFavs}\r\n            navigation={navigation}\r\n            colorScheme={colorScheme}\r\n          />\r\n        ) : (\r\n          <NoResultsView\r\n            text={\"no recipes found matching your search criteria\"}\r\n            colorScheme={colorScheme}\r\n          />\r\n        ))}\r\n    </Flex>\r\n  );\r\n}\r\n\r\nconst styles = (colorScheme: any) =>\r\n  StyleSheet.create({\r\n    mainContainer: {\r\n      backgroundColor: colorScheme == \"dark\" ? \"#18191A\" : \"#F3F2E9\",\r\n      padding: 10,\r\n      top: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      paddingTop: 0,\r\n      alignContent: \"center\",\r\n    },\r\n  });\r\n","import axios from \"axios\";\r\n\r\nfunction getRandomMeal() {\r\n  return axios.get(\"api/randomMeal\");\r\n}\r\nfunction getMealsDetails(ids: Array<String>) {\r\n  return axios.post(\"api/mealsDetails\", {\r\n    ids: ids,\r\n  });\r\n}\r\nfunction getCategories() {\r\n  return axios.get(\"api/categories\");\r\n}\r\nfunction getAreas() {\r\n  return axios.get(\"api/areas\");\r\n}\r\nfunction getIngredients() {\r\n  return axios.get(\"api/ingredients\");\r\n}\r\nfunction getAllFilterData() {\r\n  return axios.all([getCategories(), getAreas(), getIngredients()]);\r\n}\r\nfunction filterMeals(\r\n  categories: Array<string>,\r\n  areas: Array<string>,\r\n  ingredients: Array<string>,\r\n  query: string\r\n) {\r\n  return axios.post(\"api/filterMeals\", {\r\n    categories: categories,\r\n    areas: areas,\r\n    ingredients: ingredients,\r\n    query: query,\r\n  });\r\n}\r\n\r\nexport {\r\n  getRandomMeal,\r\n  getMealsDetails,\r\n  getCategories,\r\n  getAreas,\r\n  getIngredients,\r\n  filterMeals,\r\n  getAllFilterData,\r\n};\r\n","import { addIngredient, deleteIngredient } from \"../../dbSource\";\r\nimport { Dispatch } from \"react\";\r\nimport store from \"../store\";\r\n\r\nexport const addIngr = (ingredient: any) => {\r\n  return async (dispatch: Dispatch<addIng>) => {\r\n    dispatch({ type: \"ADD_TO_INGR\" });\r\n    addIngredient(ingredient)\r\n      .then(() => {\r\n        dispatch({ type: \"ADD_TO_INGR_SUC\", payload: ingredient });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"MANIPULATE_INGR_ERROR\",\r\n          payload: error.message,\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const deleteIngr = (ingredient: any) => {\r\n  return async (dispatch: Dispatch<deleteIng>) => {\r\n    var ingrs: Array<string> = store.getState().ingredients[\"data\"];\r\n    if (ingrs.includes(ingredient)) {\r\n      dispatch({ type: \"DELETE_INGR\" });\r\n      deleteIngredient(ingredient)\r\n        .then(() => dispatch({ type: \"DELETE_INGR_SUC\", payload: ingredient }))\r\n        .catch((error) => {\r\n          dispatch({\r\n            type: \"MANIPULATE_INGR_ERROR\",\r\n            payload: error,\r\n          });\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setIngrs = (ingrs: Array<string>) => {\r\n  return async (dispatch: Dispatch<setIngrs>) => {\r\n    dispatch({ type: \"SET_INGRS\", payload: ingrs });\r\n  };\r\n};\r\nexport type addIng = {\r\n  readonly type: \"ADD_TO_INGR\" | \"ADD_TO_INGR_SUC\" | \"MANIPULATE_INGR_ERROR\";\r\n  payload?: any;\r\n};\r\nexport type deleteIng = {\r\n  readonly type: \"DELETE_INGR\" | \"DELETE_INGR_SUC\" | \"MANIPULATE_INGR_ERROR\";\r\n  payload?: any;\r\n};\r\nexport type setIngrs = {\r\n  readonly type: \"SET_INGRS\";\r\n  payload: any;\r\n};\r\n","import React from \"react\";\r\nimport { Image, StyleSheet } from \"react-native\";\r\nimport { IconButton, ListItem } from \"@react-native-material/core\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nexport default function IngredientItem(props: {\r\n  name: string;\r\n  quantity: string;\r\n  colorScheme: any;\r\n  showQuantity: boolean;\r\n  added: boolean;\r\n  onBtnClicked: any;\r\n}) {\r\n  let Image_Http_URL = {\r\n    uri:\r\n      \"https://www.themealdb.com/images/ingredients/\" +\r\n      props.name +\r\n      \"-Small.png\",\r\n  };\r\n  return (\r\n    <ListItem\r\n      onPress={props.onBtnClicked}\r\n      style={styles(props).listItemPressed}\r\n      leading={\r\n        <Image source={Image_Http_URL} style={styles(props).imageIngr} />\r\n      }\r\n      title={props.name + (props.showQuantity ? \": \" + props.quantity : \"\")}\r\n      key={props.name}\r\n      trailing={() => (\r\n        <IconButton\r\n          onPress={props.onBtnClicked}\r\n          icon={() => (\r\n            <MaterialIcons\r\n              name={props.added ? \"remove-shopping-cart\" : \"add-shopping-cart\"}\r\n              size={24}\r\n              color={props.added ? \"red\" : \"green\"}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\nconst styles = (props: any) =>\r\n  StyleSheet.create({\r\n    listItem: {\r\n      color: props.colorScheme == \"dark\" ? \"black\" : \"white\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"black\" : \"white\",\r\n      borderRadius: 10,\r\n    },\r\n    listItemPressed: {\r\n      color: props.colorScheme == \"dark\" ? \"#0548EE\" : \"#9BB3EE\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#040507\" : \"#083EC4\",\r\n      borderRadius: 10,\r\n    },\r\n    imageIngr: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n  });\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { setSnackbar } from \"../redux\";\r\nimport React from \"react\";\r\nimport { addIngr, deleteIngr } from \"../redux/actions/ingredientsActions\";\r\nimport IngredientItem from \"../components/ingredientItem\";\r\n\r\nexport default function IngredientItemPresenter(props: {\r\n  name: string;\r\n  quantity: string;\r\n  colorScheme: any;\r\n  showQuantity: boolean;\r\n}) {\r\n  const dispatch = useDispatch<any>();\r\n  const addedToList = useSelector((state: any) =>\r\n    state.ingredients.data.includes(props.name)\r\n  );\r\n  const user = useSelector((state: any) => state.user);\r\n  function btnClickedACB() {\r\n    if (!user)\r\n      dispatch(\r\n        setSnackbar(\"Please log in to add groceries to your shopping list!\")\r\n      );\r\n    else {\r\n      if (!addedToList) dispatch(addIngr(props.name));\r\n      else dispatch(deleteIngr(props.name));\r\n    }\r\n  }\r\n  return (\r\n    <IngredientItem\r\n      name={props.name}\r\n      quantity={props.quantity}\r\n      colorScheme={props.colorScheme}\r\n      showQuantity={props.showQuantity}\r\n      added={addedToList}\r\n      onBtnClicked={btnClickedACB}\r\n    />\r\n  );\r\n}\r\n","import { Flex, Text, ListItem } from \"@react-native-material/core\";\r\nimport React from \"react\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { StyleSheet, Image, TextInput, View, ScrollView } from \"react-native\";\r\nimport FavouriteBtnPresenter from \"../presenters/favouriteBtnPresenter\";\r\nimport IngredientItem from \"../components/ingredientItem\";\r\nimport IngredientItemPresenter from \"../presenters/ingredientItemPresenter\";\r\n\r\nconst styles = (props: any) =>\r\n  StyleSheet.create({\r\n    image: {\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: 210,\r\n    },\r\n    details: {\r\n      width: \"100%\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#18191A\" : \"#FDFBF7\",\r\n      borderTopLeftRadius: 15,\r\n      borderTopRightRadius: 15,\r\n      padding: 20,\r\n    },\r\n    header: {\r\n      marginTop: 20,\r\n      fontWeight: \"700\",\r\n      fontSize: 32,\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n    },\r\n    subheader: {\r\n      marginTop: 20,\r\n      fontWeight: \"700\",\r\n      fontSize: 16,\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n    },\r\n    text: {\r\n      fontWeight: \"400\",\r\n      fontSize: 14,\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n    },\r\n    imageIngr: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    details_header: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      padding: 10,\r\n      gap: \"auto\",\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n    },\r\n    /*listItem:{\r\n    color: props.colorScheme == \"dark\" ? \"#313237\" : \"#0548EE\",\r\n    backgroundColor: props.colorScheme == \"dark\" ? \"#313237\" : \"FDFBF7\",\r\n    borderRadius: 10,\r\n  },*/\r\n    listItem: {\r\n      color: props.colorScheme == \"dark\" ? \"black\" : \"white\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"black\" : \"white\",\r\n      borderRadius: 10,\r\n    },\r\n    listItemPressed: {\r\n      color: props.colorScheme == \"dark\" ? \"#0548EE\" : \"#9BB3EE\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#040507\" : \"#083EC4\",\r\n      borderRadius: 10,\r\n    },\r\n    tags: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    tag: {\r\n      width: \"auto\",\r\n      backgroundColor: \"#8D909B\",\r\n      borderRadius: 15,\r\n      marginRight: 20,\r\n      marginBottom: 5,\r\n      marginTop: 5,\r\n      padding: 5,\r\n      fontSize: 12,\r\n    },\r\n    mainContainer: {\r\n      height: \"100%\",\r\n    },\r\n  });\r\n\r\nexport default function RecipeView(props: any) {\r\n  function renderArrayCB(ingredient: any) {\r\n    return (\r\n      <IngredientItemPresenter\r\n        name={ingredient.name}\r\n        quantity={ingredient.quantity}\r\n        colorScheme={props.colorScheme}\r\n        showQuantity={true}\r\n        key={ingredient.name + ingredient.quantity}\r\n      />\r\n    );\r\n  }\r\n  function renderTagsArrayCB(tag: any) {\r\n    return (\r\n      <Text style={styles(props).tag} key={tag}>\r\n        {tag}\r\n      </Text>\r\n    );\r\n  }\r\n  return (\r\n    <View style={styles(props).mainContainer}>\r\n      <ScrollView vertical={true}>\r\n        <Flex fill direction=\"column\">\r\n          {props.recipe.strMealThumb && (\r\n            <Image\r\n              style={styles(props).image}\r\n              source={{ uri: props.recipe.strMealThumb }}\r\n            ></Image>\r\n          )}\r\n          {!props.recipe.strMealThumb && (\r\n            <Image\r\n              style={styles(props).image}\r\n              source={require(\"../styles/notFoundImage.png\")}\r\n            ></Image>\r\n          )}\r\n          <Flex direction=\"column\" style={styles(props).details}>\r\n            <View style={styles(props).details_header}>\r\n              <Text style={styles(props).header}>{props.recipe.strMeal}</Text>\r\n              <FavouriteBtnPresenter\r\n                colorScheme={props.colorScheme}\r\n                id={props.recipe.idMeal}\r\n              />\r\n            </View>\r\n            <Text style={styles(props).tags}>\r\n              {props.recipe.strTags &&\r\n                props.recipe.strTags.split(\",\").map(renderTagsArrayCB)}\r\n              <Text style={styles(props).tag} key={props.recipe.strArea}>\r\n                {props.recipe.strArea}\r\n              </Text>\r\n            </Text>\r\n            <Text style={styles(props).subheader}>What do you need?</Text>\r\n            <View style={styles(props).listItem}>\r\n              <Flex direction=\"column\">\r\n                {props.recipe.ingredients &&\r\n                  props.recipe.ingredients.map(renderArrayCB)}\r\n              </Flex>\r\n            </View>\r\n            <Text style={styles(props).subheader}>How to make it?</Text>\r\n            <Text style={styles(props).text}>\r\n              {props.recipe.strInstructions}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport RecipeView from \"../views/recipeView\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\n\r\nexport default function RecipePresenter({ route }: any, props: any) {\r\n  const { recipe } = route.params;\r\n  const colorScheme = useColorScheme();\r\n\r\n  return <RecipeView recipe={recipe} colorScheme={colorScheme} />;\r\n}\r\n","import React from 'react'\r\nimport {View, Text, StyleSheet, Linking} from \"react-native\";\r\n\r\nexport default function AboutView() {\r\n  return (\r\n    <View style={styles.containerWithInfo}>\r\n        <View style={styles.containerWithInfo_box}>\r\n            <Text style={styles.question}>\r\n                What is the app about?\r\n            </Text>\r\n            <Text style={styles.details}>\r\n                This app is a library of recipes from all over the world.\r\n                Here you can find recipes from different regions, from various categories, and with specific ingredients.\r\n            </Text>\r\n        </View>\r\n        <View style={styles.containerWithInfo_box}>\r\n            <Text style={styles.question}>\r\n                What can you do?\r\n            </Text>\r\n            <Text style={styles.details}>\r\n                In addition to search function user also can add recipe to favorites list, \r\n                saved ingredients in the grocery list and check what other users like.\r\n            </Text>\r\n        </View>\r\n        <View style={styles.containerWithInfo_box}>\r\n            <Text style={styles.question}>\r\n                What is the source of data?\r\n            </Text>\r\n            <Text style={styles.details}>\r\n                The data was obtained from the \r\n                <Text\r\n                    style={styles.hyperlinkStyle}\r\n                    onPress={() => {\r\n                    Linking.openURL('https://www.themealdb.com/api.php');\r\n                    }}>\r\n                    TheMealDB API\r\n                </Text>\r\n            </Text>\r\n        </View>\r\n        <View style={styles.containerWithInfo_box}>\r\n            <Text style={styles.question}>\r\n                Link to project?\r\n            </Text>\r\n            <Text style={styles.details}>\r\n                You can also check \r\n                <Text\r\n                    style={styles.hyperlinkStyle}\r\n                    onPress={() => {\r\n                    Linking.openURL('https://github.com/LariWa/AdvancedInteractionProgramming');\r\n                    }}>\r\n                    GitHub repository\r\n                </Text>\r\n            </Text>\r\n        </View>\r\n    </View>\r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n    question: {\r\n        fontWeight: \"bold\",\r\n        color: \"#242526\",\r\n        fontSize: 16,\r\n        textAlign: \"center\",\r\n    },\r\n    details:{\r\n        fontSize: 14,\r\n        textAlign: \"center\",\r\n        color: \"#242526\",\r\n    },\r\n    hyperlinkStyle:{\r\n        fontSize: 14,\r\n        textAlign: \"center\",\r\n        color: \"blue\",\r\n        fontWeight: \"bold\",\r\n    },\r\n    containerWithInfo:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        paddingLeft: 36,\r\n        paddingRight: 36,\r\n        paddingTop: 50,\r\n        paddingBottom: 0,\r\n    },\r\n    containerWithInfo_box:{\r\n        backgroundColor: \"#A7C6DA\",\r\n        borderRadius:10,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n        width: \"100%\"\r\n    }\r\n})\r\n","import React from 'react'\r\nimport AboutView from '../views/aboutView'\r\n\r\nexport default function AboutPresenter() {\r\n  return (\r\n    <AboutView/>\r\n  )\r\n}\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from \"@react-navigation/native\";\r\nimport * as Linking from \"expo-linking\";\r\n\r\nimport { RootStackParamList } from \"../types\";\r\n\r\nconst linking: LinkingOptions<RootStackParamList> = {\r\n  prefixes: [Linking.createURL(\"/\")],\r\n  config: {\r\n    screens: {\r\n      Root: {\r\n        screens: {\r\n          TabOne: {\r\n            screens: {\r\n              TabOneScreen: \"AdvancedInteractionProgramming\",\r\n            },\r\n          },\r\n          TabTwo: {\r\n            screens: {\r\n              TabTwoScreen: \"two\",\r\n            },\r\n          },\r\n          TabThree: {\r\n            screens: {\r\n              TabThreeScreen: \"three\",\r\n            },\r\n          },\r\n          TabFour: {\r\n            screens: {\r\n              TabFourScreen: \"four\",\r\n            },\r\n          },\r\n          TabFive: {\r\n            screens: {\r\n              TabFiveScreen: \"five\",\r\n            },\r\n          },\r\n          TabSix: {\r\n            screens: {\r\n              TabSixScreen: \"six\",\r\n            },\r\n          },\r\n          TabSeven: {\r\n            screens: {\r\n              TabFourScreen: \"seven\",\r\n            },\r\n          },\r\n          TabEight: {\r\n            screens: {\r\n              TabFourEight: \"eight\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      Modal: \"modal\",\r\n      NotFound: \"*\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default linking;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getMealsDetails } from \"../mealSouce\";\r\nimport { setSnackbar } from \"../redux\";\r\nimport { RootTabScreenProps } from \"../types\";\r\nimport ResultsView from \"../views/resultsView\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\nimport NoResultsView from \"../views/noResultsView\";\r\nimport Loading from \"../components/loading\";\r\n\r\nexport default function FavouritesPresenter({\r\n  navigation,\r\n}: RootTabScreenProps<\"Favourites\">) {\r\n  const dispatch = useDispatch<any>();\r\n  const favourites = useSelector((state: any) => state.favourites.data);\r\n  const [loading, setLoadingState] = React.useState<boolean>();\r\n  const [favouritesDetails, setFavouritesDetails] = React.useState<Array<any>>(\r\n    []\r\n  );\r\n  const colorScheme = useColorScheme();\r\n\r\n  React.useEffect(() => {\r\n    setLoadingState(true);\r\n    getMealsDetails(favourites)\r\n      .then((res) => {\r\n        setFavouritesDetails(res.data);\r\n        setLoadingState(false);\r\n      })\r\n      .catch((e) => {\r\n        setLoadingState(false);\r\n        dispatch(\r\n          setSnackbar(\r\n            \"Something went wrong fetching your favourites from the server: \" +\r\n              e.message\r\n          )\r\n        );\r\n      });\r\n  }, [favourites]);\r\n\r\n  return favouritesDetails.length > 0 ? (\r\n    <ResultsView\r\n      results={favouritesDetails}\r\n      navigation={navigation}\r\n      colorScheme={colorScheme}\r\n    />\r\n  ) : loading ? (\r\n    <Loading />\r\n  ) : (\r\n    <NoResultsView\r\n      text=\"You don't have any favourites yet!\"\r\n      colorScheme={colorScheme}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, ScrollView } from \"react-native\";\r\nimport { Flex } from \"@react-native-material/core\";\r\n\r\nimport IngredientItemPresenter from \"../presenters/ingredientItemPresenter\";\r\nimport NoResultsView from \"./noResultsView\";\r\n\r\nconst styles = (props: any) =>\r\n  StyleSheet.create({\r\n    mainContianer: {\r\n      height: \"100%\",\r\n    },\r\n    listItem: {\r\n      color: props.colorScheme == \"dark\" ? \"#313237\" : \"##0548EE\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#313237\" : \"FDFBF7\",\r\n      padding: 10,\r\n    },\r\n    listItemPressed: {\r\n      color: props.colorScheme == \"dark\" ? \"#0548EE\" : \"#9BB3EE\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#040507\" : \"#083EC4\",\r\n      padding: 10,\r\n    },\r\n    details: {\r\n      width: \"100%\",\r\n\r\n      color: props.colorScheme == \"dark\" ? \"#313237\" : \"##0548EE\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#313237\" : \"FDFBF7\",\r\n      height: \"100%\",\r\n      padding: 10,\r\n    },\r\n    text: {\r\n      marginTop: 20,\r\n      fontWeight: \"700\",\r\n      fontSize: 14,\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#313237\" : \"FDFBF7\",\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n      padding: 10,\r\n    },\r\n  });\r\n\r\nexport default function GroceryListView(props: any) {\r\n  function renderListCB(ingredient: any) {\r\n    return (\r\n      <IngredientItemPresenter\r\n        style={styles(props).text}\r\n        name={ingredient}\r\n        quantity={\"\"}\r\n        colorScheme={props.colorScheme}\r\n        showQuantity={false}\r\n        key={ingredient}\r\n      />\r\n    );\r\n  }\r\n\r\n  return props.ingredients.length > 0 ? (\r\n    <ScrollView style={styles(props).mainContianer}>\r\n      <Text style={styles(props).text}>What do you need to buy?</Text>\r\n      <Flex direction=\"column\" style={styles(props).listItem}>\r\n        {props.ingredients && props.ingredients.map(renderListCB)}\r\n      </Flex>\r\n    </ScrollView>\r\n  ) : (\r\n    <NoResultsView\r\n      colorScheme={props.colorScheme}\r\n      text={\"The list is empty. Add ingredients to buy!\"}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GroceryListView from \"../views/groceryListView\";\r\nimport { useColorScheme } from \"react-native\";\r\n\r\nexport default function GroceryListPresenter() {\r\n  const ingredients = useSelector((state: any) => state.ingredients.data);\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <GroceryListView ingredients={ingredients} colorScheme={colorScheme} />\r\n  );\r\n}","import { Flex, Text, ListItem, Box, Avatar } from \"@react-native-material/core\";\r\nimport React from \"react\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { StyleSheet, Image, TextInput, View, Button } from \"react-native\";\r\nimport { white } from \"react-native-paper/lib/typescript/styles/colors\";\r\n\r\nconst styles = (props: any) => StyleSheet.create({\r\n    mainComponents:{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: props.colorScheme == \"dark\" ? \"#18191A\" : \"#FDFBF7\",\r\n        fontColor: props.colorScheme == \"dark\" ? \"white\" : \"#314959\",\r\n        alignItems: \"center\",\r\n        paddingTop: 200,\r\n        gap: 20,\r\n    },\r\n    email:{\r\n        width: 264,\r\n        height: 45,\r\n        borderColor: props.colorScheme == \"dark\" ? \"#FDFBF7\" : \"#314959\",\r\n        borderWidth: 2,\r\n        fontColor: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n        color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n        backgroundColor: \"#FDFBF7\",\r\n        borderRadius: 10,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        padding: 20,\r\n        margin: 20,\r\n    },\r\n    profile_button:{\r\n        backgroundColor: props.colorScheme == \"dark\" ? \"#FDFBF7\" : \"#314959\",\r\n        color: props.colorScheme == \"dark\" ? \"#314959\" : \"#FDFBF7\",\r\n    },\r\n    profile_text:{\r\n        margin: 20,\r\n        color: \"grey\",\r\n    }\r\n});\r\n\r\nexport default function ProfileView(props: any) {\r\n    return (\r\n        <Flex fill style={styles(props).mainComponents}>\r\n            <Avatar label={props.name} size={100} />\r\n                <Text style={styles(props).profile_text}>\r\n                Email: {props.name}\r\n                </Text>\r\n            <Button\r\n                title=\"Logout\"\r\n                // color= {props.colorScheme == \"dark\" ? \"#FDFBF7\" : \"#FDFBF7\"}\r\n                onPress={props.handleLogout}\r\n                style={styles(props).profile_button}\r\n            />\r\n        </Flex>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfileView from \"../views/profileView\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteUserData } from \"../redux\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\n\r\nexport default function ProfilePresenter() {\r\n  const user = useSelector((state: any) => state.user);\r\n  const colorScheme = useColorScheme();\r\n  const dispatch = useDispatch<any>();\r\n\r\n  function handleLogoutACB() {\r\n    dispatch(deleteUserData());\r\n  }\r\n\r\n  return (\r\n    <ProfileView\r\n      name={user}\r\n      colorScheme={colorScheme}\r\n      handleLogout={handleLogoutACB}\r\n    />\r\n  );\r\n}\r\n","/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport {\r\n  NavigationContainer,\r\n  DefaultTheme,\r\n  DarkTheme,\r\n} from \"@react-navigation/native\";\r\nimport { Flex } from \"@react-native-material/core\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport * as React from \"react\";\r\nimport { ColorSchemeName, Pressable, Text, View } from \"react-native\";\r\n\r\nimport Colors from \"../constants/Colors\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\nimport NotFoundScreen from \"../views/notFoundView\";\r\nimport LoginPresenter from \"../presenters/loginPresenter\";\r\nimport RegistrationPresenter from \"../presenters/registrationPresenter\";\r\nimport SearchPresenter from \"../presenters/searchPresenter\";\r\nimport RecipePresenter from \"../presenters/recipePresenter\";\r\nimport AboutPresenter from \"../presenters/aboutPresenter\";\r\nimport {\r\n  RootStackParamList,\r\n  RootTabParamList,\r\n  RootTabScreenProps,\r\n} from \"../types\";\r\nimport LinkingConfiguration from \"./LinkingConfiguration\";\r\nimport { login } from \"../loginSource\";\r\nimport FavouritesPresenter from \"../presenters/favourtiesPresenter\";\r\nimport GroceryListPresenter from \"../presenters/groceryListPresenter\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setSnackbar } from \"../redux\";\r\nimport { Octicons } from \"@expo/vector-icons\";\r\nimport ProfilePresenter from \"../presenters/profilePresenter\";\r\n\r\nexport default function Navigation({\r\n  colorScheme,\r\n}: {\r\n  colorScheme: ColorSchemeName;\r\n}) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === \"dark\" ? DarkTheme : DefaultTheme}\r\n    >\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n/**\r\n * A root stack navigator is often used for displaying modals on top of all other content.\r\n * https://reactnavigation.org/docs/modal\r\n */\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n  const user = useSelector((state: any) => state.user);\r\n\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Root\"\r\n        component={BottomTabNavigator}\r\n        options={{ headerShown: false }}\r\n      />\r\n\r\n      <Stack.Screen\r\n        name=\"NotFound\"\r\n        component={NotFoundScreen}\r\n        options={{ title: \"Oops!\" }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Favourites\"\r\n        component={user != \"\" ? FavouritesPresenter : LoginPresenter}\r\n      />\r\n      <Stack.Screen name=\"Login\" component={LoginPresenter} />\r\n      <Stack.Screen name=\"Registration\" component={RegistrationPresenter} />\r\n      <Stack.Screen name=\"Recipe\" component={RecipePresenter} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\r\n * https://reactnavigation.org/docs/bottom-tab-navigator\r\n */\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n  const user = useSelector((state: any) => state.user);\r\n  const dispatch = useDispatch<any>();\r\n\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"TabOne\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors[colorScheme].tint,\r\n      }}\r\n    >\r\n      <BottomTab.Screen\r\n        name=\"Profile\"\r\n        component={user ? ProfilePresenter : LoginPresenter}\r\n        options={{\r\n          title: \"Profile\",\r\n          tabBarIcon: ({ color }) => (\r\n            <TabBarIcon name=\"code\" color={color} tabName=\"Profile\" />\r\n          ),\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Search\"\r\n        component={SearchPresenter} //Search\r\n        options={{\r\n          title: \"Search\",\r\n          tabBarIcon: ({ color }) => (\r\n            <TabBarIcon name=\"code\" color={color} tabName=\"Search\" />\r\n          ),\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Favourties\"\r\n        component={user ? FavouritesPresenter : LoginPresenter}\r\n        listeners={{\r\n          tabPress: (e) => {\r\n            if (!user)\r\n              dispatch(setSnackbar(\"Please login to see your favourites\"));\r\n          },\r\n        }}\r\n        options={{\r\n          title: \"Favorites\",\r\n          tabBarIcon: ({ color }) => (\r\n            <TabBarIcon name=\"code\" color={color} tabName=\"Favorites\" />\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <BottomTab.Screen\r\n        name=\"Grocery\"\r\n        component={user ? GroceryListPresenter : LoginPresenter} //Grocery\r\n        listeners={{\r\n          tabPress: (e) => {\r\n            if (!user)\r\n              dispatch(setSnackbar(\"Please login to see your grocery list\"));\r\n          },\r\n        }}\r\n        options={{\r\n          title: \"Grocery list\",\r\n          tabBarIcon: ({ color }) => (\r\n            <TabBarIcon name=\"code\" color={color} tabName=\"Grocery list\" />\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <BottomTab.Screen\r\n        name=\"About\"\r\n        component={AboutPresenter} //Grocery\r\n        options={{\r\n          title: \"About\",\r\n          tabBarIcon: ({ color }) => (\r\n            <TabBarIcon name=\"code\" color={color} tabName=\"About\" />\r\n          ),\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\r\n */\r\nfunction TabBarIcon(props: {\r\n  name: React.ComponentProps<typeof FontAwesome>[\"name\"];\r\n  color: string;\r\n  tabName: string;\r\n}) {\r\n  if (props.tabName == \"Search\") {\r\n    return <Octicons name=\"search\" size={30} color=\"grey\" />;\r\n  } else if (props.tabName == \"Favorites\") {\r\n    return <FontAwesome name=\"heart\" size={30} color=\"grey\" />;\r\n  } else if (props.tabName == \"Grocery list\") {\r\n    return <MaterialIcons name=\"local-grocery-store\" size={30} color=\"grey\" />;\r\n  } else if (props.tabName == \"Profile\") {\r\n    return (\r\n      <MaterialCommunityIcons name=\"face-man-profile\" size={30} color=\"grey\" />\r\n    );\r\n  } else if (props.tabName == \"About\") {\r\n    return <MaterialCommunityIcons name=\"information\" size={30} color=\"grey\" />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Snackbar } from \"react-native-paper\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { hideSnackbar } from \"../redux\";\r\nexport default function SnackbarPresenter() {\r\n  const dispatch = useDispatch<any>();\r\n  const onDismissSnackBar = () => dispatch(hideSnackbar());\r\n  const visibility = useSelector((state: any) => state.snackbar.visibility);\r\n  const msg = useSelector((state: any) => state.snackbar.msg);\r\n\r\n  return (\r\n    <Snackbar\r\n      visible={visibility}\r\n      onDismiss={onDismissSnackBar}\r\n      duration={2000}\r\n      action={{\r\n        label: \"Dismiss\",\r\n      }}\r\n    >\r\n      {msg}\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { StatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\r\n\r\nimport useCachedResources from \"./hooks/useCachedResources\";\r\nimport useColorScheme from \"./hooks/useColorScheme\";\r\nimport Navigation from \"./navigation\";\r\nimport HeaderPresenter from \"./presenters/headerPresenter\";\r\nimport SnackbarPresenter from \"./presenters/snackbarPresenter\";\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n        <SnackbarPresenter />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { FontAwesome } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...FontAwesome.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import { registerRootComponent } from \"expo\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nexport default function EntryPoint() {\r\n  return (\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n}\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(EntryPoint);\r\n"],"sourceRoot":""}