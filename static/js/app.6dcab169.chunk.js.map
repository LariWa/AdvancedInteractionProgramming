{"version":3,"sources":["styles/notfound.png","styles/notFoundImage.png","assets/fonts/SpaceMono-Regular.ttf","styles/loginImage.png","styles/registrationImage.png","hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","components/StyledText.tsx","components/EditViewInfo.tsx","views/modalView.tsx","presenters/modalPresenter.tsx","views/notFoundView.tsx","views/loginView.tsx","loginSource.ts","redux/reducers/favouritesReducer.ts","redux/reducers/ingredientsReducer.ts","redux/reducers/index.ts","redux/store.ts","dbSource.ts","redux/actions/index.ts","presenters/loginPresenter.tsx","views/registrationView.tsx","presenters/registrationPresenter.tsx","components/dropdownMenu.tsx","views/searchView.tsx","resolvePromise.ts","components/loading.tsx","views/promiseNoData.tsx","redux/actions/favouritesActions.ts","views/favBtnView.tsx","presenters/favouriteBtnPresenter.tsx","components/dishCard.tsx","presenters/dishCardPresenter.tsx","views/resultsView.tsx","presenters/searchPresenter.tsx","mealSouce.ts","redux/actions/ingredientsActions.ts","components/ingredientItem.tsx","presenters/ingredientItemPresenter.tsx","views/recipeView.tsx","presenters/recipePresenter.tsx","navigation/LinkingConfiguration.ts","views/noResultsView.tsx","presenters/favourtiesPresenter.tsx","views/groceryListView.tsx","presenters/groceryListPresenter.tsx","views/profileView.tsx","presenters/profilePresenter.tsx","navigation/index.tsx","presenters/snackbarPresenter.tsx","App.tsx","hooks/useCachedResources.ts","index.js"],"names":["module","exports","useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","MonoText","fontFamily","EditViewInfo","path","styles","getStartedContainer","getStartedText","codeHighlightContainer","homeViewFilename","helpContainer","TouchableOpacity","onPress","handleHelpPress","helpLink","helpLinkText","WebBrowser","StyleSheet","create","alignItems","marginHorizontal","marginVertical","borderRadius","paddingHorizontal","fontSize","lineHeight","textAlign","marginTop","paddingVertical","ModalView","container","title","separator","StatusBar","Platform","OS","flex","justifyContent","fontWeight","height","width","ModalPresenter","NotFoundScreen","navigation","replace","link","linkText","Image","image","source","require","left","top","padding","LoginView","fill","mainContainer","mainContainer_h5","initialValues","email","password","onSubmit","onLogin","validationSchema","signupSchema","handleChange","handleBlur","handleSubmit","values","errors","touched","TextInput","mainContainer_textInput","onChangeText","onBlur","value","placeholder","error","secureTextEntry","mainContainer_italics","onNewUser","mainContainer_button","loading","maincontainer_image","colorScheme","position","paddingLeft","paddingRight","paddingTop","alignContent","marginRight","marginLeft","marginBottom","borderColor","borderWidth","fontStyle","textDecorationLine","overflow","paddingBottom","boxShadow","bottom","resizeMode","axios","defaults","baseURL","initFavState","data","initIngrState","rootReducer","combineReducers","token","state","action","type","payload","user","favourites","success","filter","fav","ingredients","console","log","ingr","currentRecipe","snackbar","msg","visibility","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","getHeader","headers","authorization","getState","setUserData","username","dispatch","get","then","result","catch","setSnackbar","LoginPresenter","useDispatch","useState","setLoadingState","SignupSchema","Yup","shape","required","min","loginData","post","res","navigate","response","message","RegistrationView","direction","mainContainer__h5","confirmPassword","onRegister","mainContainer__textInput","mainContainer__error","mainContainer__italics","mainContainer__button","disabled","right","RegistrationPresenter","oneOf","registerData","setNewUserData","dropdown","fontColor","placeholderStyle","selectedStyle","DropdownMenu","selected","setSelected","search","labelField","valueField","searchItem","onChange","mainContainer_filters","display","overflowX","mainContainer__search","SearchView","spacing","onQueryChanged","onSearch","ScrollView","horizontal","categories","onCategoriesSelected","areas","onAreasSelected","ingrToSelect","onIngredientsSelected","resolvePromise","promiseToResolve","promiseState","notifyACB","promise","err","Loading","ActivityIndicator","size","promiseNoData","toString","addFav","id","addFavourite","deleteFav","includes","deleteFavourite","FavBtnView","onClicked","icon","name","addedToFav","FavouriteBtnPresenter","useSelector","dishcard","shadowColor","shadowOffset","shadowOpacity","shadowRadius","dishcard__left","borderTopLeftRadius","borderBottomLeftRadius","dishcard__right","minHeight","border","borderTopRightRadius","borderBottomRightRadius","dishcard__right__details","margin","dishcard__right__details__header","dishcard__right__details__tags","flexDirection","flexWrap","dishcard__right__details__tags__tag","DishCard","onSelectedRecipe","strMealThumb","uri","strMeal","strTags","split","map","tag","idMeal","DishCardPresenter","recipe","textInput","topRecipes","ResultsView","header","results","r","SearchPresenter","setCategoriesState","setAreasState","setIngredientsState","selectedCategories","setSelectedCategories","selectedAreas","setSelectedAreas","selectedIngredients","setSelectedIngredients","query","setQueryState","setResultsState","React","topFavs","setTopFavs","topFavsLoading","setTopFavsLoading","mealsPromiseState","setMealsPromiseState","setPromise","setData","setError","mealPromiseStateChanged","useEffect","all","elem","label","strCategory","strArea","strIngredient","ids","filterMeals","length","addIngr","ingredient","addIngredient","deleteIngr","deleteIngredient","IngredientItem","Image_Http_URL","onBtnClicked","listItemPressed","leading","imageIngr","showQuantity","quantity","trailing","MaterialIcons","added","listItem","IngredientItemPresenter","addedToList","details","subheader","details_header","gap","tags","RecipeView","vertical","strInstructions","RecipePresenter","route","params","linking","prefixes","Linking","config","screens","Root","TabOne","TabOneScreen","TabTwo","TabTwoScreen","TabThree","TabThreeScreen","TabFour","TabFourScreen","TabFive","TabFiveScreen","TabSix","TabSixScreen","TabSeven","TabEight","TabFourEight","Modal","NotFound","NoResultsView","modalView","messageText","modalText","elevation","FavouritesPresenter","favouritesDetails","setFavouritesDetails","e","mainContianer","GroceryListView","GroceryListPresenter","mainComponents","profile_button","profile_text","ProfileView","Button","handleLogout","ProfilePresenter","Navigation","NavigationContainer","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","Stack","createNativeStackNavigator","Navigator","Screen","component","BottomTabNavigator","options","headerShown","Group","screenOptions","presentation","BottomTab","createBottomTabNavigator","initialRouteName","tabBarActiveTintColor","tabBarIcon","TabBarIcon","tabName","listeners","tabPress","Octicons","FontAwesome","MaterialCommunityIcons","SnackbarPresenter","Snackbar","visible","onDismiss","duration","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","loadResourcesAndDataAsync","useCachedResources","EntryPoint","registerRootComponent"],"mappings":"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","file":"static/js/app.6dcab169.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/notfound.d0e990fc.png\";","module.exports = __webpack_public_path__ + \"static/media/notFoundImage.dbae6ccc.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/loginImage.2f21b2f9.png\";","module.exports = __webpack_public_path__ + \"static/media/registrationImage.9ecc3fe5.png\";","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","const tintColorLight = '#373737';\r\nconst tintColorDark = '#FDFBF7';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#373737',\r\n    background: '#FDFBF7',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n  },\r\n  dark: {\r\n    text: '#FDFBF7',\r\n    background: '#242526',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n  },\r\n};\r\n","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import { Text, TextProps } from './Themed';\r\n\r\nexport function MonoText(props: TextProps) {\r\n  return <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />;\r\n}\r\n","import * as WebBrowser from 'expo-web-browser';\r\nimport { StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport { MonoText } from './StyledText';\r\nimport { Text, View } from './Themed';\r\n\r\nexport default function EditViewInfo({ path }: { path: string }) {\r\n  return (\r\n    <View>\r\n      <View style={styles.getStartedContainer}>\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Open up the code for this view:\r\n        </Text>\r\n\r\n        <View\r\n          style={[styles.codeHighlightContainer, styles.homeViewFilename]}\r\n          darkColor=\"rgba(255,255,255,0.05)\"\r\n          lightColor=\"rgba(0,0,0,0.05)\">\r\n          <MonoText>{path}</MonoText>\r\n        </View>\r\n\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Change any of the text, save the file, and your app will automatically update.\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.helpContainer}>\r\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\r\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\r\n            Tap here if your app doesn't automatically update after making changes\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction handleHelpPress() {\r\n  WebBrowser.openBrowserAsync(\r\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  getStartedContainer: {\r\n    alignItems: 'center',\r\n    marginHorizontal: 50,\r\n  },\r\n  homeViewFilename: {\r\n    marginVertical: 7,\r\n  },\r\n  codeHighlightContainer: {\r\n    borderRadius: 3,\r\n    paddingHorizontal: 4,\r\n  },\r\n  getStartedText: {\r\n    fontSize: 17,\r\n    lineHeight: 24,\r\n    textAlign: 'center',\r\n  },\r\n  helpContainer: {\r\n    marginTop: 15,\r\n    marginHorizontal: 20,\r\n    alignItems: 'center',\r\n  },\r\n  helpLink: {\r\n    paddingVertical: 15,\r\n  },\r\n  helpLinkText: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport { Platform, StyleSheet, Button } from 'react-native';\r\n\r\nimport EditViewInfo from '../components/EditViewInfo';\r\nimport { Text, View } from '../components/Themed';\r\n\r\nexport default function ModalView() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Modal</Text>\r\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\r\n      <EditViewInfo path=\"/views/ModalView.tsx\" />\r\n      <Text>Account</Text>\r\n\r\n      {/* Use a light status bar on iOS to account for the black space above the modal */}\r\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: '80%',\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport ModalView from \"../views/modalView\";\r\nimport ErrorMessage from \"../components/errorMessage\";\r\nimport { login } from \"../loginSource\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { setUserData, setToken } from \"../redux\";\r\nimport { RootTabScreenProps } from \"../types\";\r\n\r\nexport default function ModalPresenter() {\r\n  return (\r\n    <>\r\n      <ModalView></ModalView>\r\n    </>\r\n  );\r\n}\r\n","import { Image, StyleSheet, TouchableOpacity } from \"react-native\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { Text, View } from \"../components/Themed\";\r\nimport { RootStackScreenProps } from \"../types\";\r\nimport React from \"react\";\r\n\r\nexport default function NotFoundScreen({\r\n  navigation,\r\n}: RootStackScreenProps<\"NotFound\">) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>This screen doesn't exist.</Text>\r\n      <TouchableOpacity\r\n        onPress={() => navigation.replace(\"Root\")}\r\n        style={styles.link}\r\n      >\r\n        <Text style={styles.linkText}>Go to home screen!</Text>\r\n      </TouchableOpacity>\r\n      <Image\r\n        style={styles.image}\r\n        source={require(\"../styles/notfound.png\")}\r\n      ></Image>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: 200,\r\n    height: 150,\r\n    left: 0,\r\n    top: \"20%\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: \"#2e78b7\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Image, TextInput, View, StyleSheet } from \"react-native\";\r\nimport { Flex, Text, Button } from \"@react-native-material/core\";\r\nimport { styles_loginPage } from \"./styles\";\r\nimport { Formik } from \"formik\";\r\nexport default function LoginView(props: any) {\r\n  return (\r\n    <>\r\n      <Flex fill style={styles(props).mainContainer}>\r\n        <Text style={styles(props).mainContainer_h5}>Sign in</Text>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={props.onLogin}\r\n          validationSchema={props.signupSchema}\r\n        >\r\n          {({\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            values,\r\n            errors,\r\n            touched,\r\n          }) => (\r\n            <View>\r\n              <TextInput\r\n                style={styles(props).mainContainer_textInput}\r\n                onChangeText={handleChange(\"email\")}\r\n                onBlur={handleBlur(\"email\")}\r\n                value={values.email}\r\n                placeholder=\"Email\"\r\n              />\r\n              {errors.email && touched.email ? (\r\n                <Text style={styles(props).error}>{errors.email}</Text>\r\n              ) : null}\r\n              <TextInput\r\n                style={styles(props).mainContainer_textInput}\r\n                onChangeText={handleChange(\"password\")}\r\n                onBlur={handleBlur(\"password\")}\r\n                value={values.password}\r\n                placeholder=\"Password\"\r\n                secureTextEntry={true}\r\n              />\r\n              {errors.password && touched.password ? (\r\n                <Text style={styles(props).error}>{errors.password}</Text>\r\n              ) : null}\r\n              <Text\r\n                style={styles(props).mainContainer_italics}\r\n                onPress={props.onNewUser}\r\n              >\r\n                New user?\r\n              </Text>\r\n              <Button\r\n                title=\"Get Started\"\r\n                color=\"#A7C6DA\"\r\n                onPress={handleSubmit}\r\n                style={styles(props).mainContainer_button}\r\n                loading={props.loading}\r\n              />\r\n            </View>\r\n          )}\r\n        </Formik>\r\n        <View  style={styles(props).maincontainer_image}>\r\n          <Image\r\n            style={styles(props).image}\r\n            source={require(\"../styles/loginImage.png\")}\r\n          ></Image>\r\n        </View>\r\n      </Flex>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst styles = (props: any) => StyleSheet.create({\r\n  mainContainer: {\r\n    backgroundColor: props.colorScheme == \"dark\" ? \"#18191A\" : \"#FDFBF7\",\r\n    padding: 10,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    paddingLeft: 50,\r\n    paddingRight: 50,\r\n    paddingTop: 0,\r\n    alignContent: \"center\",\r\n  },\r\n  mainContainer_textInput: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginBottom: 10,\r\n    // border: \"1px solid #A7C6DA\",\r\n    borderColor: \"#A7C6DA\",\r\n    borderWidth: 2,\r\n    color: \"#A7C6DA\",\r\n    borderRadius: 10,\r\n    width: 264,\r\n    height: 45,\r\n    paddingLeft: 10,\r\n  },\r\n  mainContainer_h5: {\r\n    fontWeight: \"bold\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    fontSize: 32,\r\n    marginBottom: 20,\r\n    color: \"#A7C6DA\",\r\n  },\r\n  mainContainer_italics: {\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    color: \"#A7C6DA\",\r\n    textDecorationLine: \"underline\",\r\n    marginBottom: 30,\r\n    overflow: \"hidden\",\r\n  },\r\n  mainContainer_button: {\r\n    // backgroundColor: \"#A7C6DA\",\r\n    width: 155,\r\n    height: 60,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderRadius: 300,\r\n    boxShadow: \"0px 0px 100px rgba(162, 170, 106, 0.2)\",\r\n  },\r\n  maincontainer_image:{\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    width: \"50%\",\r\n    height: \"50%\"\r\n  },\r\n  image:{\r\n    width: \"auto\",\r\n    height: \"100%\",\r\n    resizeMode: 'contain',\r\n  },\r\n  error: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    color: \"red\",\r\n    width: 264,\r\n    height: 45,\r\n    paddingLeft: 10,\r\n  },\r\n});\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://mealappserver.onrender.com\";\r\n\r\nfunction login(username: string, password: string) {\r\n  return axios.post(\"/user/login\", {\r\n    username: username,\r\n    password: password,\r\n  });\r\n}\r\nfunction signup(username: string, password: string) {\r\n  return axios.post(\"/user/signup\", {\r\n    username: username,\r\n    password: password,\r\n  });\r\n}\r\nexport { login, signup };\r\n","export const favouritesReducer = (\r\n  state: FavState = initFavState,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_FAV\" || \"DELETE_FAV\":\r\n      return {\r\n        data: state.data,\r\n        loading: true,\r\n        success: false,\r\n        error: false,\r\n      };\r\n    case \"ADD_TO_FAV_SUC\":\r\n      return {\r\n        data: [...state.data, action.payload],\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"DELETE_FAV_SUC\":\r\n      return {\r\n        data: state.data.filter((fav) => fav !== action.payload),\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"MANIPULATE_FAV_ERROR\":\r\n      return {\r\n        data: state.data,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n    case \"SET_FAVS\":\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"GET_FAVS_SUC\":\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype FavState = {\r\n  data: Array<string>;\r\n  loading: boolean | null;\r\n  error: string | boolean | null;\r\n};\r\nconst initFavState = {\r\n  data: <Array<string>>[],\r\n  loading: false,\r\n  error: <string | null | boolean>false,\r\n};\r\n","export const ingredientsReducer = (\r\n  state: IngrState = initIngrState,\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_INGR\" || \"DELETE_INGR\":\r\n      return {\r\n        data: state.data,\r\n        loading: true,\r\n        success: false,\r\n        error: false,\r\n      };\r\n    case \"ADD_TO_INGR_SUC\":\r\n      return {\r\n        data: [...state.data, action.payload],\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"DELETE_INGR_SUC\":\r\n      console.log(action);\r\n      return {\r\n        data: state.data.filter((ingr) => ingr !== action.payload),\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"MANIPULATE_INGR_ERROR\":\r\n      return {\r\n        data: state.data,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n    case \"SET_INGRS\":\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    case \"GET_INGRS_SUC\":\r\n      return {\r\n        data: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        error: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype IngrState = {\r\n  data: Array<string>;\r\n  loading: boolean | null;\r\n  error: string | boolean | null;\r\n};\r\nconst initIngrState = {\r\n  data: <Array<string>>[],\r\n  loading: false,\r\n  error: <string | null | boolean>false,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { favouritesReducer } from \"./favouritesReducer\";\r\nimport { ingredientsReducer } from \"./ingredientsReducer\";\r\nconst user = (state = \"\", action: any) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst token = (state = {}, action: any) => {\r\n  switch (action.type) {\r\n    case \"SET_TOKEN\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst currentRecipe = (state = {}, action: any) => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_RECIPE\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst snackbar = (\r\n  state: SnackBarState = { msg: \"\", visibility: false },\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_MSG\":\r\n      return {\r\n        msg: action.payload,\r\n        visibility: true,\r\n      };\r\n    case \"SET_VISIBILITY\":\r\n      return {\r\n        msg: state.msg,\r\n        visibility: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst rootReducer = combineReducers({\r\n  token: token,\r\n  user: user,\r\n  favourites: favouritesReducer,\r\n  ingredients: ingredientsReducer,\r\n  currentRecipe: currentRecipe,\r\n  snackbar: snackbar,\r\n});\r\n\r\nexport type ApplicationState = ReturnType<typeof rootReducer>;\r\n\r\nexport { rootReducer };\r\ntype SnackBarState = {\r\n  msg: string;\r\n  visibility: boolean;\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"./reducers\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware));\r\n\r\nconst store = createStore(rootReducer, composedEnhancer);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport store from \"./redux/store\";\r\n\r\nfunction addFavourite(id: string) {\r\n  return axios.post(\r\n    \"/db/addFavourite\",\r\n    {\r\n      id: id,\r\n    },\r\n    getHeader()\r\n  );\r\n}\r\nfunction deleteFavourite(id: string) {\r\n  return axios.post(\r\n    \"/db/deleteFavourite\",\r\n    {\r\n      id: id,\r\n    },\r\n    getHeader()\r\n  );\r\n}\r\nfunction getFavourites() {\r\n  return axios.get(\"/db/getFavourites\", getHeader());\r\n}\r\n\r\nfunction addIngredient(ingredient: string) {\r\n  return axios.post(\r\n    \"/db/addIngredient\",\r\n    {\r\n      ingredient: ingredient,\r\n    },\r\n    getHeader()\r\n  );\r\n}\r\nfunction deleteIngredient(ingredient: string) {\r\n  return axios.post(\r\n    \"/db/deleteIngredient\",\r\n    {\r\n      ingredient: ingredient,\r\n    },\r\n    getHeader()\r\n  );\r\n}\r\nfunction getGroceries() {\r\n  return axios.get(\"/db/getGroceries\", getHeader());\r\n}\r\n\r\nfunction getTopFavourites() {\r\n  return axios.get(\"/db/topTen\").then((res) => {\r\n    return axios.post(\"/api/mealsDetails\", {\r\n      ids: res.data,\r\n    });\r\n  });\r\n}\r\nfunction getHeader() {\r\n  return { headers: { authorization: \"bearer \" + store.getState().token } };\r\n}\r\n\r\nexport {\r\n  addFavourite,\r\n  deleteFavourite,\r\n  getFavourites,\r\n  getTopFavourites,\r\n  addIngredient,\r\n  deleteIngredient,\r\n  getGroceries,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport { getFavourites, getGroceries, getIngredients } from \"../../dbSource\";\r\n\r\nexport const setToken = (token: String) => ({\r\n  type: \"SET_TOKEN\",\r\n  payload: token,\r\n});\r\nexport const setCurrentRecipe = (recipe: any) => ({\r\n  type: \"SET_CURRENT_RECIPE\",\r\n  payload: recipe,\r\n});\r\n\r\nexport const setUserData = (username: string, token: String) => {\r\n  return async (dispatch: Dispatch<setUserData>) => {\r\n    dispatch({\r\n      type: \"SET_TOKEN\",\r\n      payload: token,\r\n    });\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      payload: username,\r\n    });\r\n\r\n    getFavourites()\r\n      .then((result) => {\r\n        dispatch({ type: \"GET_FAVS_SUC\", payload: result.data });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"MANIPULATE_FAV_ERROR\",\r\n          payload: error,\r\n        });\r\n      });\r\n    getGroceries()\r\n      .then((result) => {\r\n        dispatch({ type: \"GET_INGRS_SUC\", payload: result.data });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"MANIPULATE_INGR_ERROR\",\r\n          payload: error,\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const deleteUserData = () => {\r\n  return async (dispatch: Dispatch<setUserData>) => {\r\n    dispatch({\r\n      type: \"SET_TOKEN\",\r\n      payload: null,\r\n    });\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      payload: null,\r\n    });\r\n\r\n    dispatch({ type: \"SET_FAVS\", payload: [] });\r\n\r\n    dispatch({ type: \"SET_INGRS\", payload: [] });\r\n  };\r\n};\r\nexport const setNewUserData = (username: string, token: String) => {\r\n  return async (dispatch: Dispatch<setUserData>) => {\r\n    dispatch({\r\n      type: \"SET_TOKEN\",\r\n      payload: token,\r\n    });\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      payload: username,\r\n    });\r\n  };\r\n};\r\nexport const setSnackbar = (msg: string) => {\r\n  return async (dispatch: Dispatch<setSnackbar>) => {\r\n    dispatch({\r\n      type: \"SET_MSG\",\r\n      payload: msg,\r\n    });\r\n    dispatch({\r\n      type: \"SET_VISBILITY\",\r\n      payload: true,\r\n    });\r\n  };\r\n};\r\nexport const hideSnackbar = () => ({\r\n  type: \"SET_VISIBILITY\",\r\n  payload: false,\r\n});\r\nexport type setUserData = {\r\n  readonly type:\r\n    | \"SET_TOKEN\"\r\n    | \"SET_USER\"\r\n    | \"GET_FAVS_SUC\"\r\n    | \"MANIPULATE_FAV_ERROR\"\r\n    | \"GET_INGRS_SUC\"\r\n    | \"MANIPULATE_INGR_ERROR\"\r\n    | \"SET_FAVS\"\r\n    | \"SET_INGRS\";\r\n  payload: any;\r\n};\r\nexport type setSnackbar = {\r\n  readonly type: \"SET_MSG\" | \"SET_VISBILITY\";\r\n  payload?: string | boolean;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport LoginView from \"../views/loginView\";\r\nimport { login } from \"../loginSource\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUserData, setSnackbar } from \"../redux\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function LoginPresenter(props: {\r\n  navigation: { navigate: (arg0: string) => void };\r\n}) {\r\n  const dispatch = useDispatch<any>();\r\n  const colorScheme = useColorScheme();\r\n  const [loading, setLoadingState] = useState(false);\r\n\r\n  function onLoginACB(loginData: { email: string; password: string }) {\r\n    setLoadingState(true);\r\n    login(loginData.email, loginData.password)\r\n      .then((res: any) => {\r\n        dispatch(setSnackbar(\"You logged in successfully\"));\r\n        dispatch(setUserData(loginData.email, res.data.token));\r\n        setLoadingState(false);\r\n        props.navigation.navigate(\"Search\");\r\n      })\r\n      .catch((data) => {\r\n        dispatch(setSnackbar(data.response.data?.error || data.message));\r\n        setLoadingState(false);\r\n      });\r\n  }\r\n  function onRegistrationACB() {\r\n    props.navigation.navigate(\"Registration\");\r\n  }\r\n  const SignupSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    password: Yup.string()\r\n      .required(\"Password is a required field\")\r\n      .min(8, \"Password must be at least 8 characters\"),\r\n  });\r\n  return (\r\n    <LoginView\r\n      onLogin={onLoginACB}\r\n      onNewUser={onRegistrationACB}\r\n      loading={loading}\r\n      signupSchema={SignupSchema}\r\n      colorScheme={colorScheme}\r\n    ></LoginView>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Image, TextInput, View, StyleSheet } from \"react-native\";\r\nimport { Flex, Text, Button } from \"@react-native-material/core\";\r\nimport { styles_registrationPage } from \"./styles\";\r\nimport { Field, Formik } from \"formik\";\r\n\r\nexport default function RegistrationView(props: any) {\r\n  return (\r\n    <Flex  fill style={styles(props).mainContainer} direction=\"column\">\r\n      <View>\r\n          <Text style={styles(props).mainContainer__h5}>Sign up</Text>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\", confirmPassword: \"\" }}\r\n          onSubmit={props.onRegister}\r\n          validationSchema={props.signupSchema}\r\n        >\r\n          {({\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            values,\r\n            errors,\r\n            touched,\r\n          }) => (\r\n            <View>\r\n              <TextInput\r\n                style={styles(props).mainContainer__textInput}\r\n                onChangeText={handleChange(\"email\")}\r\n                onBlur={handleBlur(\"email\")}\r\n                value={values.email}\r\n                placeholder=\"Email\"\r\n              />\r\n              {errors.email && touched.email ? (\r\n                <Text style={styles(props).mainContainer__error}>{errors.email}</Text>\r\n              ) : null}\r\n              <TextInput\r\n                style={styles(props).mainContainer__textInput}\r\n                onChangeText={handleChange(\"password\")}\r\n                onBlur={handleBlur(\"password\")}\r\n                value={values.password}\r\n                placeholder=\"Password\"\r\n                secureTextEntry={true}\r\n              />\r\n              {errors.password && touched.password ? (\r\n                <Text style={styles(props).mainContainer__error}>\r\n                  {errors.password}\r\n                </Text>\r\n              ) : null}\r\n\r\n              <TextInput\r\n                style={styles(props).mainContainer__textInput}\r\n                onChangeText={handleChange(\"confirmPassword\")}\r\n                onBlur={handleBlur(\"confirmPassword\")}\r\n                value={values.confirmPassword}\r\n                placeholder=\"Confirm your password\"\r\n                secureTextEntry={true}\r\n              />\r\n              {errors.confirmPassword && touched.confirmPassword ? (\r\n                <Text style={styles(props).mainContainer__error}>\r\n                  {errors.confirmPassword}\r\n                </Text>\r\n              ) : null}\r\n              <Text\r\n                style={styles(props).mainContainer__italics}\r\n                onPress={props.onLogin}\r\n              >\r\n                Alredy have an account?\r\n              </Text>\r\n              <Button\r\n                title=\"Get Started\"\r\n                color=\"#A7C6DA\"\r\n                style={styles(props).mainContainer__button}\r\n                onPress={handleSubmit}\r\n                loading={props.loading}\r\n                disabled={props.loading}\r\n              />\r\n            </View>\r\n          )}\r\n        </Formik>\r\n      </View>\r\n      <View  style={styles(props).maincontainer_image}>\r\n          <Image\r\n            style={styles(props).image}\r\n            source={require(\"../styles/registrationImage.png\")}\r\n          ></Image>\r\n        </View>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nconst styles = (props: any) => StyleSheet.create({\r\n  mainContainer: {\r\n    backgroundColor: props.colorScheme == \"dark\" ? \"#18191A\" : \"#FDFBF7\",\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    paddingLeft: 50,\r\n    paddingRight: 50,\r\n    paddingTop: 10,\r\n    alignContent: \"center\",\r\n  },\r\n  mainContainer__textInput: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginBottom: 10,\r\n    borderWidth: 2,\r\n    color: \"#A7C6DA\",\r\n    borderColor: \"#A7C6DA\",\r\n    borderRadius: 10,\r\n    width: 264,\r\n    height: 45,\r\n    paddingLeft: 10,\r\n  },\r\n  mainContainer__h5: {\r\n    fontWeight: \"bold\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    fontSize: 32,\r\n    marginBottom: 20,\r\n    color: \"#A7C6DA\",\r\n  },\r\n  mainContainer__italics: {\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    textDecorationLine: \"underline\",\r\n    marginBottom: 30,\r\n    overflow: \"hidden\",\r\n    color: \"#A7C6DA\",\r\n  },\r\n  mainContainer__button: {\r\n    // backgroundColor: \"#314959\",\r\n    width: 155,\r\n    height: 60,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderRadius: 300,\r\n    boxShadow: \"0px 0px 100px rgba(162, 170, 106, 0.2)\",\r\n    color: \"#A7C6DA\",\r\n  },\r\n  maincontainer_image:{\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n    width: \"50%\",\r\n    height: \"50%\"\r\n  },\r\n  image:{\r\n    width: \"auto\",\r\n    height: \"100%\",\r\n    resizeMode: 'contain',\r\n  },\r\n  mainContainer__error: {\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    color: \"red\",\r\n    width: 264,\r\n    height: 45,\r\n    paddingLeft: 10,\r\n  },\r\n});\r\n\r\n","import React, { useState } from \"react\";\r\nimport RegistrationView from \"../views/registrationView\";\r\nimport { signup } from \"../loginSource\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setNewUserData, setSnackbar } from \"../redux\";\r\nimport * as Yup from \"yup\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\n\r\nexport default function RegistrationPresenter(props: any) {\r\n  const dispatch = useDispatch<any>();\r\n  const [loading, setLoadingState] = useState(false);\r\n  const colorScheme = useColorScheme();\r\n\r\n  function onRegistrationACB(registerData: {\r\n    email: string;\r\n    password: string;\r\n  }) {\r\n    setLoadingState(true);\r\n    signup(registerData.email, registerData.password)\r\n      .then((res: any) => {\r\n        dispatch(setNewUserData(registerData.email, res.data));\r\n        dispatch(setSnackbar(\"You registered successfully\"));\r\n        props.navigation.navigate(\"Search\");\r\n      })\r\n      .catch((data) => {\r\n        dispatch(setSnackbar(data.response.data?.message || data.message));\r\n      });\r\n  }\r\n  function onLoginACB() {\r\n    props.navigation.navigate(\"Login\");\r\n  }\r\n\r\n  const SignupSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    password: Yup.string()\r\n      .required(\"Password is a required field\")\r\n      .min(8, \"Password must be at least 8 characters\"),\r\n    confirmPassword: Yup.string().oneOf(\r\n      [Yup.ref(\"password\"), null],\r\n      \"Passwords must match\"\r\n    ),\r\n  });\r\n  return (\r\n    <>\r\n      <RegistrationView\r\n        onRegister={onRegistrationACB}\r\n        onLogin={onLoginACB}\r\n        loading={loading}\r\n        signupSchema={SignupSchema}\r\n        colorScheme={colorScheme}\r\n      ></RegistrationView>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { MultiSelect } from \"react-native-element-dropdown\";\r\n\r\nconst styles = (props: any) => StyleSheet.create({\r\n  dropdown: {\r\n    backgroundColor: props.colorScheme == \"dark\" ? \"#2F2F2F\" : \"#FDFBF7\",\r\n    fontColor: props.colorScheme == \"dark\" ? \"white\" : \"#2F2F2F\",\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    width: 150,\r\n    marginRight: 10,\r\n  },\r\n  placeholderStyle: {\r\n    fontSize: 16,\r\n    color: props.colorScheme == \"dark\" ? \"white\" : \"#2F2F2F\",\r\n  },\r\n  selectedStyle:{\r\n    backgroundColor: props.colorScheme == \"dark\" ? \"#2F2F2F\" : \"#FDFBF7\",\r\n    borderRadius: 12,\r\n    fontColor: props.colorScheme == \"dark\" ? \"#FDFBF7\" : \"#2F2F2F\",\r\n  }\r\n});\r\nexport default function DropdownMenu(props: any) {\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  function onChange(values: any) {\r\n    props.onChange(values);\r\n    setSelected(values);\r\n  }\r\n  return (\r\n    <MultiSelect\r\n      data={props.data}\r\n      style={styles(props).dropdown}\r\n      placeholderStyle={styles(props).placeholderStyle}\r\n      selectedStyle={styles(props).selectedStyle}\r\n      search={true}\r\n      labelField=\"label\"\r\n      valueField=\"value\"\r\n      value={selected}\r\n      placeholder={props.searchItem}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, TextInput, View, ScrollView } from \"react-native\";\r\nimport { Flex, Button, HStack } from \"@react-native-material/core\";\r\nimport DropdownMenu from \"../components/dropdownMenu\";\r\nimport Header from \"../components/header\";\r\n\r\nconst styles = (props: any) => StyleSheet.create({\r\n  mainContainer: {\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    backgroundColor: props.colorScheme == \"dark\" ? \"#18191A\" : \"#F3F2E9\",\r\n    // position: \"absolute\",\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingTop: 10,\r\n    marginBottom: 20,\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  mainContainer_button: {\r\n    // backgroundColor: \"var(--dark-blue)\",\r\n    width: 155,\r\n    height: 60,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    paddingTop: 10,\r\n    borderRadius: 300,\r\n  },\r\n  mainContainer_filters: {\r\n    borderRadius: 10,\r\n    marginTop: 10,\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    overflowX: \"auto\",\r\n  },\r\n  mainContainer__search: {\r\n    marginBottom: 10,\r\n    backgroundColor: props.colorScheme == \"dark\" ? \"#2F2F2F\" : \"#FDFBF7\",\r\n    color: props.colorScheme == \"dark\" ? \"white\" : \"#2F2F2F\",\r\n    borderRadius: 10,\r\n    width: \"70%\",\r\n    height: 45,\r\n    paddingLeft: 10,\r\n    fontStyle: \"italic\",\r\n  },\r\n  mainContainer__button: {\r\n    backgroundColor: \"black\",\r\n    borderRadius: 300,\r\n    height: 45,\r\n  },\r\n});\r\nexport default function SearchView(props: any) {\r\n  function onSearch() {\r\n    props.onSearch();\r\n  }\r\n  return (\r\n    <View style={styles(props).mainContainer}>\r\n      {/* <Header /> */}\r\n      {/* <Text style={styles.mainContainer_h5} >Sign up</Text> */}\r\n      <HStack spacing={6}>\r\n        <TextInput\r\n          placeholder=\"Search\"\r\n          style={styles(props).mainContainer__search}\r\n          onChangeText={props.onQueryChanged}\r\n        />\r\n        <Button title=\"Search\" style={styles(props).mainContainer__button} onPress={onSearch} />\r\n      </HStack>\r\n      <ScrollView horizontal={true}>\r\n        <Flex direction=\"row\" style={styles(props).mainContainer_filters}>\r\n          <DropdownMenu\r\n            data={props.categories}\r\n            onChange={props.onCategoriesSelected}\r\n            colorScheme={props.colorScheme}\r\n            searchItem=\"Categories\"\r\n          />\r\n          <DropdownMenu\r\n            data={props.areas}\r\n            onChange={props.onAreasSelected}\r\n            colorScheme={props.colorScheme}\r\n            searchItem=\"Areas\"\r\n          />\r\n          <DropdownMenu\r\n            data={props.ingrToSelect}\r\n            onChange={props.onIngredientsSelected}\r\n            colorScheme={props.colorScheme}\r\n            searchItem=\"Ingredients\"\r\n          />\r\n        </Flex>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n","function resolvePromise(\r\n  promiseToResolve: Promise<any> | null,\r\n  promiseState: {\r\n    promise: any | null;\r\n    data: Object | null;\r\n    error: String | null;\r\n  },\r\n  notifyACB: (arg0: any) => void\r\n) {\r\n  promiseState.promise = promiseToResolve;\r\n  promiseState.data = null;\r\n  promiseState.error = null;\r\n\r\n  if (notifyACB) notifyACB(promiseState);\r\n  function saveDataACB(result: Object | null) {\r\n    if (promiseState.promise !== promiseToResolve) return;\r\n    promiseState.data = result;\r\n    if (notifyACB) notifyACB(promiseState);\r\n  }\r\n\r\n  function saveErrorACB(err: string) {\r\n    if (promiseState.promise !== promiseToResolve) return;\r\n    promiseState.error = err;\r\n    if (notifyACB) notifyACB(promiseState);\r\n  }\r\n  if (promiseToResolve !== null)\r\n    promiseToResolve.then(saveDataACB).catch(saveErrorACB);\r\n}\r\n\r\nexport default resolvePromise;\r\nexport { resolvePromise };\r\n","import React from \"react\";\r\nimport { ActivityIndicator } from \"react-native\";\r\n\r\nexport default function Loading() {\r\n  return <ActivityIndicator size=\"large\" color=\"#00ff00\" />;\r\n}\r\n","import { Text } from \"react-native\";\r\nimport React from \"react\";\r\nimport Loading from \"../components/loading\";\r\nexport default function promiseNoData(promise: any, data: any, error: any) {\r\n  if (!promise)\r\n    //no promise\r\n    //  return <Text> no data</Text>;\r\n    return false; //display default data\r\n  else {\r\n    if (!(data || error)) return <Loading />;\r\n\r\n    if (!data && error)\r\n      //promised, no data, with error\r\n      return <Text>{error.toString()}</Text>;\r\n\r\n    if (data && !error)\r\n      //promised, defined data, no error\r\n      return false;\r\n  }\r\n}\r\n","import { addFavourite, deleteFavourite } from \"../../dbSource\";\r\nimport { Dispatch } from \"react\";\r\nimport store from \"../store\";\r\n\r\nexport const addFav = (id: string) => {\r\n  return async (dispatch: Dispatch<addFav>) => {\r\n    dispatch({ type: \"ADD_TO_FAV\" });\r\n    addFavourite(id)\r\n      .then(() => dispatch({ type: \"ADD_TO_FAV_SUC\", payload: id }))\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"MANIPULATE_FAV_ERROR\",\r\n          payload: error.message,\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const deleteFav = (id: string) => {\r\n  return async (dispatch: Dispatch<deleteFav>) => {\r\n    var favs: Array<string> = store.getState().favourites[\"data\"];\r\n    if (favs.includes(id)) {\r\n      dispatch({ type: \"DELETE_FAV\" });\r\n      deleteFavourite(id)\r\n        .then(() => dispatch({ type: \"DELETE_FAV_SUC\", payload: id }))\r\n        .catch((error) => {\r\n          dispatch({\r\n            type: \"MANIPULATE_FAV_ERROR\",\r\n            payload: error,\r\n          });\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFavs = (favs: Array<string>) => {\r\n  return async (dispatch: Dispatch<setFavs>) => {\r\n    dispatch({ type: \"SET_FAVS\", payload: favs });\r\n  };\r\n};\r\nexport type addFav = {\r\n  readonly type: \"ADD_TO_FAV\" | \"ADD_TO_FAV_SUC\" | \"MANIPULATE_FAV_ERROR\";\r\n  payload?: any;\r\n};\r\nexport type deleteFav = {\r\n  readonly type: \"DELETE_FAV\" | \"DELETE_FAV_SUC\" | \"MANIPULATE_FAV_ERROR\";\r\n  payload?: any;\r\n};\r\nexport type setFavs = {\r\n  readonly type: \"SET_FAVS\";\r\n  payload: any;\r\n};\r\n","import React from \"react\";\r\nimport { IconButton } from \"@react-native-material/core\";\r\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport Loading from \"../components/loading\";\r\n\r\nexport default function FavBtnView(props: any) {\r\n  return props.loading ? (\r\n    <Loading />\r\n  ) : (\r\n    <IconButton\r\n      onPress={props.onClicked}\r\n      icon={() => (\r\n        <Icon\r\n          name={\"heart\"}\r\n          size={24}\r\n          color={props.addedToFav ? \"red\" : \"grey\"}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { addFav, deleteFav } from \"../redux/actions/favouritesActions\";\r\nimport { setSnackbar } from \"../redux\";\r\nimport React from \"react\";\r\nimport FavBtnView from \"../views/favBtnView\";\r\n\r\nexport default function FavouriteBtnPresenter(props: {\r\n  id: string;\r\n  colorScheme: any;\r\n}) {\r\n  const dispatch = useDispatch<any>();\r\n  const addedToFav = useSelector((state: any) =>\r\n    state.favourites.data.includes(props.id)\r\n  );\r\n  const loading = useSelector((state: any) => state.favourites.loading);\r\n  const user = useSelector((state: any) => state.user);\r\n  function favBtnClickedACB() {\r\n    if (!user)\r\n      dispatch(setSnackbar(\"Please log in to add your favourite recipes!\"));\r\n    else {\r\n      if (!addedToFav) dispatch(addFav(props.id));\r\n      else dispatch(deleteFav(props.id));\r\n    }\r\n  }\r\n  return (\r\n    <FavBtnView\r\n      colorScheme={props.colorScheme}\r\n      loading={loading}\r\n      onClicked={favBtnClickedACB}\r\n      addedToFav={addedToFav}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Image,\r\n  TextInput,\r\n  View,\r\n  ActivityIndicator,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {\r\n  Stack,\r\n  IconButton,\r\n  Flex,\r\n  Text,\r\n  Button,\r\n  HStack,\r\n  Wrap,\r\n} from \"@react-native-material/core\";\r\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FavouriteBtnPresenter from \"../presenters/favouriteBtnPresenter\";\r\n\r\nconst styles = (props: any) =>\r\n  StyleSheet.create({\r\n    dishcard: {\r\n      marginTop: 30,\r\n      height: \"auto\",\r\n      position: \"relative\",\r\n      alignContent: \"center\",\r\n      shadowColor: \"#363842\",\r\n      shadowOffset: { width: 0, height: 0 },\r\n      shadowOpacity: 0.2,\r\n      shadowRadius: 10,\r\n    },\r\n    dishcard__left: {\r\n      width: \"50%\",\r\n      // height: \"100%\",\r\n      backgroundColor: \"#faf089\",\r\n      borderTopLeftRadius: 10,\r\n      borderBottomLeftRadius: 10,\r\n    },\r\n    dishcard__right: {\r\n      width: \"50%\",\r\n      minHeight: 200,\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#2F2F2F\" : \"#FDFBF7\",\r\n      border: \"1px solid #606770\",\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n    },\r\n    dishcard__right__details: {\r\n      margin: 0,\r\n      width: \"70%\",\r\n      height: \"100%\",\r\n      padding: 10,\r\n    },\r\n    dishcard__right__details__header: {\r\n      marginBottom: 10,\r\n      fontWeight: \"bold\",\r\n      color: \"#8D909B\",\r\n    },\r\n    dishcard__right__details__tags: {\r\n      width: \"80%\",\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    dishcard__right__details__tags__tag: {\r\n      width: \"auto\",\r\n      backgroundColor: \"#8D909B\",\r\n      borderRadius: 15,\r\n      marginRight: 20,\r\n      marginBottom: 5,\r\n      marginTop: 5,\r\n      padding: 5,\r\n      fontSize: 9,\r\n    },\r\n  });\r\nexport default function DishCard(props: any) {\r\n  // const addedToFav = useSelector((state: any) =>\r\n  //   state.favourites.includes(props.idMeal)\r\n  // );\r\n  const dispatch = useDispatch<any>();\r\n\r\n  function renderArrayCB(tag: any) {\r\n    return (\r\n      <Text style={styles(props).dishcard__right__details__tags__tag} key={tag}>\r\n        {tag}\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <TouchableOpacity onPress={props.onSelectedRecipe}>\r\n      <HStack spacing={0} style={styles(props).dishcard}>\r\n        {props.data.strMealThumb && (\r\n          <Image\r\n            style={styles(props).dishcard__left}\r\n            source={{ uri: props.data.strMealThumb }}\r\n          ></Image>\r\n        )}\r\n        {!props.data.strMealThumb && (\r\n          <Image\r\n            style={styles(props).dishcard__left}\r\n            source={require(\"../styles/notFoundImage.png\")}\r\n          ></Image>\r\n        )}\r\n        <HStack style={styles(props).dishcard__right}>\r\n          <View style={styles(props).dishcard__right__details}>\r\n            <Text style={styles(props).dishcard__right__details__header}>\r\n              {props.data.strMeal}\r\n            </Text>\r\n            <Text style={styles(props).dishcard__right__details__tags}>\r\n              {props.data.strTags &&\r\n                props.data.strTags.split(\",\").map(renderArrayCB)}\r\n            </Text>\r\n          </View>\r\n          <FavouriteBtnPresenter\r\n            colorScheme={props.colorScheme}\r\n            id={props.data.idMeal}\r\n          />\r\n        </HStack>\r\n      </HStack>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DishCard from \"../components/dishCard\";\r\n\r\nexport default function DishCardPresenter(props: {\r\n  navigation: { navigate: (arg0: string, arg1: { recipe: any }) => void };\r\n  data: any;\r\n  colorScheme: any;\r\n}) {\r\n  function setCurrentRecipeACB() {\r\n    props.navigation.navigate(\"Recipe\", { recipe: props.data });\r\n  }\r\n  return (\r\n    <DishCard\r\n      data={props.data}\r\n      onSelectedRecipe={setCurrentRecipeACB}\r\n      colorScheme={props.colorScheme}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, ScrollView, ActivityIndicator, Text } from \"react-native\";\r\nimport { Flex } from \"@react-native-material/core\";\r\nimport DishCard from \"../components/dishCard\";\r\nimport Search from \"../components/search\";\r\nimport Header from \"../components/header\";\r\nimport DishCardPresenter from \"../presenters/dishCardPresenter\";\r\n\r\nconst styles = (props: any) => StyleSheet.create({\r\n  mainContainer: {\r\n    position: \"relative\",\r\n    padding: 10,\r\n    // top: 0,\r\n    width: \"100%\",\r\n    // position: \"absolute\",\r\n    paddingTop: 10,\r\n    alignContent: \"center\",\r\n  },\r\n  mainContainer_button: {\r\n    width: 155,\r\n    height: 60,\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    borderRadius: 300,\r\n  },\r\n  mainContainer_filters: {\r\n    borderRadius: 10,\r\n    padding: 0,\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    overflowX: \"auto\",\r\n  },\r\n  textInput: {\r\n    marginBottom: 10,\r\n    borderRadius: 10,\r\n    width: \"100%\",\r\n    height: 45,\r\n    paddingLeft: 10,\r\n    fontStyle: \"italic\",\r\n  },\r\n  topRecipes: {\r\n    backgroundColor: props.colorScheme == \"dark\" ? \"black\" : \"#8D909B\",\r\n    borderRadius: 30,\r\n    overflow: 'hidden',\r\n    height: \"auto\",\r\n    color: \"white\",\r\n    padding: 20,\r\n  },\r\n});\r\nexport default function ResultsView(props: any) {\r\n  return (\r\n    <ScrollView style={styles(props).mainContainer}>\r\n      <Flex fill>\r\n        {props.header ? <Text style={styles(props).topRecipes}>{props.header}</Text> : null}\r\n        {props.loading ? (\r\n          <ActivityIndicator size=\"large\" color=\"#00ff00\" />\r\n        ) : null}\r\n\r\n        {props.results.map((r: any) => (\r\n          <DishCardPresenter\r\n            key={r.idMeal}\r\n            data={r}\r\n            navigation={props.navigation}\r\n            onClicked={props.onSelectedRecipe}\r\n            colorScheme={props.colorScheme}\r\n          />\r\n        ))}\r\n      </Flex>\r\n    </ScrollView>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport SearchView from \"../views/searchView\";\r\nimport { filterMeals, getAllFilterData } from \"../mealSouce\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\nimport resolvePromise from \"../resolvePromise\";\r\nimport { promiseStateType } from \"../types\";\r\nimport { RootTabScreenProps } from \"../types\";\r\nimport promiseNoData from \"../views/promiseNoData\";\r\nimport ResultsView from \"../views/resultsView\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Flex } from \"@react-native-material/core\";\r\nimport { getTopFavourites } from \"../dbSource\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSnackbar } from \"../redux\";\r\n\r\nexport default function SearchPresenter({\r\n  navigation,\r\n}: RootTabScreenProps<\"Search\">) {\r\n  const dispatch = useDispatch<any>();\r\n\r\n  const [categories, setCategoriesState] = useState([]);\r\n  const [areas, setAreasState] = useState([]);\r\n  const [ingredients, setIngredientsState] = useState([]);\r\n\r\n  const [selectedCategories, setSelectedCategories] = useState<Array<string>>(\r\n    []\r\n  );\r\n  const [selectedAreas, setSelectedAreas] = useState<Array<string>>([]);\r\n  const [selectedIngredients, setSelectedIngredients] = useState<Array<string>>(\r\n    []\r\n  );\r\n  const [query, setQueryState] = useState(\"\");\r\n  const [results, setResultsState] = useState([]);\r\n  const [topFavs, setTopFavs] = React.useState<Array<any>>([]);\r\n  const [topFavsLoading, setTopFavsLoading] = React.useState<boolean>();\r\n\r\n  const [mealsPromiseState, setMealsPromiseState] = useState<promiseStateType>({\r\n    promise: null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n  const [promise, setPromise] = React.useState<any>();\r\n  const [data, setData] = React.useState<any>();\r\n  const [error, setError] = React.useState<any>();\r\n\r\n  const colorScheme = useColorScheme();\r\n\r\n  React.useEffect(() => {\r\n    getAllFilterData()\r\n      .then((res) => {\r\n        setCategoriesState(\r\n          res[0].data.map((elem: { strCategory: string }) => ({\r\n            label: elem.strCategory,\r\n            value: elem.strCategory,\r\n          }))\r\n        );\r\n        setAreasState(\r\n          res[1].data.map((elem: { strArea: string }) => ({\r\n            label: elem.strArea,\r\n            value: elem.strArea,\r\n          }))\r\n        );\r\n        setIngredientsState(\r\n          res[2].data.map((elem: { strIngredient: string }) => ({\r\n            label: elem.strIngredient,\r\n            value: elem.strIngredient,\r\n          }))\r\n        );\r\n      })\r\n      .catch((error) =>\r\n        dispatch(\r\n          setSnackbar(\r\n            \"Could not fetch filter values from server: \" + error.message\r\n          )\r\n        )\r\n      );\r\n    setTopFavsLoading(true);\r\n    getTopFavourites()\r\n      .then((res) => {\r\n        setTopFavs(res.data);\r\n        setTopFavsLoading(false);\r\n      })\r\n      .catch((error) =>\r\n        dispatch(\r\n          setSnackbar(\r\n            \"Could not fetch top favourites from server: \" + error.message\r\n          )\r\n        )\r\n      );\r\n  }, []);\r\n\r\n  function onSearchACB() {\r\n    setResultsState([]);\r\n    setPromise(null);\r\n    setData(null);\r\n    setError(null);\r\n    resolvePromise(\r\n      filterMeals(\r\n        selectedCategories,\r\n        selectedAreas,\r\n        selectedIngredients,\r\n        query\r\n      ),\r\n      mealsPromiseState,\r\n      mealPromiseStateChanged\r\n    );\r\n  }\r\n  function mealPromiseStateChanged(result: promiseStateType) {\r\n    setMealsPromiseState(result);\r\n    setPromise(result.promise);\r\n    setData(result.data);\r\n    setError(result.error);\r\n    if (result.data && result.data.data) setResultsState(result.data.data);\r\n  }\r\n  return (\r\n    <Flex style={styles(colorScheme).mainContainer}>\r\n      <SearchView\r\n        categories={categories}\r\n        areas={areas}\r\n        ingrToSelect={ingredients}\r\n        query={query}\r\n        onCategoriesSelected={setSelectedCategories}\r\n        onAreasSelected={setSelectedAreas}\r\n        onIngredientsSelected={setSelectedIngredients}\r\n        onQueryChanged={setQueryState}\r\n        onSearch={onSearchACB}\r\n        colorScheme={colorScheme}\r\n      ></SearchView>\r\n\r\n      {promiseNoData(promise, data, error) ||\r\n        (results && results.length > 0 ? (\r\n          <ResultsView \r\n            results={results} \r\n            navigation={navigation} \r\n            colorScheme={colorScheme}/>\r\n        ) : (\r\n          <ResultsView\r\n            header=\"No data was found :( But you can get inspired by the Top Favourites of other users:\"\r\n            loading={topFavsLoading}\r\n            results={topFavs}\r\n            navigation={navigation}\r\n            colorScheme={colorScheme}\r\n          />\r\n        ))}\r\n    </Flex>\r\n  );\r\n}\r\n\r\nconst styles = (colorScheme: any) => StyleSheet.create({\r\n  mainContainer: {\r\n    backgroundColor: colorScheme == \"dark\" ? \"#18191A\" : \"#F3F2E9\",\r\n    padding: 10,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    paddingTop: 0,\r\n    alignContent: \"center\",\r\n  },\r\n});\r\n","import axios from \"axios\";\r\n\r\nfunction getRandomMeal() {\r\n  return axios.get(\"api/randomMeal\");\r\n}\r\nfunction getMealsDetails(ids: Array<String>) {\r\n  return axios.post(\"api/mealsDetails\", {\r\n    ids: ids,\r\n  });\r\n}\r\nfunction getCategories() {\r\n  return axios.get(\"api/categories\");\r\n}\r\nfunction getAreas() {\r\n  return axios.get(\"api/areas\");\r\n}\r\nfunction getIngredients() {\r\n  return axios.get(\"api/ingredients\");\r\n}\r\nfunction getAllFilterData() {\r\n  return axios.all([getCategories(), getAreas(), getIngredients()]);\r\n}\r\nfunction filterMeals(\r\n  categories: Array<string>,\r\n  areas: Array<string>,\r\n  ingredients: Array<string>,\r\n  query: string\r\n) {\r\n  return axios.post(\"api/filterMeals\", {\r\n    categories: categories,\r\n    areas: areas,\r\n    ingredients: ingredients,\r\n    query: query,\r\n  });\r\n}\r\n\r\nexport {\r\n  getRandomMeal,\r\n  getMealsDetails,\r\n  getCategories,\r\n  getAreas,\r\n  getIngredients,\r\n  filterMeals,\r\n  getAllFilterData,\r\n};\r\n","import { addIngredient, deleteIngredient } from \"../../dbSource\";\r\nimport { Dispatch } from \"react\";\r\nimport store from \"../store\";\r\n\r\nexport const addIngr = (ingredient: any) => {\r\n  return async (dispatch: Dispatch<addIng>) => {\r\n    dispatch({ type: \"ADD_TO_INGR\" });\r\n    addIngredient(ingredient)\r\n      .then(() => {\r\n        dispatch({ type: \"ADD_TO_INGR_SUC\", payload: ingredient });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: \"MANIPULATE_INGR_ERROR\",\r\n          payload: error.message,\r\n        });\r\n      });\r\n  };\r\n};\r\nexport const deleteIngr = (ingredient: any) => {\r\n  return async (dispatch: Dispatch<deleteIng>) => {\r\n    var ingrs: Array<string> = store.getState().ingredients[\"data\"];\r\n    if (ingrs.includes(ingredient)) {\r\n      dispatch({ type: \"DELETE_INGR\" });\r\n      deleteIngredient(ingredient)\r\n        .then(() => dispatch({ type: \"DELETE_INGR_SUC\", payload: ingredient }))\r\n        .catch((error) => {\r\n          dispatch({\r\n            type: \"MANIPULATE_INGR_ERROR\",\r\n            payload: error,\r\n          });\r\n        });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setIngrs = (ingrs: Array<string>) => {\r\n  return async (dispatch: Dispatch<setIngrs>) => {\r\n    dispatch({ type: \"SET_INGRS\", payload: ingrs });\r\n  };\r\n};\r\nexport type addIng = {\r\n  readonly type: \"ADD_TO_INGR\" | \"ADD_TO_INGR_SUC\" | \"MANIPULATE_INGR_ERROR\";\r\n  payload?: any;\r\n};\r\nexport type deleteIng = {\r\n  readonly type: \"DELETE_INGR\" | \"DELETE_INGR_SUC\" | \"MANIPULATE_INGR_ERROR\";\r\n  payload?: any;\r\n};\r\nexport type setIngrs = {\r\n  readonly type: \"SET_INGRS\";\r\n  payload: any;\r\n};\r\n","import React from \"react\";\r\nimport { Image, StyleSheet } from \"react-native\";\r\nimport { IconButton, ListItem } from \"@react-native-material/core\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nexport default function IngredientItem(props: {\r\n  name: string;\r\n  quantity: string;\r\n  colorScheme: any;\r\n  showQuantity: boolean;\r\n  added: boolean;\r\n  onBtnClicked: any;\r\n}) {\r\n  let Image_Http_URL = {\r\n    uri:\r\n      \"https://www.themealdb.com/images/ingredients/\" +\r\n      props.name +\r\n      \"-Small.png\",\r\n  };\r\n  return (\r\n    <ListItem\r\n      onPress={props.onBtnClicked}\r\n      style={styles(props).listItemPressed}\r\n      leading={\r\n        <Image source={Image_Http_URL} style={styles(props).imageIngr} />\r\n      }\r\n      title={props.name + (props.showQuantity ? \": \" + props.quantity : \"\")}\r\n      key={props.name}\r\n      trailing={() => (\r\n        <IconButton\r\n          onPress={props.onBtnClicked}\r\n          icon={() => (\r\n            <MaterialIcons\r\n              name={props.added ? \"remove-shopping-cart\" : \"add-shopping-cart\"}\r\n              size={24}\r\n              color={props.added ? \"red\" : \"green\"}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\nconst styles = (props: any) =>\r\n  StyleSheet.create({\r\n    listItem: {\r\n      color: props.colorScheme == \"dark\" ? \"black\" : \"white\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"black\" : \"white\",\r\n      borderRadius: 10,\r\n    },\r\n    listItemPressed: {\r\n      color: props.colorScheme == \"dark\" ? \"#0548EE\" : \"#9BB3EE\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#040507\" : \"#083EC4\",\r\n      borderRadius: 10,\r\n    },\r\n    imageIngr: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n  });\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { setSnackbar } from \"../redux\";\r\nimport React from \"react\";\r\nimport { addIngr, deleteIngr } from \"../redux/actions/ingredientsActions\";\r\nimport IngredientItem from \"../components/ingredientItem\";\r\n\r\nexport default function IngredientItemPresenter(props: {\r\n  name: string;\r\n  quantity: string;\r\n  colorScheme: any;\r\n  showQuantity: boolean;\r\n}) {\r\n  const dispatch = useDispatch<any>();\r\n  const addedToList = useSelector((state: any) =>\r\n    state.ingredients.data.includes(props.name)\r\n  );\r\n  const user = useSelector((state: any) => state.user);\r\n  function btnClickedACB() {\r\n    if (!user)\r\n      dispatch(\r\n        setSnackbar(\"Please log in to add groceries to your shopping list!\")\r\n      );\r\n    else {\r\n      if (!addedToList) dispatch(addIngr(props.name));\r\n      else dispatch(deleteIngr(props.name));\r\n    }\r\n  }\r\n  return (\r\n    <IngredientItem\r\n      name={props.name}\r\n      quantity={props.quantity}\r\n      colorScheme={props.colorScheme}\r\n      showQuantity={props.showQuantity}\r\n      added={addedToList}\r\n      onBtnClicked={btnClickedACB}\r\n    />\r\n  );\r\n}\r\n","import { Flex, Text, ListItem } from \"@react-native-material/core\";\r\nimport React from \"react\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { StyleSheet, Image, TextInput, View, ScrollView } from \"react-native\";\r\nimport FavouriteBtnPresenter from \"../presenters/favouriteBtnPresenter\";\r\nimport IngredientItem from \"../components/ingredientItem\";\r\nimport IngredientItemPresenter from \"../presenters/ingredientItemPresenter\";\r\n\r\nconst styles = (props: any) =>\r\n  StyleSheet.create({\r\n    image: {\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: 210,\r\n    },\r\n    details: {\r\n      width: \"100%\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#18191A\" : \"#FDFBF7\",\r\n      borderTopLeftRadius: 15,\r\n      borderTopRightRadius: 15,\r\n      padding: 20,\r\n    },\r\n    header: {\r\n      marginTop: 20,\r\n      fontWeight: \"700\",\r\n      fontSize: 32,\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n    },\r\n    subheader: {\r\n      marginTop: 20,\r\n      fontWeight: \"700\",\r\n      fontSize: 16,\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n    },\r\n    text: {\r\n      fontWeight: \"400\",\r\n      fontSize: 14,\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n    },\r\n    imageIngr: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    details_header: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      padding: 10,\r\n      gap: \"auto\",\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n    },\r\n    /*listItem:{\r\n    color: props.colorScheme == \"dark\" ? \"#313237\" : \"#0548EE\",\r\n    backgroundColor: props.colorScheme == \"dark\" ? \"#313237\" : \"FDFBF7\",\r\n    borderRadius: 10,\r\n  },*/\r\n    listItem: {\r\n      color: props.colorScheme == \"dark\" ? \"black\" : \"white\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"black\" : \"white\",\r\n      borderRadius: 10,\r\n    },\r\n    listItemPressed: {\r\n      color: props.colorScheme == \"dark\" ? \"#0548EE\" : \"#9BB3EE\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#040507\" : \"#083EC4\",\r\n      borderRadius: 10,\r\n    },\r\n    tags: {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    tag: {\r\n      width: \"auto\",\r\n      backgroundColor: \"#8D909B\",\r\n      borderRadius: 15,\r\n      marginRight: 20,\r\n      marginBottom: 5,\r\n      marginTop: 5,\r\n      padding: 5,\r\n      fontSize: 12,\r\n    },\r\n    mainContainer: {\r\n      height: \"100%\",\r\n    },\r\n  });\r\n\r\nexport default function RecipeView(props: any) {\r\n  function renderArrayCB(ingredient: any) {\r\n    return (\r\n      <IngredientItemPresenter\r\n        name={ingredient.name}\r\n        quantity={ingredient.quantity}\r\n        colorScheme={props.colorScheme}\r\n        showQuantity={true}\r\n        key={ingredient.name + ingredient.quantity}\r\n      />\r\n    );\r\n  }\r\n  function renderTagsArrayCB(tag: any) {\r\n    return (\r\n      <Text style={styles(props).tag} key={tag}>\r\n        {tag}\r\n      </Text>\r\n    );\r\n  }\r\n  return (\r\n    <View style={styles(props).mainContainer}>\r\n      <ScrollView vertical={true}>\r\n        <Flex fill direction=\"column\">\r\n          {props.recipe.strMealThumb && (\r\n            <Image\r\n              style={styles(props).image}\r\n              source={{ uri: props.recipe.strMealThumb }}\r\n            ></Image>\r\n          )}\r\n          {!props.recipe.strMealThumb && (\r\n            <Image\r\n              style={styles(props).image}\r\n              source={require(\"../styles/notFoundImage.png\")}\r\n            ></Image>\r\n          )}\r\n          <Flex direction=\"column\" style={styles(props).details}>\r\n            <View style={styles(props).details_header}>\r\n              <Text style={styles(props).header}>{props.recipe.strMeal}</Text>\r\n              <FavouriteBtnPresenter\r\n                colorScheme={props.colorScheme}\r\n                id={props.recipe.idMeal}\r\n              />\r\n            </View>\r\n            <Text style={styles(props).tags}>\r\n              {props.recipe.strTags &&\r\n                props.recipe.strTags.split(\",\").map(renderTagsArrayCB)}\r\n              <Text style={styles(props).tag} key={props.recipe.strArea}>\r\n                {props.recipe.strArea}\r\n              </Text>\r\n            </Text>\r\n            <Text style={styles(props).subheader}>What do you need?</Text>\r\n            <View style={styles(props).listItem}>\r\n              <Flex direction=\"column\">\r\n                {props.recipe.ingredients &&\r\n                  props.recipe.ingredients.map(renderArrayCB)}\r\n              </Flex>\r\n            </View>\r\n            <Text style={styles(props).subheader}>How to make it?</Text>\r\n            <Text style={styles(props).text}>\r\n              {props.recipe.strInstructions}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport RecipeView from \"../views/recipeView\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\n\r\nexport default function RecipePresenter({ route }: any, props: any) {\r\n  const { recipe } = route.params;\r\n  const colorScheme = useColorScheme();\r\n\r\n  return <RecipeView recipe={recipe} colorScheme={colorScheme} />;\r\n}\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from \"@react-navigation/native\";\r\nimport * as Linking from \"expo-linking\";\r\n\r\nimport { RootStackParamList } from \"../types\";\r\n\r\nconst linking: LinkingOptions<RootStackParamList> = {\r\n  prefixes: [Linking.createURL(\"/\")],\r\n  config: {\r\n    screens: {\r\n      Root: {\r\n        screens: {\r\n          TabOne: {\r\n            screens: {\r\n              TabOneScreen: \"AdvancedInteractionProgramming\",\r\n            },\r\n          },\r\n          TabTwo: {\r\n            screens: {\r\n              TabTwoScreen: \"two\",\r\n            },\r\n          },\r\n          TabThree: {\r\n            screens: {\r\n              TabThreeScreen: \"three\",\r\n            },\r\n          },\r\n          TabFour: {\r\n            screens: {\r\n              TabFourScreen: \"four\",\r\n            },\r\n          },\r\n          TabFive: {\r\n            screens: {\r\n              TabFiveScreen: \"five\",\r\n            },\r\n          },\r\n          TabSix: {\r\n            screens: {\r\n              TabSixScreen: \"six\",\r\n            },\r\n          },\r\n          TabSeven: {\r\n            screens: {\r\n              TabFourScreen: \"seven\",\r\n            },\r\n          },\r\n          TabEight: {\r\n            screens: {\r\n              TabFourEight: \"eight\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      Modal: \"modal\",\r\n      NotFound: \"*\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default linking;\r\n","import React from \"react\";\r\nimport { View, Image, StyleSheet } from \"react-native\";\r\nimport { Text } from \"../components/Themed\";\r\n\r\nexport default function NoResultsView(props: {\r\n  text: string;\r\n  colorScheme: any;\r\n}) {\r\n  return (\r\n    <View style={styles(props).modalView}>\r\n      <Text style={styles(props).messageText}>{props.text}</Text>\r\n      <Image\r\n        style={styles(props).image}\r\n        source={require(\"../styles/notfound.png\")}\r\n      ></Image>\r\n    </View>\r\n  );\r\n}\r\nconst styles = (props: any) =>\r\n  StyleSheet.create({\r\n    image: {\r\n      width: 200,\r\n      height: 150,\r\n      left: 0,\r\n      top: \"20%\",\r\n    },\r\n\r\n    modalText: {\r\n      marginBottom: 15,\r\n      textAlign: \"center\",\r\n    },\r\n    modalView: {\r\n      margin: 20,\r\n      marginTop: 100,\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#313237\" : \"FDFBF7\",\r\n      borderRadius: 20,\r\n      padding: 35,\r\n      alignItems: \"center\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 0,\r\n      },\r\n      shadowOpacity: 0.1,\r\n      shadowRadius: 10,\r\n      elevation: 5,\r\n    },\r\n    messageText: {\r\n      fontWeight: \"bold\",\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n    },\r\n  });\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getMealsDetails } from \"../mealSouce\";\r\nimport { setSnackbar } from \"../redux\";\r\nimport { RootTabScreenProps } from \"../types\";\r\nimport ResultsView from \"../views/resultsView\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\nimport NoResultsView from \"../views/noResultsView\";\r\nimport Loading from \"../components/loading\";\r\n\r\nexport default function FavouritesPresenter({\r\n  navigation,\r\n}: RootTabScreenProps<\"Favourites\">) {\r\n  const dispatch = useDispatch<any>();\r\n  const favourites = useSelector((state: any) => state.favourites.data);\r\n  const [loading, setLoadingState] = React.useState<boolean>();\r\n  const [favouritesDetails, setFavouritesDetails] = React.useState<Array<any>>(\r\n    []\r\n  );\r\n  const colorScheme = useColorScheme();\r\n\r\n  React.useEffect(() => {\r\n    setLoadingState(true);\r\n    getMealsDetails(favourites)\r\n      .then((res) => {\r\n        setFavouritesDetails(res.data);\r\n        setLoadingState(false);\r\n      })\r\n      .catch((e) => {\r\n        setLoadingState(false);\r\n        dispatch(\r\n          setSnackbar(\r\n            \"Something went wrong fetching your favourites from the server: \" +\r\n              e.message\r\n          )\r\n        );\r\n      });\r\n  }, [favourites]);\r\n\r\n  return favouritesDetails.length > 0 ? (\r\n    <ResultsView\r\n      results={favouritesDetails}\r\n      navigation={navigation}\r\n      colorScheme={colorScheme}\r\n    />\r\n  ) : loading ? (\r\n    <Loading />\r\n  ) : (\r\n    <NoResultsView\r\n      text=\"You don't have any favourites yet!\"\r\n      colorScheme={colorScheme}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, ScrollView } from \"react-native\";\r\nimport { Flex } from \"@react-native-material/core\";\r\n\r\nimport IngredientItemPresenter from \"../presenters/ingredientItemPresenter\";\r\nimport NoResultsView from \"./noResultsView\";\r\n\r\nconst styles = (props: any) =>\r\n  StyleSheet.create({\r\n    mainContianer: {\r\n      height: \"100%\",\r\n    },\r\n    listItem: {\r\n      color: props.colorScheme == \"dark\" ? \"#313237\" : \"##0548EE\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#313237\" : \"FDFBF7\",\r\n      padding: 10,\r\n    },\r\n    listItemPressed: {\r\n      color: props.colorScheme == \"dark\" ? \"#0548EE\" : \"#9BB3EE\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#040507\" : \"#083EC4\",\r\n      padding: 10,\r\n    },\r\n    details: {\r\n      width: \"100%\",\r\n\r\n      color: props.colorScheme == \"dark\" ? \"#313237\" : \"##0548EE\",\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#313237\" : \"FDFBF7\",\r\n      height: \"100%\",\r\n      padding: 10,\r\n    },\r\n    text: {\r\n      marginTop: 20,\r\n      fontWeight: \"700\",\r\n      fontSize: 14,\r\n      backgroundColor: props.colorScheme == \"dark\" ? \"#313237\" : \"FDFBF7\",\r\n      color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n      padding: 10,\r\n    },\r\n  });\r\n\r\nexport default function GroceryListView(props: any) {\r\n  function renderListCB(ingredient: any) {\r\n    return (\r\n      <IngredientItemPresenter\r\n        style={styles(props).text}\r\n        name={ingredient}\r\n        quantity={\"\"}\r\n        colorScheme={props.colorScheme}\r\n        showQuantity={false}\r\n        key={ingredient}\r\n      />\r\n    );\r\n  }\r\n\r\n  return props.ingredients.length > 0 ? (\r\n    <ScrollView style={styles(props).mainContianer}>\r\n      <Text style={styles(props).text}>What do you need to buy?</Text>\r\n      <Flex direction=\"column\" style={styles(props).listItem}>\r\n        {props.ingredients && props.ingredients.map(renderListCB)}\r\n      </Flex>\r\n    </ScrollView>\r\n  ) : (\r\n    <NoResultsView\r\n      colorScheme={props.colorScheme}\r\n      text={\"The list is empty. Add ingredients to buy!\"}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GroceryListView from \"../views/groceryListView\";\r\nimport { useColorScheme } from \"react-native\";\r\n\r\nexport default function GroceryListPresenter() {\r\n  const ingredients = useSelector((state: any) => state.ingredients.data);\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <GroceryListView ingredients={ingredients} colorScheme={colorScheme} />\r\n  );\r\n}","import { Flex, Text, ListItem, Box, Avatar } from \"@react-native-material/core\";\r\nimport React from \"react\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { StyleSheet, Image, TextInput, View, Button } from \"react-native\";\r\nimport { white } from \"react-native-paper/lib/typescript/styles/colors\";\r\n\r\nconst styles = (props: any) => StyleSheet.create({\r\n    mainComponents:{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: props.colorScheme == \"dark\" ? \"#18191A\" : \"#FDFBF7\",\r\n        fontColor: props.colorScheme == \"dark\" ? \"white\" : \"#314959\",\r\n        alignItems: \"center\",\r\n        paddingTop: 200,\r\n        gap: 20,\r\n    },\r\n    email:{\r\n        width: 264,\r\n        height: 45,\r\n        borderColor: props.colorScheme == \"dark\" ? \"#FDFBF7\" : \"#314959\",\r\n        borderWidth: 2,\r\n        fontColor: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n        color: props.colorScheme == \"dark\" ? \"white\" : \"black\",\r\n        backgroundColor: \"#FDFBF7\",\r\n        borderRadius: 10,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        padding: 20,\r\n        margin: 20,\r\n    },\r\n    profile_button:{\r\n        backgroundColor: props.colorScheme == \"dark\" ? \"#FDFBF7\" : \"#314959\",\r\n        color: props.colorScheme == \"dark\" ? \"#314959\" : \"#FDFBF7\",\r\n    },\r\n    profile_text:{\r\n        margin: 20,\r\n        color: \"grey\",\r\n    }\r\n});\r\n\r\nexport default function ProfileView(props: any) {\r\n    return (\r\n        <Flex fill style={styles(props).mainComponents}>\r\n            <Avatar label={props.name} size={100} />\r\n                <Text style={styles(props).profile_text}>\r\n                Email: {props.name}\r\n                </Text>\r\n            <Button\r\n                title=\"Logout\"\r\n                // color= {props.colorScheme == \"dark\" ? \"#FDFBF7\" : \"#FDFBF7\"}\r\n                onPress={props.handleLogout}\r\n                style={styles(props).profile_button}\r\n            />\r\n        </Flex>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ProfileView from \"../views/profileView\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteUserData } from \"../redux\";\r\nimport useColorScheme from \"../hooks/useColorScheme\";\r\n\r\nexport default function ProfilePresenter() {\r\n  const user = useSelector((state: any) => state.user);\r\n  const colorScheme = useColorScheme();\r\n  const dispatch = useDispatch<any>();\r\n\r\n  function handleLogoutACB() {\r\n    dispatch(deleteUserData());\r\n  }\r\n\r\n  return (\r\n    <ProfileView\r\n      name={user}\r\n      colorScheme={colorScheme}\r\n      handleLogout={handleLogoutACB}\r\n    />\r\n  );\r\n}\r\n","/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\n import { FontAwesome } from \"@expo/vector-icons\";\r\n import { MaterialIcons } from \"@expo/vector-icons\";\r\n import { MaterialCommunityIcons } from '@expo/vector-icons'; \r\n import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n import {\r\n   NavigationContainer,\r\n   DefaultTheme,\r\n   DarkTheme,\r\n } from \"@react-navigation/native\";\r\n import { Flex } from \"@react-native-material/core\";\r\n import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n import * as React from \"react\";\r\n import { ColorSchemeName, Pressable, Text, View } from \"react-native\";\r\n \r\n import Colors from \"../constants/Colors\";\r\n import useColorScheme from \"../hooks/useColorScheme\";\r\n import ModalPresenter from \"../presenters/modalPresenter\";\r\n import NotFoundScreen from \"../views/notFoundView\";\r\n import LoginPresenter from \"../presenters/loginPresenter\";\r\n import RegistrationPresenter from \"../presenters/registrationPresenter\";\r\n import SearchPresenter from \"../presenters/searchPresenter\";\r\n import RecipePresenter from \"../presenters/recipePresenter\";\r\n import {\r\n   RootStackParamList,\r\n   RootTabParamList,\r\n   RootTabScreenProps,\r\n } from \"../types\";\r\n import LinkingConfiguration from \"./LinkingConfiguration\";\r\n import { login } from \"../loginSource\";\r\n import FavouritesPresenter from \"../presenters/favourtiesPresenter\";\r\n import GroceryListPresenter from \"../presenters/groceryListPresenter\";\r\n import { useDispatch, useSelector } from \"react-redux\";\r\n import { setSnackbar } from \"../redux\";\r\n import { Octicons } from \"@expo/vector-icons\";\r\nimport ProfilePresenter from \"../presenters/profilePresenter\";\r\n \r\n export default function Navigation({\r\n   colorScheme,\r\n }: {\r\n   colorScheme: ColorSchemeName;\r\n }) {\r\n   return (\r\n     <NavigationContainer\r\n       linking={LinkingConfiguration}\r\n       theme={colorScheme === \"dark\" ? DarkTheme : DefaultTheme}\r\n     >\r\n       <RootNavigator />\r\n     </NavigationContainer>\r\n   );\r\n }\r\n \r\n /**\r\n  * A root stack navigator is often used for displaying modals on top of all other content.\r\n  * https://reactnavigation.org/docs/modal\r\n  */\r\n const Stack = createNativeStackNavigator<RootStackParamList>();\r\n \r\n function RootNavigator() {\r\n   const user = useSelector((state: any) => state.user);\r\n \r\n   return (\r\n     <Stack.Navigator>\r\n       <Stack.Screen\r\n         name=\"Root\"\r\n         component={BottomTabNavigator}\r\n         options={{ headerShown: false }}\r\n       />\r\n \r\n       <Stack.Screen\r\n         name=\"NotFound\"\r\n         component={NotFoundScreen}\r\n         options={{ title: \"Oops!\" }}\r\n       />\r\n       <Stack.Screen\r\n         name=\"Favourites\"\r\n         component={user != \"\" ? FavouritesPresenter : LoginPresenter}\r\n       />\r\n       <Stack.Screen name=\"Login\" component={LoginPresenter} />\r\n       <Stack.Screen name=\"Registration\" component={RegistrationPresenter} />\r\n       <Stack.Screen name=\"Recipe\" component={RecipePresenter} />\r\n       <Stack.Group screenOptions={{ presentation: \"modal\" }}>\r\n         <Stack.Screen name=\"Modal\" component={ModalPresenter} />\r\n       </Stack.Group>\r\n     </Stack.Navigator>\r\n   );\r\n }\r\n \r\n /**\r\n  * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\r\n  * https://reactnavigation.org/docs/bottom-tab-navigator\r\n  */\r\n const BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n \r\n function BottomTabNavigator() {\r\n   const user = useSelector((state: any) => state.user);\r\n   const dispatch = useDispatch<any>();\r\n \r\n   const colorScheme = useColorScheme();\r\n \r\n   return (\r\n     <BottomTab.Navigator\r\n       initialRouteName=\"TabOne\"\r\n       screenOptions={{\r\n         tabBarActiveTintColor: Colors[colorScheme].tint,\r\n       }}\r\n     >\r\n      <BottomTab.Screen\r\n         name=\"Profile\"\r\n         component={user ? ProfilePresenter : LoginPresenter}\r\n         options={{\r\n           title: \"Profile\",\r\n           tabBarIcon: ({ color }) => (\r\n             <TabBarIcon name=\"code\" color={color} tabName=\"Profile\" />\r\n           ),\r\n         }}\r\n       />\r\n       <BottomTab.Screen\r\n         name=\"Search\"\r\n         component={SearchPresenter} //Search\r\n         options={{\r\n           title: \"Search\",\r\n           tabBarIcon: ({ color }) => (\r\n             <TabBarIcon name=\"code\" color={color} tabName=\"Search\" />\r\n           ),\r\n         }}\r\n       />\r\n       <BottomTab.Screen\r\n         name=\"Favourties\"\r\n         component={user ? FavouritesPresenter : LoginPresenter}\r\n         listeners={{\r\n           tabPress: (e) => {\r\n             if (!user)\r\n               dispatch(setSnackbar(\"Please login to see your favourites\"));\r\n           },\r\n         }}\r\n         options={{\r\n           title: \"Favorites\",\r\n           tabBarIcon: ({ color }) => (\r\n             <TabBarIcon name=\"code\" color={color} tabName=\"Favorites\" />\r\n           ),\r\n         }}\r\n       />\r\n \r\n       <BottomTab.Screen\r\n         name=\"Grocery\"\r\n         component={user ? GroceryListPresenter : LoginPresenter} //Grocery\r\n         listeners={{\r\n           tabPress: (e) => {\r\n             if (!user)\r\n               dispatch(setSnackbar(\"Please login to see your grocery list\"));\r\n           },\r\n         }}\r\n         options={{\r\n           title: \"Grocery list\",\r\n           tabBarIcon: ({ color }) => (\r\n             <TabBarIcon name=\"code\" color={color} tabName=\"Grocery list\" />\r\n           ),\r\n         }}\r\n       />\r\n     </BottomTab.Navigator>\r\n   );\r\n }\r\n \r\n /**\r\n  * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\r\n  */\r\n function TabBarIcon(props: {\r\n   name: React.ComponentProps<typeof FontAwesome>[\"name\"];\r\n   color: string;\r\n   tabName: string;\r\n }) {\r\n   if (props.tabName == \"Search\") {\r\n     return <Octicons name=\"search\" size={30} color=\"grey\" />;\r\n   } else if (props.tabName == \"Favorites\") {\r\n     return <FontAwesome name=\"heart\" size={30} color=\"grey\" />;\r\n   } else if (props.tabName == \"Grocery list\") {\r\n     return <MaterialIcons name=\"local-grocery-store\" size={30} color=\"grey\" />;\r\n   } else if (props.tabName == \"Profile\") {\r\n    return <MaterialCommunityIcons name=\"face-man-profile\" size={30} color=\"grey\" />;\r\n  }\r\n }","import React from \"react\";\r\nimport { Snackbar } from \"react-native-paper\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { hideSnackbar } from \"../redux\";\r\nexport default function SnackbarPresenter() {\r\n  const dispatch = useDispatch<any>();\r\n  const onDismissSnackBar = () => dispatch(hideSnackbar());\r\n  const visibility = useSelector((state: any) => state.snackbar.visibility);\r\n  const msg = useSelector((state: any) => state.snackbar.msg);\r\n\r\n  return (\r\n    <Snackbar\r\n      visible={visibility}\r\n      onDismiss={onDismissSnackBar}\r\n      duration={2000}\r\n      action={{\r\n        label: \"Dismiss\",\r\n      }}\r\n    >\r\n      {msg}\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { StatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\r\n\r\nimport useCachedResources from \"./hooks/useCachedResources\";\r\nimport useColorScheme from \"./hooks/useColorScheme\";\r\nimport Navigation from \"./navigation\";\r\nimport HeaderPresenter from \"./presenters/headerPresenter\";\r\nimport SnackbarPresenter from \"./presenters/snackbarPresenter\";\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n        <SnackbarPresenter />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","import { FontAwesome } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...FontAwesome.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","import { registerRootComponent } from \"expo\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nexport default function EntryPoint() {\r\n  return (\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n}\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(EntryPoint);\r\n"],"sourceRoot":""}